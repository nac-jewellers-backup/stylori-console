{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","ALLMASTERRINGSIZE","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","then","res","allMasterRingsSizes","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Productlist","responseCSV","setMasters","setFilterparams","setDataCSV","_fetchCSVdata","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","entries","fetchCSVdata","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","onAdd","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","trans_sku_list","sku_weight","diamond_type","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","colSpan","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","_showpricesummary","sku","price_summary","skuprice","obj","material_name","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56d813d7.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    orderdetails : '/orderdetails/:id',\n    userorders: '/orderlist/:userid',\n    userwishlist: '/userwishlist/:userid',\n    address: '/address/:userid',\n\n    \n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id',\n    editvoucher: '/voucherdiscount/:id',\n    masterstyles: '/masterstyles',\n    masterthemes: '/masterthemes',\n    masteroccassions: '/masteroccassions',\n    masterpaymentstatus : '/paymentstatus',\n    mastercollections: '/collections',\n    masterdesigns: '/designs',\n    masterorderstatus : '/orderstatus',\n    shippingzones : '/zones',\n    shipmentsettings : '/shipmensettings',\n    shippingattributes : '/shippingattributes',\n    masterdiamonds: '/diamonds',\n    diamondsettings: '/diamondsettings',\n    diamondshapes: '/diamondshapes',\n    earringbacking: '/earringbacking',\n    addshippingattributes : '/addshippingattributes',\n    addtaxattributes : '/addtaxattributes',\n    userconfiguration : '/userconfiguration',\n    masterroles : '/masterroles',\n    manageadminusers : '/manageadminusers',\n    goldpriceupdate : '/goldpriceupdate',\n        \nmanageusers : '/manageusers',\n\n    masterpages : '/masterpages',\n\n    gemsettings: '/gemstonesettings',\n    gemshapes: '/gemstoneshapes',\n    gemtypes: '/gemstonetypes',\n    gender: '/genders',\n    seo: '/seopriority',\n    taxsettings: '/taxsettings',\n    masterattributes: '/masterattributes',\n\n    masterstones: '/masterstones',\n    masterstonecolors: '/masterstonecolors',\n    masterstoneshapes: '/masterstoneshapes',\n    weights: '/weights',\n    customerdetails: '/customerdetails/:id',\n\n    \n    category: '/categories',\n    \n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name,\n    alias,\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(\n      condition: { material: $vendorCode }\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(\n      input: {\n        productId: $productId\n        productListPatch: { isactive: $isActive }\n      }\n    ) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    prodDescription\n    vendorCode\n    productVendorCode\n    sellingQty\n    maxBookingQty\n    gender\n    earringBacking\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n   \n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        availableStockQty\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\nexport {\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n};\n","import { gql } from \"apollo-boost\";\n\nexport const PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const USERORDERS = gql`\n  query($userid: UUID!) {\n    allOrders(\n      filter: { userProfileByUserProfileId: { id: { equalTo: $userid } } }\n    ) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n\n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  }\n`;\nexport const ORDERS = (orderid) => gql`query {\n  allOrders(filter:  ${\n    orderid\n      ? `{userProfileId: {equalTo: \"${orderid}\"}}`\n      : `{id: {isNull: false}}`\n  },orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`;\n\nexport const MATERIALMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const VOUCHERMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n\n    allMasterThemes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        shortCode\n        diamondColor\n        diamondClarity\n        id\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        name\n        alias\n        id\n      }\n    }\n  }\n`;\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`;\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api.stylori.com\";\nexport const API_URL = \"https://api.stylori.com\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.com/graphql\";\nexport const URL = \"https://console.stylori.com\";\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": \"*\"\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"x-access-token\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: \"\",\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\n      \"Diamond\",\n      \"Gold\",\n      \"Gemstone\",\n      \"Solitaire\",\n      \"Silver\",\n      \"Platinum\",\n    ],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25,\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: \"\",\n    prod_styles: \"\",\n    occassions: \"\",\n    collections: \"\",\n    stonecount: \"\",\n    stonecolour: \"\",\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n  );\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(\n          props.value.data,\n          props.value.mapper,\n          props.value.mappertype\n        ),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  React.useEffect(async () => {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }, []);\n\n  React.useEffect(() => {}, [productCtx]);\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n        } else {\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Male\"\n          // ) {\n          //   minvalue = 13;\n          //   maxvalue = 25;\n          //   default_size = 15;\n          // }\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Female\"\n          // ) {\n          //   minvalue = 8;\n          //   maxvalue = 23;\n          //   default_size = 12;\n          // }\n          // for (var i = minvalue; i < maxvalue; i++) {\n          //   selected_sizes.push({\n          //     value: i,\n          //     label: \"\" + i,\n          //   });\n          // }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: \"\",\n          product_type: \"\",\n          size,\n          selected_sizes: \"\",\n        });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({\n        ...productCtx,\n        [type]: value,\n        vendorleadtime: value.vendorDelivaryDays,\n      });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n \n\n  debugger;\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n\n    // for (var i = minvalue; i < maxvalue; i++) {\n    // selected_sizes.push(\"\" + i);\n    // sizes.push(\"\" + i);\n    // }\n\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\n     \n      // updateRingSize(\n      //   initailRingSize.sort(\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\n      //   )\n      // );\n    \n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    // }\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n      sizes,\n      selected_sizes,\n      default_size,\n    });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n\n      // for (var i = minvalue; i < maxvalue; i++) {\n      //   selected_sizes.push({\n      //     value: i,\n      //     label: \"\" + i,\n      //   });\n      // }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({\n      ...productCtx,\n      size,\n      [type]: e,\n      materials,\n      selected_sizes,\n    });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({\n      ...productCtx,\n      [type]: selectedOption,\n      steps,\n      material_names,\n    });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map(\n                        (option) => option.label\n                      )}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map(\n                                (option) => option.label\n                              )}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={option}\n                                    {...getTagProps({ index })}\n                                  />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={\n                                    productCtx.error_message.material_names\n                                  }\n                                  fullWidth\n                                  InputProps={{\n                                    ...params.InputProps,\n                                    type: \"search\",\n                                  }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map(\n                            (option) => option.label\n                          )}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{\n                            shrink: productCtx.vendorleadtime,\n                          }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">\n                            IsReorderable\n                          </FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel\n                              value=\"No\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"No\"\n                              labelPlacement=\"right\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\n                              \"default_metal_colour\"\n                            )}\n                            options={productCtx.metalcolour.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={\n                                  productCtx.error_message.default_metal_colour\n                                }\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\n                              \"default_metal_purity\"\n                            )}\n                            options={productCtx.metalpurity.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={\n                                  productCtx.error_message.default_metal_purity\n                                }\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"K\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"BA\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map(\n                              (option) => option.label\n                            )}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibityIcon from '@material-ui/icons/Visibility';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'vendor_code', label: 'vendor code' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  \n  }, [])\n  useEffect( () => {\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\n  \n  }, [props.filterparams])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n async function showproductdetails(prod_id){\n   let bodycontent = {\n    productid : prod_id\n   }\n\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\n    console.log(response)\n  //setProductlists(response.products.rows)\n window.open(response.url, '_blank');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                                    <VisibityIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                                    {/* <Link variant=\"body2\">  */}\n                                    {row.product_name}\n\n                                    {/* </Link>   */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  \n\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {URL} from '../../config'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href= {props.url ? URL+props.url : URL+\"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n      \n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  PRODUCTLIST,\n  PRODUCTCATEGORY,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      async function fetchCSVdata() {\n        responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n        let responseData = responseCSV.res_json;\n\n        if (responseCSV.statuscode === 200) {\n          let keyData = [];\n\n          for (const [key] of Object.entries(responseData[0])) {\n            keyData.push({ label: key, key: key });\n          }\n\n          console.log(keyData);\n          setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n        }\n      }\n      fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\n              <Button variant=\"contained\" color=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n        <ProductFilter\n          masters={masters}\n          onSearch={onSearch}\n          onFilter={onFilter}\n          dataCSV={dataCSV}\n        />\n        <Product filterparams={filterparams} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n    \n  window.open(orderurl);\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  debugger\nconsole.log(displaycolumnnames)\nconsole.log(displaycolumns)\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  TaxList,\n  VENDORLISTS,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\n    );\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl =\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button\n                variant=\"contained\"\n                onClick={() => searrchcontent()}\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button\n                variant=\"contained\"\n                onClick={() => addnewvendor()}\n                color=\"primary\"\n              >\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(\n                                            fileItem,\n                                            columnname.key,\n                                            \"add\"\n                                          );\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key]\n                                            .split(\",\")\n                                            .map((row, index) => (\n                                              <Badge\n                                                overlap=\"circle\"\n                                                anchorOrigin={{\n                                                  vertical: \"top\",\n                                                  horizontal: \"right\",\n                                                }}\n                                                badgeContent={\n                                                  <HighlightOffIcon\n                                                    fontSize=\"small\"\n                                                    onClick={() =>\n                                                      removeimage(\n                                                        row,\n                                                        columnname.key\n                                                      )\n                                                    }\n                                                  />\n                                                }\n                                              >\n                                                <Avatar\n                                                  alt=\"Remy Sharp\"\n                                                  src={row}\n                                                  className={classes.small}\n                                                />\n                                              </Badge>\n                                            ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      props.masters[columnname.mastervaluekey]\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 &&\n                                columnname.type != 6 &&\n                                columnname.type != 8 &&\n                                columnname.type != 9 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid\n                  container\n                  xs={12}\n                  md={3}\n                  className={classes.image_container}\n                >\n                  <img\n                    src=\"\"\n                    alt=\"Product Image\"\n                    className={classes.product_image}\n                  />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.product_sku}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.sku_weight}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.diamond_type}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>\n                        Diamond Weight (Ct)\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(\n                          item.trans_sku_list.discount_price -\n                            item.trans_sku_list.markup_price\n                        )} (${\n                          item.trans_sku_list.discount === null\n                            ? \"0\"\n                            : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\n            </p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    // let response = await sendNetworkRequest(\n    //   \"/managecategories\",\n    //   {},\n    //   taxcontent\n    // );\n    // getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport data from \"./data.json\"\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Userconfiguration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            User and Roles Management\n          </Typography>\n    </Grid>\n    \n    {data.options.map((menu, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={menu.url}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {menu.title}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Userconfiguration;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {NetworkContext}  from '../../context/NetworkContext';\n\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\nimport data from \"../menupages.json\"\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload,setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem('accesspages')\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    if(type === 'Pricing')\n    {\n      setGlobalCtx({ ...globalCtx, \"optionname\": type,selectedIndex: 5 , isExpand: !globalCtx.isExpand})\n\n    }else{\n      setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: false})\n\n    }\n\n  }\n  async function getmasterpages()\n  {\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n   // setPages(pageaccess)\n  // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n   //setIsreload(true)\n\n   localStorage.setItem('accesspages', pages);\n   localStorage.setItem('pagepermissions', pagepermissions);\n\n    window.location.reload()\n  }\n  React.useEffect( () => {\n   //alert(globalCtx.accesspages)\n   if(!accesspages)\n   {\n   // getmasterpages()\n\n   }else{\n   //  setIsreload(true)\n   }\n //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n},[])\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          {\n            data.menus.map((menuobj, index) => (\n              <>\n             {menuobj.submenu  ?  \n             <>\n          {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <>\n             <ListItem button  onClick={handleClick(menuobj.name)}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary={menuobj.name} />\n              {globalCtx.isExpand  && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n            {menuobj.submenu.map((submenuobj, subindex) => (\n              <>\n              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ?\n                          <Link underline='none' component={RouterLink} to={submenuobj.url}>\n              <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === subindex} onClick={event => handleListItemClick(event, subindex)}>\n                <ListItemIcon>\n                  <StarBorder />\n                </ListItemIcon>\n                <ListItemText primary={submenuobj.name} />\n              </ListItem>\n              </Link> : null }\n\n              </>\n            ))}\n\n            </List>\n            </Collapse> </>: null}\n            </>\n             :<> {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <Link underline='none' component={RouterLink} to={menuobj.url}>\n              <ListItem button key={\"Product List\"} selected={globalCtx.optionname === menuobj.name} onClick={handleClick(menuobj.name)} >\n              <ListItemIcon><InboxIcon /> </ListItemIcon>\n                <ListItemText primary={menuobj.name} />\n              </ListItem>\n              </Link> : null\n             } </>}\n              </>\n            ))\n          }\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setEditcontent({\n      id : gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n   setOpenedit(true)\n  }\n async function GemstoneSave(gemdata) {\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\n          bodydata['stoneCount'] = gemdata.gemstonecount;\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\n          bodydata['id'] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setEditcontent(null)\n      setOpenedit(false)\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditGemstone\n        diamond={editcontent}\n        onApply={GemstoneSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n        {props.displycolumns.indexOf('Quantity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.availableStockQty}\n                    id=\"qty\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"Qty\"\n                    label=\"Quantity\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('available_stock_qty')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.availableStockQty}</Typography>\n\n                  } </TableCell> : null}\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax1\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditPrice from './Components/EditPrice/EditPrice';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setEditcontent({ ...editcontent, [type]: e.target.value})\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n    setEditcontent({\n      id : diamondData.generatedSku,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n     //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n   // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(priceobj){\n    \n    var bodydata = {}\n      let list_data=props.variants;\n     list_data.map((skulistdata,index)=>{\n        if(priceobj.generatedSku === skulistdata.generatedSku){\n          skulistdata.costPrice = priceobj.editcostprice;\n          skulistdata.costPriceTax = priceobj.editcostpricetax;\n          skulistdata.sellingPrice =  priceobj.editsellingprice;\n          skulistdata.sellingPriceTax = priceobj.editsellingpricetax\n          skulistdata.markupPrice = priceobj.editmarkupprice\n          skulistdata.markupPriceTax = priceobj.editmarkuppricetax\n          skulistdata.discountPrice = priceobj.editdiscountprice\n          skulistdata.discountPriceTax = priceobj.editdiscountpricetax\n           bodydata['costPrice'] = parseFloat(editcontent.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(editcontent.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(editcontent.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(editcontent.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(editcontent.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(editcontent.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(editcontent.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(editcontent.editdiscountpricetax)\n           bodydata['marginOnSalePercentage'] = parseFloat(editcontent.marginOnSalePercentage)\n           bodydata['generatedSku'] = editcontent.id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n     sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      // setEditcontent(null)\n      // setOpenedit(false)\n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                }  </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                {props.displycolumns.indexOf('View') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\n</Button> </TableCell>: null }\n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditPrice\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = props.prod_id;\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n       \n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n    let res =   await axios.put(signedRequest, fileobj, options)\n    let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(isedit)\n      {\n      }else{\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(\n    columnnames.defaultvarients\n  );\n  const [displycolumns, setDisplycolumns] = React.useState(\n    columnnames.defaultvarientnames\n  );\n  const [pricingcolumns, setPricingcolumns] = React.useState(\n    columnnames.pricing\n  );\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\n    columnnames.defaultpricing\n  );\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\n    columnnames.defaultpricingnames\n  );\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid\n      ? evt.target.value\n      : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some(\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\n        )\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    };\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then((res) => res.json())\n      .then((diamondtypesData) => {\n        console.log(\n          diamondtypesData.data.allMasterDiamondTypes.nodes,\n          \"diamondtypesdata\"\n        );\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes:\n            diamondtypesData.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    let response = await sendNetworkRequest(\n      \"/editproduct\",\n      {},\n      productEditItem\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\n      \"/updateproductattribute\",\n      {},\n      esbody\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\n      \"/viewskupricesummary/\" + sku,\n      {},\n      null\n    );\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: { productId: prod_id },\n      }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        var genders = fatchvalue.data.productListByProductId.gender;\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr =\n          fatchvalue.data.productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor =\n          fatchvalue.data.productListByProductId.productMetalcoloursByProductId\n            .nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy:\n            fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist:\n            fatchvalue.data.productListByProductId.productGemstonesByProductSku\n              .nodes,\n          diamondlist:\n            fatchvalue.data.productListByProductId.productDiamondsByProductSku\n              .nodes,\n          variants:\n            fatchvalue.data.productListByProductId.transSkuListsByProductId\n              .nodes,\n          product_images:\n            fatchvalue.data.productListByProductId.productImagesByProductId\n              .nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor:\n            fatchvalue.data.productListByProductId\n              .productMetalcoloursByProductId.nodes,\n          productMetalPurity:\n            fatchvalue.data.productListByProductId.productPuritiesByProductId\n              .nodes,\n          oldproductMetalPurity:\n            fatchvalue.data.productListByProductId.productPuritiesByProductId\n              .nodes,\n          variant_size: sizes_arr,\n          productmaterials:\n            fatchvalue.data.productListByProductId.productMaterialsByProductSku\n              .nodes,\n          vendorcode: fatchvalue.data.productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes:\n            fatchvalue.data.productListByProductId.productThemesByProductId\n              .nodes,\n          prod_styles:\n            fatchvalue.data.productListByProductId.productStylesByProductId\n              .nodes, // productDiamondColor:diamondTypesArray,\n          occassions:\n            fatchvalue.data.productListByProductId.productOccassionsByProductId\n              .nodes,\n          collections:\n            fatchvalue.data.productListByProductId.productCollectionsByProductId\n              .nodes,\n          stonecount:\n            fatchvalue.data.productListByProductId.productStonecountsByProductId\n              .nodes,\n          stonecolour:\n            fatchvalue.data.productListByProductId.productStonecolorsByProductId\n              .nodes,\n          // productDiamondClarity:diamondClaritySku,\n        });\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(\n            JSON.stringify(fatchvalue.data.productListByProductId.productName)\n          ),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  debugger\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={3}\n          lg={3}\n          spacing={2}\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\n        >\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_categoy\n            }\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_type\n            }\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx.vendorcode}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"seo_text\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"seo_text\"\n            label=\"Minimum Order Quantity\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"url\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"url\"\n            label=\"Maximum Order Quantity\"\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.materialName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.productColor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.purity}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.label}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.themeName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.styleName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.occassionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.collectionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecount}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecolor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <FormControlLabel\n            label={\n              productCtx.isactive\n                ? \"Disable this product\"\n                : \"Enable this product\"\n            }\n            control={\n              <Switch\n                checked={productCtx.isactive}\n                onChange={handledisableproduct(\"isactive\")}\n                value=\"checkedA\"\n              />\n            }\n          />\n\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={(e) => saveProductEditItem()}\n              >\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={9}\n          lg={9}\n          spacing={2}\n          style={{ padding: \"15px\" }}\n        >\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Diamond Table\n          </Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\n              >\n                Gemstone Table\n              </Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            Variant Creation\n          </Grid>\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>\n                    Add New variant\n                  </Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                />\n              </ExpansionPanelDetails>\n              <Divider />\n              {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            </ExpansionPanel>\n          </Grid>\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              columnnames={columnnames.varients}\n              getColumnnames={getColumnnames}\n              displytype={1}\n            />{\" \"}\n          </Grid>\n\n          <Variants\n            variants={productCtx.variants}\n            columns={varientcolumns}\n            displycolumns={displycolumns}\n          />\n\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button\n              onClick={(e) => Skupricesync(prod_id)}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Price Run For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? (\n            <Pricedetails\n              onClose={dismisspricesummary}\n              values={pricesummaryvalues}\n            />\n          ) : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Product Images\n          </Grid>\n          {productCtx.productMetalColor.map((colors) => (\n            <Productimages\n              color={colors.productColor}\n              isdefault={colors.isdefault}\n              prodimages={productCtx.product_images}\n            />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport {\n    Dashboard, Login, Productupload, Configuration,Manageusers,Customerdetails,\n    Priceupdate, Vendorprice, Vendorlist, Markupprice,Goldpriceupdate,Userwishlist,\n    Productlist, Materiallist, Masterorderstatus, Shippingzones,Manageadminusers,\n    Shipmentsettings,Addshippingattributes,Userconfiguration,Masterroles,Masterscreens,Useraddresses,Addtaxattributes,OrderManagementDetails,\n    Materialmaster, CategoryList, Mastermetalcolors, Masterpurities, Masterdesigns, Shippingattributes, Voucherdiscount, Masterstyles, Masterthemes, Masteroccassions, Masterpaymentstatus, Salediscount, Masterweights, Taxsettings, Masterstones, Masterstonecolors, Masterstoneshapes, Masterattribute, Mastercategories, OrderList, Mastergemsettings, Seopriority, Mastergenders, Mastergemshapes, Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes, Taxsetup, Masterdiamonds, Masterdiamondsettings, DiscountList, VoucherdiscountListing, Mastercollections, Masterpages\n} from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport { NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext, ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return (\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute path={route.productupload} component={Productupload} />\n                    <PrivateRoute path={route.configuration} component={Configuration} />\n                    <PrivateRoute path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute path={route.productlist} component={Productlist} />\n                    <PrivateRoute path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n                    <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n                    <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute path={route.orderlist} component={OrderList} />\n                    <PrivateRoute path={route.userorders} component={OrderList} />\n                    <PrivateRoute path={route.address} component={Useraddresses} />\n\n              \n                    <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n                    <PrivateRoute path={route.category} component={Mastercategories} />\n                    <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n                    <PrivateRoute path={route.masterstones} component={Masterstones} />\n                    <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n                    <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n                    <PrivateRoute path={route.weights} component={Masterweights} />\n                    <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n                    <PrivateRoute path={route.masterroles} component={Masterroles} />\n                    <PrivateRoute path={route.masterpages} component={Masterscreens} />\n                    <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n                    <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n                    <PrivateRoute path={route.manageusers} component={Manageusers} />\n                    <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n                    <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n                    <PrivateRoute path={route.orderdetails} component={OrderManagementDetails} />\n\n                    \n                    \n                    <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n                    <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n                    <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n\n                    <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n                    <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n                    <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n                    <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n                    <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n                    <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n                    <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n                    <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n                    <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n                    <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n                    <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n                    <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n                    <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n                    <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n                    <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n                    <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\n\n\n                    \n\n                    <PrivateRoute path={route.gender} component={Mastergenders} />\n                    <PrivateRoute path={route.seo} component={Seopriority} />\n\n\n                    <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n                    <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n\n                </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}