{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","minorderqty","maxorderqty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","openFilter","setOpenFilter","components_Search_Search","FilterList_default","components_Filter_Filter","Productlist","setMasters","setFilterparams","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","onAdd","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","pathname","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","res","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","toLowerCase","button_title","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","colSpan","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discount","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","handleqtyChange","_forceindexproduct","_updateattribute","_saveProductEditItem","productEditItem","productName","earring_backing","prod_description","_showpricesummary","sku","price_summary","skuprice","obj","material_name","markup_price","discount_price","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","prodDescription","sellingQty","maxBookingQty","earringBacking","productMaterialsByProductSku","productVendorCode","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","rowsMax","materialName","esbody","endpoint","forceindexproduct","updateattribute","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc8793c2.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    orderdetails : '/orderdetails/:id',\n    userorders: '/orderlist/:userid',\n    userwishlist: '/userwishlist/:userid',\n    address: '/address/:userid',\n\n    \n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id',\n    editvoucher: '/voucherdiscount/:id',\n    masterstyles: '/masterstyles',\n    masterthemes: '/masterthemes',\n    masteroccassions: '/masteroccassions',\n    masterpaymentstatus : '/paymentstatus',\n    mastercollections: '/collections',\n    masterdesigns: '/designs',\n    masterorderstatus : '/orderstatus',\n    shippingzones : '/zones',\n    shipmentsettings : '/shipmensettings',\n    shippingattributes : '/shippingattributes',\n    masterdiamonds: '/diamonds',\n    diamondsettings: '/diamondsettings',\n    diamondshapes: '/diamondshapes',\n    earringbacking: '/earringbacking',\n    addshippingattributes : '/addshippingattributes',\n    addtaxattributes : '/addtaxattributes',\n    userconfiguration : '/userconfiguration',\n    masterroles : '/masterroles',\n    manageadminusers : '/manageadminusers',\n    goldpriceupdate : '/goldpriceupdate',\n        \nmanageusers : '/manageusers',\n\n    masterpages : '/masterpages',\n\n    gemsettings: '/gemstonesettings',\n    gemshapes: '/gemstoneshapes',\n    gemtypes: '/gemstonetypes',\n    gender: '/genders',\n    seo: '/seopriority',\n    taxsettings: '/taxsettings',\n    masterattributes: '/masterattributes',\n\n    masterstones: '/masterstones',\n    masterstonecolors: '/masterstonecolors',\n    masterstoneshapes: '/masterstoneshapes',\n    weights: '/weights',\n    customerdetails: '/customerdetails/:id',\n\n    \n    category: '/categories',\n    \n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList_1 = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;/*********** configuration query */\n\nconst TaxList =`\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList =`\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL =`\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS =`\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES =`\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER =`\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER =`\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER =`\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER =`\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER =`\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER =`\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER =`\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS =`\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES =`\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES =`\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name,\n    alias,\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES =`\nquery  {\n  allMasterProductCategories(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERPAGES =`\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER =`\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING =`\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\n\n\nconst MASTERSTONES =`\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES =`\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES= `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`\nconst ACTIVESHIPPINGZONES =`\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES =`\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS =`\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS =`\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES =`\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERATTRIBUTES =`\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS =`\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES =`\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES =`\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER =`\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES =`\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst SALEDISCOUNTS =gql`\nquery  {\n  allSaleDiscounts {\n    nodes {\n      id\n      discountName\n      discountType\n      discountValue\n      components\n      attributes\n      isActive\n      productAttributes\n      productAttributesText\n    }\n\n    totalCount\n  }\n}\n`;\n\n\nconst VOUCHERDISCOUNTS =gql`\nquery  {\n  allVouchers {\n    nodes {\n      id\n      name\n      code\n      uses\n      maxUses\n      isActive\n      voucherCodes\n      description\n      \n    }\n\n    totalCount\n  }\n}\n`;\n\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst CREATETAXSETUP = gql`\nmutation MyMutation($id:UUID!,$updatedAt:Date!,$createdAt:Date!,$taxValue:Double!,$taxName:String!,$hsnNumber:String!) {\n  __typename\n  createMasterTaxSetting(input: {masterTaxSetting: {id: $id, updatedAt: $updatedAt, createdAt: $createdAt, taxValue: $taxValue, taxName: $taxName, hsnNumber: $hsnNumber}}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst VOUCHERSTATUSEDIT = gql`\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\n    clientMutationId\n    voucher {\n      isActive\n    }\n  }\n}\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\n    clientMutationId\n    saleDiscount {\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETESALEDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteSaleDiscountById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteVoucherById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    prodDescription\n    vendorCode\n    productVendorCode\n    sellingQty\n    maxBookingQty\n    gender\n    earringBacking\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n   \n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        availableStockQty\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETESALEDISCOUNT,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES,\n    SALEDISCOUNTS,\n    VOUCHERDISCOUNTS,\n    DELETEVOUCHERDISCOUNT,\n    VOUCHERSTATUSEDIT,\n    DISCOUNTSTATUSEDIT,\n    MASTERMATERIAL,\n    MASTERMATERIALCOLORS,\n    MASTERPRODUCTPURITIES,\n    COLLECTIONMASTER,\n    DESIGNMASTER,\n    DIAMONDMASTER,\n    DIAMONDSETTINGS,\n    DIAMONDSHAPES,\n    MASTERPRODUCTTYPES,\n    MASTERGEMSETTINGS,\n    MASTERGEMSHAPES ,\n    MASTERGEMTYPES,\n    MASTERGENDER ,\n    SEOPRIORITIES,\n    CREATETAXSETUP,\n    TaxSettingList,\n    MASTERCATEGORIES,\n    EARRINGBACKING,\n    MASTERATTRIBUTES,\n    MASTERSTONESHAPES,\n    MASTERSTONECOLORS,\n    MASTERSTONES,\n    MASTERWEIGHTS,\n    THEMEMASTER,\n    STYLEMASTER,\n    OCCASSIONSMASTER,\n    PAYMENTSTATUSMASTER,\n    SHIPPINGZONES,\n    MASTERCOUNTRIES,\n    SHIPPINGCHARGES,\n    ACTIVESHIPPINGZONES,\n    MASTERPAGES,\n    GOLDPRICESETUPMASTER\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n export const BASE_URL = \"https://price-runner.stylori.com\"\n  export const API_URL = \"https://price-runner.stylori.com\"\n export const GRAPHQL_DEV_CLIENT = \"https://price-runner.stylori.com/graphql\"\n export const URL = \"https://console.stylori.com\"\n//  export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"x-access-token\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        minorderqty:\"\",\n        maxorderqty:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        earringbacking:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n  </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n \n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n    props.applyfilter(searchtext, value.name, producttype)\n\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n  props.applyfilter(searchtext, category, value.name  )\n\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}  >\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3} >\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibityIcon from '@material-ui/icons/Visibility';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'vendor_code', label: 'vendor code' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  \n  }, [])\n  useEffect( () => {\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\n  \n  }, [props.filterparams])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n async function showproductdetails(prod_id){\n   let bodycontent = {\n    productid : prod_id\n   }\n\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\n  //setProductlists(response.products.rows)\n window.open(response.url, '_blank');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                                    <VisibityIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                                    {/* <Link variant=\"body2\">  */}\n                                    {row.product_name}\n\n                                    {/* </Link>   */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  \n\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {URL} from '../../config'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href= {props.url ? URL+props.url : URL+\"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n      \n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Button } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport { Search, Filter } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480\n  },\n  filterButton: {\n    marginLeft: 'auto'\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductFilter = props => {\n  const { onFilter, onSearch,masters, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search\n          className={classes.search}\n          onSearch={onSearch}\n        />\n      </Grid>\n      <Grid item>\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} />  Filter\n        </Button>\n      </Grid>\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object\n};\n\nexport default ProductFilter;\n","import React,{useEffect, useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\nimport {  ProductFilter } from '../../components';\n\n\n\n\nexport const Productlist = withRouter(withApollo(props => {\n\n  const [masters, setMasters] = useState({});\n  const [filterparams, setFilterparams] = useState({});\n\n  function onFilter(filterobj)\n  {\n    let filtercontent = {}\n    \n    if(filterobj.product_category)\n    {\n      filtercontent['categoryname'] = filterobj.product_category.name\n     // alert(JSON.stringify(categoryname))\n\n    }\n    if(filterobj.product_type)\n    {\n      filtercontent['product_type'] = filterobj.product_type.name\n     // alert(JSON.stringify(categoryname))\n\n    }\n     setFilterparams({\n      ...filterparams,\n      ...filtercontent\n    })\n    // fetchadminusers()\n  }\n  function onSearch(searchtext)\n  {\n  //  alert(searchtext)\n     setFilterparams({\n      ...filterparams,\n      searchtext\n    })\n    // fetchadminusers()\n  }\n  useEffect( () => {\n\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n        \n        let product_categories = data.data.allMasterProductCategories.nodes\n        let product_types = data.data.allMasterProductTypes.nodes\n        setMasters({\n          product_categories,\n          product_types\n        })\n        \n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  \n  //alert(JSON.stringify(props.nameevent))\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Products\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"contained\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter}/>\n    <Product  filterparams= {filterparams}/>\n   \n    </Grid>\n  )\n}));\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.shortCode} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              width={headCell.type == 9 ? 300 : null}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label ? headCell.label : headCell.name}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n    \n  window.open(orderurl, '_blank');\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport '../../tmp.css'\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  }\n}));\n\nconst EditContent = props => {\n  const { diamond,attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond\n  }\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState('');\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  function previewimage(url)\n  {\n   \n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const toggleChecked = type =>  e => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] })\n\n  };\n  function handleInit() {\n    console.log('FilePond instance has initialised');\n}\n\nasync function uploadimagetoserver(bodaydata, keyvalue, uploadtype)\n  {\n      \n      let imagename = moment(new Date()).format('DD-MM-YYYYHH-MM-SS')\n     let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename,foldername: 'banner_images', product_id: null },false)\n      var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n     let imageurl = 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n \n     var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options)\n    let previmagenames = editcontent[keyvalue];\n    let previmages = []\n    if(previmagenames)\n    {\n      previmages = previmagenames.split(',')\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(',')  })\n\n  \n}\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           {props.title}\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        {attributes.map((columnname, index) => (\n        <>\n         {showpreview && (\n          <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n           // nextSrc={images[(photoIndex + 1) % images.length]}\n           // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => setShowpreview(false)}\n            onMovePrevRequest={() =>\n              alert('prev')\n            }\n            onMoveNextRequest={() =>\n              alert('next')\n            }\n          />\n        )}\n        <Grid container xs={12} spacing={2}>\n\n        {(!columnname.type || columnname.type == 1) && columnname.key != 'action'  ?\n         <Grid item xs={12}>\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                     /></Grid> : null}\n               {columnname.type === 2 &&  \n              <Grid item xs={12}>\n                <FormControlLabel\n                 label={columnname.key}\n                 labelPlacement=\"start\"\n                control={\n                  <Switch\n                    checked={editcontent[columnname.key]}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                    onChange={toggleChecked(columnname.key)}\n                  />\n        }\n       \n      />\n                </Grid> } \n              {columnname.type === 3 &&  \n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} fullWidth margin='dense' label={columnname.label} variant=\"outlined\" />}\n                />\n                </Grid> } \n\n                {columnname.type == 4 && \n                <Grid item xs={12}>\n                <Typography> {diamond[columnname.key]}</Typography> \n                </Grid>}\n\n                {columnname.type == 5 && \n                <Grid item xs={12}>\n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                // options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} fullWidth margin='dense' label={columnname.label} variant=\"outlined\" />}\n                /> </Grid> }\n\n\n            {columnname.type === 6 &&   \n            <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                     {columnname.controllabel}\n                </Button> </Grid>}  \n\n\n          {columnname.type === 9 && \n          <Grid container item xs={12}>\n            <Grid  item xs={12}>\n                        <AvatarGroup max={2}>\n                          {diamond[columnname.key] ? diamond[columnname.key].split(',').map((diamond, index) => (\n                        <Avatar alt=\"Remy Sharp\" src={diamond} onClick={() =>previewimage(diamond)} className={classes.small} />)) : null }</AvatarGroup>\n          </Grid>\n          <Grid  item xs={3}>\n            <FilePond\n                  style={{height:'100',width:'100'}}\n                  oninit={() => handleInit() }\n                  labelIdle='Add Banner Image'\n                  onaddfile={(error, fileItem)=> {\n                    if(!error)\n                    {\n                      uploadimagetoserver(fileItem, columnname.key, \"add\")\n\n                    }else\n                    {\n                     // alert(row[columnname.key])\n                    }\n                  }}\n                />            \n            </Grid>\n           </Grid>\n                     \n\n           }\n          </Grid>\n        \n        </>\n        \n        ))}\n        \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            color={\"primary\"}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n          <Button\n            onClick={() => onClose()}\n            variant=\"contained\"\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\n\nimport Badge from '@material-ui/core/Badge';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport EditContent from  './components/EditContent'\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\nimport 'filepond/dist/filepond.min.css';\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport moment from 'moment';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n     setIsadd(true) \n     setOpenedit(true)\n     //setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n    setOpenedit(true)\n   // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(content) {\n      props.onCreate(content)\n      setIsadd(false)\n      setEditcontent(null)\n      setOpenedit(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  //  setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : '')\n\n  }\n  function handleInit() {\n    console.log('FilePond instance has initialised');\n}\nfunction removeimage(imagename,keyvalue) {\n  let previmagenames = editcontent[keyvalue];\n  let newimages = []\n  let previmages = previmagenames.split(',')\n  previmages.forEach(element => {\n      if(element == imagename)\n      {\n\n      }else{\n        newimages.push(element)\n      }\n  });\n  setEditcontent({...editcontent, [keyvalue]: newimages.join(',')})\n}\n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\nconst [showpreview, setShowpreview] = useState(false);\nconst [previewurl, setpreviewurl] = useState('');\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n  \n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype)\n  {\n      \n      let imagename = moment(new Date()).format('DD-MM-YYYYHH-MM-SS')\n     let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename,foldername: 'banner_images', product_id: null },false)\n      var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n     let imageurl = 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n \n     var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options)\n    let previmagenames = editcontent[keyvalue];\n    let previmages = []\n    if(previmagenames)\n    {\n      previmages = previmagenames.split(',')\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(',')  })\n\n  \n}\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function previewimage(url)\n  {\n    setpreviewurl(url)\n    setShowpreview(true)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <>{showpreview && (\n      <Lightbox\n      class=\"fade\"\n      mainSrc={previewurl}\n       // nextSrc={images[(photoIndex + 1) % images.length]}\n       // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n        onCloseRequest={() => setShowpreview(false)}\n        onMovePrevRequest={() =>\n          alert('prev')\n        }\n        onMoveNextRequest={() =>\n          alert('next')\n        }\n      />\n    )}\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                          //  /  value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n        \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 9 ? \n                  \n                \n                         \n                      <>\n\n                  <FilePond\n                  \n                  oninit={() => handleInit() }\n                  labelIdle='Add Banner Image'\n                  \n                  onaddfile={(error, fileItem)=> {\n                    if(!error)\n                    {\n                      uploadimagetoserver(fileItem, columnname.key, \"add\")\n\n                    }else\n                    {\n                     // alert(row[columnname.key])\n                    }\n                  }}\n                /> \n                    <div className={classes.imagecontainer}>\n\n                {editcontent[columnname.key] ? editcontent[columnname.key].split(',').map((row, index) => ( <Badge\n        overlap=\"circle\"\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }} badgeContent={<HighlightOffIcon fontSize=\"small\" onClick={() => removeimage(row,columnname.key)} />\n              }><Avatar alt=\"Remy Sharp\" src={row} className={classes.small} /></Badge>)) : null }  \n              </div></>  :null\n              }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null} \n\n                      {columnname.type === 9 ? \n                        <AvatarGroup max={2}>\n                          {row[columnname.key] ? row[columnname.key].split(',').map((row, index) => (\n                        <Avatar alt=\"Remy Sharp\" src={row} onClick={() =>previewimage(row)} className={classes.small} />)) : null } className={classes.small} />)) : null }</AvatarGroup>\n                         : null}\n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                      {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8 && columnname.type != 9 ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n       {editcontent && <EditContent\n        diamond={editcontent}\n        attributes={props.columns}\n        title={props.title}\n        masters={props.masters}\n       onApply={Savevendor}\n       onClose={handleApplicationClose}\n        open={openedit}\n       />  }\n      </div>\n    </Paper>\n </>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../../../graphql/query';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst OrderInfo = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = ['Canceled', 'Completed', 'Rejected'];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        \n      })\n      .catch(console.error)\n  }\n  React.useEffect(() => {\n    getmaster()\n  },[])\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>{order.shopping_cart ? order.shopping_cart.cart_addresses ?\n                order.shopping_cart.cart_addresses.length > 0 ? order.shopping_cart.cart_addresses[0].addressline1 : '' : '' : '' }</div>\n                <div>{order.shopping_cart ? order.shopping_cart.cart_addresses ?\n                order.shopping_cart.cart_addresses.length > 0 ? order.shopping_cart.cart_addresses[0].addressline2 : '' : '' : '' }</div>\n                <div>{order.shopping_cart ? order.shopping_cart.cart_addresses ?\n                order.shopping_cart.cart_addresses.length > 0 ? order.shopping_cart.cart_addresses[0].city : '' : '' : '' }</div>\n                <div>{order.shopping_cart ? order.shopping_cart.cart_addresses ?\n                order.shopping_cart.cart_addresses.length > 0 ? order.shopping_cart.cart_addresses[0].state : '' : '' : '' }</div>\n                <div>{order.shopping_cart ? order.shopping_cart.cart_addresses ?\n                order.shopping_cart.cart_addresses.length > 0 ? order.shopping_cart.cart_addresses[0].country : '' : '' : '' }</div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>{order.shopping_cart ? order.shopping_cart.cart_addresses ?\n                order.shopping_cart.cart_addresses.length > 0 ? order.shopping_cart.cart_addresses[0].contact_number : '' : '' : '' }\n                </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n         \n            \n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format('DD MMM YYYY hh:mm a')}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n              <TextField\n                  fullWidth\n                  margin='dense'\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                /></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n              {order.shopping_cart ? order.shopping_cart.giftwraps ? order.shopping_cart.giftwraps.length > 0 ? order.shopping_cart.giftwraps[0].message : '' : '' : ''}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin='dense'\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map(option => (\n                    <option\n                      key={option.name}\n                      value={option.name}\n                    >\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin='dense'\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map(option => (\n                    <option\n                      key={option.id}\n                      value={option.name}\n                    >\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell><TextField\n                  fullWidth\n                  margin='dense'\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                /></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant='contained' color='primary' >\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport uuid from 'uuid/v1';\nimport moment from 'moment';\nimport  Page  from '../../components/Page';\nimport { Header, OrderInfo, OrderItems } from './components';\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const OrderManagementDetails = withRouter(props  => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id)\n  {\n    let response =  await sendNetworkRequest('/getorderdetails', {}, {order_id})\n    setOrder(response.orders)\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split('/')[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: 'FAD107',\n        promoCode: null,\n        value: '55.25',\n        currency: '$',\n        status: 'canceled',\n        customer: {\n          name: 'Ekaterina Tankova',\n          address: 'Street King William, 42456',\n          city: 'Montgomery',\n          country: 'United States'\n        },\n        items: [\n          {\n            id: uuid(),\n            name: 'Project Points',\n            cuantity: 25,\n            billing: 'monthly',\n            status: 'completed',\n            value: '50.25',\n            currency: '$'\n          },\n          {\n            id: uuid(),\n            name: 'Freelancer Subscription',\n            cuantity: 1,\n            billing: 'monthly',\n            status: 'completed',\n            value: '5.00',\n            currency: '$'\n          }\n        ],\n        created_at: moment()\n      })\n    };\n\n   // fetchOrder();\n    fetchorderdetails(com_id)\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Order Management Details\"\n    >\n      <Header order={order} />\n      <Grid\n        className={classes.container}\n        container\n        spacing={3}\n      >\n        <Grid\n          item\n          md={4}\n          xl={3}\n          xs={12}\n        >\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid\n          item\n          md={8}\n          xl={9}\n          xs={12}\n        >\n          <OrderItems order={order} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercategories = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercategories;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport data from \"./data.json\"\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Userconfiguration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            User and Roles Management\n          </Typography>\n    </Grid>\n    \n    {data.options.map((menu, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={menu.url}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {menu.title}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Userconfiguration;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {NetworkContext}  from '../../context/NetworkContext';\n\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\nimport data from \"../menupages.json\"\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload,setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem('accesspages')\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    if(type === 'Pricing')\n    {\n      setGlobalCtx({ ...globalCtx, \"optionname\": type,selectedIndex: 5 , isExpand: !globalCtx.isExpand})\n\n    }else{\n      setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: false})\n\n    }\n\n  }\n  async function getmasterpages()\n  {\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n   // setPages(pageaccess)\n  // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n   //setIsreload(true)\n\n   localStorage.setItem('accesspages', pages);\n   localStorage.setItem('pagepermissions', pagepermissions);\n\n    window.location.reload()\n  }\n  React.useEffect( () => {\n   //alert(globalCtx.accesspages)\n   if(!accesspages)\n   {\n   // getmasterpages()\n\n   }else{\n   //  setIsreload(true)\n   }\n //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n},[])\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          {\n            data.menus.map((menuobj, index) => (\n              <>\n             {menuobj.submenu  ?  \n             <>\n          {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <>\n             <ListItem button  onClick={handleClick(menuobj.name)}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary={menuobj.name} />\n              {globalCtx.isExpand  && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n            {menuobj.submenu.map((submenuobj, subindex) => (\n              <>\n              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ?\n                          <Link underline='none' component={RouterLink} to={submenuobj.url}>\n              <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === subindex} onClick={event => handleListItemClick(event, subindex)}>\n                <ListItemIcon>\n                  <StarBorder />\n                </ListItemIcon>\n                <ListItemText primary={submenuobj.name} />\n              </ListItem>\n              </Link> : null }\n\n              </>\n            ))}\n\n            </List>\n            </Collapse> </>: null}\n            </>\n             :<> {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <Link underline='none' component={RouterLink} to={menuobj.url}>\n              <ListItem button key={\"Product List\"} selected={globalCtx.optionname === menuobj.name} onClick={handleClick(menuobj.name)} >\n              <ListItemIcon><InboxIcon /> </ListItemIcon>\n                <ListItemText primary={menuobj.name} />\n              </ListItem>\n              </Link> : null\n             } </>}\n              </>\n            ))\n          }\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setEditcontent({\n      id : gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n   setOpenedit(true)\n  }\n async function GemstoneSave(gemdata) {\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\n          bodydata['stoneCount'] = gemdata.gemstonecount;\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\n          bodydata['id'] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setEditcontent(null)\n      setOpenedit(false)\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditGemstone\n        diamond={editcontent}\n        onApply={GemstoneSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n        {props.displycolumns.indexOf('Quantity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.availableStockQty}\n                    id=\"qty\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"Qty\"\n                    label=\"Quantity\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('available_stock_qty')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.availableStockQty}</Typography>\n\n                  } </TableCell> : null}\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax1\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditPrice from './Components/EditPrice/EditPrice';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setEditcontent({ ...editcontent, [type]: e.target.value})\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n    setEditcontent({\n      id : diamondData.generatedSku,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n     //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n   // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(priceobj){\n    \n    var bodydata = {}\n      let list_data=props.variants;\n     list_data.map((skulistdata,index)=>{\n        if(priceobj.generatedSku === skulistdata.generatedSku){\n          skulistdata.costPrice = priceobj.editcostprice;\n          skulistdata.costPriceTax = priceobj.editcostpricetax;\n          skulistdata.sellingPrice =  priceobj.editsellingprice;\n          skulistdata.sellingPriceTax = priceobj.editsellingpricetax\n          skulistdata.markupPrice = priceobj.editmarkupprice\n          skulistdata.markupPriceTax = priceobj.editmarkuppricetax\n          skulistdata.discountPrice = priceobj.editdiscountprice\n          skulistdata.discountPriceTax = priceobj.editdiscountpricetax\n           bodydata['costPrice'] = parseFloat(editcontent.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(editcontent.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(editcontent.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(editcontent.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(editcontent.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(editcontent.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(editcontent.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(editcontent.editdiscountpricetax)\n           bodydata['marginOnSalePercentage'] = parseFloat(editcontent.marginOnSalePercentage)\n           bodydata['generatedSku'] = editcontent.id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n     sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      // setEditcontent(null)\n      // setOpenedit(false)\n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                }  </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                {props.displycolumns.indexOf('View') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\n</Button> </TableCell>: null }\n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditPrice\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = props.prod_id;\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n       \n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n    let res =   await axios.put(signedRequest, fileobj, options)\n    let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(isedit)\n      {\n      }else{\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\nimport Pricedetails from './Pricedetails'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { sk } from 'date-fns/locale';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\nconst handleqtyChange = type => (event, value) => {\n     setProductCtx({ ...productCtx, [type]: event.target.value})\n}\n  function dismisspricesummary()\n  {\n    setIsshowpricesummary(false)\n  }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n  let displycolumnnames = [];\n\n    columnnames.forEach(element => {\n      displycolumnnames.push(element.name)\n      displycolumns.push(element)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumnnames)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n    setDisplycolumnnames(displycolumnnames)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function forceindexproduct() {\n    let bodydata = {\n      product_id : prod_id\n    }\n    let response =  await sendNetworkRequest('/reindex', {}, bodydata)\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"indexed successfully\",\n        severity:\"success\"\n      })\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    }   }\n  async function updateattribute() {\n    alert(\"update index\")\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender,\n      earring_backing : productCtx.earringbacking,\n      minorderqty : productCtx.minorderqty,\n      maxorderqty : productCtx.maxorderqty,\n      prod_description : productCtx.prod_description\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let esbody = {\n      \"product_id\": prod_id\n    }\n    var endpoint = '/reindex'\n    if(event.target.checked)\n    {\n      endpoint = '/esearch_forceindex'\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    let esresponse =  await sendNetworkRequest(endpoint, {}, esbody)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n async function showpricesummary(sku)\n  {\n    let response =  await sendNetworkRequest('/viewskupricesummary/'+sku, {}, null)\n    let price_summary = []\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach(element => {\n        let obj = {\n          component : element.material_name,\n          cost_price : element.cost_price,\n          selling_price : element.selling_price,\n          markup_price : element.markup,\n          discount_price : element.discount_price\n\n\n        }\n        price_summary.push(obj)\n    })\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach(element => {\n        let obj = {\n          component :  element.material_name,\n          cost_price : element.cost_price,\n          selling_price : element.selling_price,\n          markup_price : element.markup,\n          discount_price : element.discount_price\n\n\n        }\n        price_summary.push(obj)\n    })\n    let obj = {\n      component : \"SKU Price\",\n      cost_price : skuprice.cost_price,\n      selling_price : skuprice.selling_price,\n      markup_price : skuprice.markup_price,\n      discount_price : skuprice.discount_price\n\n\n    }\n    price_summary.push(obj)\n//alert(JSON.stringify(metalprice))\n //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary)\n    setIsshowpricesummary(true)\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        let gender_arr = []\n        if(genders)\n        {\n        genders = genders.split(',')\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n      }\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          prod_description: fatchvalue.data.productListByProductId.prodDescription,\n          minorderqty: fatchvalue.data.productListByProductId.sellingQty,\n          maxorderqty: fatchvalue.data.productListByProductId.maxBookingQty,\n          earringbacking : fatchvalue.data.productListByProductId.earringBacking,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          productvendorcode:fatchvalue.data.productListByProductId.productVendorCode,\n          height:fatchvalue.data.productListByProductId.height,\n          width:fatchvalue.data.productListByProductId.width,\n          length:fatchvalue.data.productListByProductId.length,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        \n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Description\"\n                        fullWidth\n                        multiline\n                        rowsMax={4}\n                        className={classes.helperinput}\n                        onChange={handleqtyChange('prod_description')}\n\n                        value={productCtx.prod_description ? productCtx.prod_description : \"\"}\n                        id=\"productdescription\"\n                       \n                        name=\"product description\"\n                        />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n   <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Product Vendor Code\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.productvendorcode ? productCtx.productvendorcode : \"\"}\n                        id=\"productvendorcode\"\n                       \n                        name=\"Product Vendor Code\"\n                        />\n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.minorderqty}\n                  id=\"minorderqty\"\n                  onChange={handleqtyChange('minorderqty')}\n                  name=\"minorderqty\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.maxorderqty}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  onChange={handleqtyChange('maxorderqty')}\n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Divider marginTop={2}/>\n                       \n                       <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Height\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.height ? productCtx.height : \"\"}\n                        id=\"Height\"\n                       \n                        name=\"Height\"\n                        />\n              <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Width\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.width ? productCtx.width : \"\"}\n                        id=\"productvendorcode\"\n                       \n                        name=\"Width\"\n                        />  \n                        <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Length\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.length ? productCtx.length : \"\"}\n                        id=\"productvendorcode\"\n                       \n                        name=\"Length\"\n                        />\n                    {productCtx.product_type == \"Earrings\" &&    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />}\n\n                        \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              <Grid container xs={12}>\n              <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => forceindexproduct()}>\n                  Force index\n             </Button>\n             </Grid>\n             <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => updateattribute()}>\n                  Attributes Mapping\n             </Button>\n             </Grid>\n              </Grid>\n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"32px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              </Grid>             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n              </Grid>\n              {productCtx.diamondlist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n               <DiamondDetails diamond={productCtx.diamondlist} /> </> : null }\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader title={\"Pricing Table\"} columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n              {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues}/> : null}\n              <Skupricing variants={productCtx.variants} onShow={showpricesummary} columns={displypricingcolumns} displycolumns={displycolumnnames} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} prod_id = {prod_id} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport {\n    Dashboard, Login, Productupload, Configuration,Manageusers,Customerdetails,\n    Priceupdate, Vendorprice, Vendorlist, Markupprice,Goldpriceupdate,Userwishlist,\n    Productlist, Materiallist, Masterorderstatus, Shippingzones,Manageadminusers,\n    Shipmentsettings,Addshippingattributes,Userconfiguration,Masterroles,Masterscreens,Useraddresses,Addtaxattributes,OrderManagementDetails,\n    Materialmaster, CategoryList, Mastermetalcolors, Masterpurities, Masterdesigns, Shippingattributes, Voucherdiscount, Masterstyles, Masterthemes, Masteroccassions, Masterpaymentstatus, Salediscount, Masterweights, Taxsettings, Masterstones, Masterstonecolors, Masterstoneshapes, Masterattribute, Mastercategories, OrderList, Mastergemsettings, Seopriority, Mastergenders, Mastergemshapes, Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes, Taxsetup, Masterdiamonds, Masterdiamondsettings, DiscountList, VoucherdiscountListing, Mastercollections, Masterpages\n} from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport { NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext, ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return (\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute path={route.productupload} component={Productupload} />\n                    <PrivateRoute path={route.configuration} component={Configuration} />\n                    <PrivateRoute path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute path={route.productlist} component={Productlist} />\n                    <PrivateRoute path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n                    <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n                    <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute path={route.orderlist} component={OrderList} />\n                    <PrivateRoute path={route.userorders} component={OrderList} />\n                    <PrivateRoute path={route.address} component={Useraddresses} />\n\n              \n                    <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n                    <PrivateRoute path={route.category} component={Mastercategories} />\n                    <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n                    <PrivateRoute path={route.masterstones} component={Masterstones} />\n                    <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n                    <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n                    <PrivateRoute path={route.weights} component={Masterweights} />\n                    <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n                    <PrivateRoute path={route.masterroles} component={Masterroles} />\n                    <PrivateRoute path={route.masterpages} component={Masterscreens} />\n                    <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n                    <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n                    <PrivateRoute path={route.manageusers} component={Manageusers} />\n                    <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n                    <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n                    <PrivateRoute path={route.orderdetails} component={OrderManagementDetails} />\n\n                    \n                    \n                    <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n                    <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n                    <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n\n                    <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n                    <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n                    <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n                    <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n                    <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n                    <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n                    <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n                    <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n                    <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n                    <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n                    <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n                    <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n                    <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n                    <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n                    <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n                    <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\n\n\n                    \n\n                    <PrivateRoute path={route.gender} component={Mastergenders} />\n                    <PrivateRoute path={route.seo} component={Seopriority} />\n\n\n                    <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n                    <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n\n                </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}