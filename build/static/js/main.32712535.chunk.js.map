{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Productlist","responseCSV","setMasters","setFilterparams","setDataCSV","_fetchCSVdata","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","entries","fetchCSVdata","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","onAdd","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","res","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","toLowerCase","button_title","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","trans_sku_list","sku_weight","diamond_type","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","colSpan","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","_showpricesummary","sku","price_summary","skuprice","obj","material_name","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32712535.chunk.js","sourcesContent":["const route = {\r\n    login: '/login',\r\n    dashboard: '/dashboard',\r\n    profile: '/profile',\r\n    productupload: '/productupload',\r\n    configuration: '/Configuration',\r\n    vendor: '/vendorlist',\r\n    productlist: '/productlist',\r\n    orderlist: '/orderlist',\r\n    orderdetails : '/orderdetails/:id',\r\n    userorders: '/orderlist/:userid',\r\n    userwishlist: '/userwishlist/:userid',\r\n    address: '/address/:userid',\r\n\r\n    \r\n    materiallist: '/material',\r\n    mastermaterial: '/materialmaster',\r\n    mastercolors: '/mastercolors',\r\n    masterpurities: '/masterpurities',\r\n    salediscountlist: '/salediscountlist',\r\n    voucherdiscountlist: '/voucherdiscountlist',\r\n\r\n    producttypes: '/producttypes',\r\n    voucherdiscount: '/voucherdiscount',\r\n    salediscount: '/salediscount',\r\n    priceupdate: '/priceupdate',\r\n    productAttributes: '/product_attributes',\r\n    diamondDetails: '/diamond_details',\r\n    gemstoneDetails:'/gemstone-details',\r\n    variants:'/variants',\r\n    images:'/images',\r\n    createVariant:'/create_variant',\r\n    materiallistpage:'/newmaterial',\r\n    editCategory:'/editcategory',\r\n    vendorPrice:'/vendorpricesetup',\r\n    markupPrice: '/markuppricesetup',\r\n    taxsetup: '/taxsetup',\r\n    editdiscount: '/salediscount/:id',\r\n    editvoucher: '/voucherdiscount/:id',\r\n    masterstyles: '/masterstyles',\r\n    masterthemes: '/masterthemes',\r\n    masteroccassions: '/masteroccassions',\r\n    masterpaymentstatus : '/paymentstatus',\r\n    mastercollections: '/collections',\r\n    masterdesigns: '/designs',\r\n    masterorderstatus : '/orderstatus',\r\n    shippingzones : '/zones',\r\n    shipmentsettings : '/shipmensettings',\r\n    shippingattributes : '/shippingattributes',\r\n    masterdiamonds: '/diamonds',\r\n    diamondsettings: '/diamondsettings',\r\n    diamondshapes: '/diamondshapes',\r\n    earringbacking: '/earringbacking',\r\n    addshippingattributes : '/addshippingattributes',\r\n    addtaxattributes : '/addtaxattributes',\r\n    userconfiguration : '/userconfiguration',\r\n    masterroles : '/masterroles',\r\n    manageadminusers : '/manageadminusers',\r\n    goldpriceupdate : '/goldpriceupdate',\r\n        \r\nmanageusers : '/manageusers',\r\n\r\n    masterpages : '/masterpages',\r\n\r\n    gemsettings: '/gemstonesettings',\r\n    gemshapes: '/gemstoneshapes',\r\n    gemtypes: '/gemstonetypes',\r\n    gender: '/genders',\r\n    seo: '/seopriority',\r\n    taxsettings: '/taxsettings',\r\n    masterattributes: '/masterattributes',\r\n\r\n    masterstones: '/masterstones',\r\n    masterstonecolors: '/masterstonecolors',\r\n    masterstoneshapes: '/masterstoneshapes',\r\n    weights: '/weights',\r\n    customerdetails: '/customerdetails/:id',\r\n\r\n    \r\n    category: '/categories',\r\n    \r\n\r\n}\r\n\r\nexport default route;","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// NOTABLE POINTS\r\n//  Min and Max\r\n// Email ID\r\n// Confirm Email ID\r\n// Mobile Number\r\n// Number\r\n// Password\r\n// Repeat Password\r\n// On Button Submit\r\n// On Moving Out\r\n// Live\r\n\r\nexport const Input = props => {\r\n  let {\r\n    isNumber = false,\r\n    pattern,\r\n    maxLength,\r\n    minLength,\r\n    helperText,\r\n    ...rest\r\n  } = props;\r\n  const defaultStyle = {\r\n    margin: \"dense\",\r\n    variant: \"outlined\",\r\n    'input-label': {\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      width: '100%',\r\n      color: 'red'\r\n    },\r\n  \r\n    'input': {\r\n      '&::placeholder': {\r\n        textOverflow: 'ellipsis !important',\r\n        color: 'red'\r\n      }\r\n    }\r\n  };\r\n\r\n  // INTEGRATE THEME HERE\r\n\r\n  const handleKeyPress = e => {\r\n    if (isNumber) {\r\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TextField\r\n                inputProps={{ pattern, maxLength, minLength  }}\r\n\r\n        style={{ width: \"100%\" }}\r\n        helperText={helperText}\r\n        onKeyPress={handleKeyPress}\r\n        {...defaultStyle}\r\n        {...rest}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isNumber: propTypes.bool\r\n};\r\n","import React,{ useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Page(props) {\r\n  const classes = useStyles();\r\n  const { title, children, ...rest } = props;\r\n\r\n  // useEffect(() => {\r\n  //   if (NODE_ENV !== 'production') {\r\n  //     return;\r\n  //   }\r\n  \r\n  //   if (window.gtag) {\r\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\r\n  //       page_path: router.location.pathname,\r\n  //       page_name: title\r\n  //     });\r\n  //   }\r\n  // }, [title, router]);\r\n  return (\r\n    <div {...rest}>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}","import { colors } from '@material-ui/core';\r\n\r\nconst buildGradient = (start, end) =>\r\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\r\n\r\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\r\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\r\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\r\nconst green = buildGradient(colors.green[400], colors.green[600]);\r\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\r\nconst red = buildGradient(colors.red[500], colors.red[700]);\r\n\r\nexport default {\r\n  grey,\r\n  blue,\r\n  indigo,\r\n  green,\r\n  orange,\r\n  red\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nconst PRODUCTCATEGORY = gql`query {\r\n    allMasterProductCategories{\r\n        nodes {\r\n            alias\r\n            name\r\n            id\r\n          }\r\n    }\r\n    allMasterProductTypes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterGenders {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n  allMasterMetalsColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterDiamondsSettings {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterDiamondsShapes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterThemes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n\r\n  allMasterStyles {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      id\r\n      alias\r\n      name\r\n    }\r\n  },\r\n  allMasterStonesColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterStones {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterMetalsColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterDiamondsColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterDiamondClarities {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterVendors {\r\n    nodes {\r\n      id\r\n      name\r\n      shortCode\r\n      vendorDelivaryDays\r\n    \r\n    }\r\n  }\r\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\r\n    nodes {\r\n      productSeries\r\n      id\r\n    }\r\n  },\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      alias\r\n      colorCode\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterGemstonesShapes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterEarringBackings {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      alias\r\n      id\r\n      nodeId\r\n      updatedAt\r\n    }\r\n  }\r\n  allMasterGemstonesSettings {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n  }`\r\nconst PRODUCTFILTERMASTER = gql`\r\nquery  {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      updatedAt\r\n      shortCode\r\n      name\r\n      id\r\n      createdAt\r\n      alias\r\n    }\r\n  }\r\n  allMasterProductTypes {\r\n    nodes {\r\n      updatedAt\r\n      shortCode\r\n      name\r\n      id\r\n      createdAt\r\n      alias\r\n      displayOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLPRODUCTLIST = gql`\r\nquery  {\r\n  allProductLists(first: 500)  {\r\n    nodes {\r\n      id\r\n      nodeId\r\n      productName\r\n      productCategory\r\n      productType\r\n      productId\r\n      createdAt\r\n      isactive\r\n      transSkuListsByProductId(condition: {isdefault: true}) {\r\n        nodes {\r\n          skuUrl\r\n          discount\r\n        }\r\n      }\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst PRODUCTLIST = (category) => gql`\r\nquery($Veiw: Int!, $Offset: Int!) {\r\n  allProductLists(first: $Veiw, offset: $Offset) {\r\n    nodes {\r\n      id\r\n      nodeId\r\n      productName,\r\n      productCategory,\r\n      productType\r\n      productId,\r\n      createdAt\r\n      isactive,\r\n      transSkuListsByProductId(condition: {isdefault: true}) {\r\n        nodes {\r\n          skuUrl\r\n          discount\r\n        }\r\n      }\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst VENDORLISTS = gql`\r\nquery  {\r\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\n\r\nconst TaxList_1 = gql`\r\nquery  {\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;/*********** configuration query */\r\n\r\nconst TaxList =`\r\nquery  {\r\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      igst\r\n      cgst\r\n      sgst\r\n      productAttributes\r\n      displayAttributes\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst TaxSettingList =`\r\nquery  {\r\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      value\r\n      hsnCode\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERMATERIAL =`\r\nquery  {\r\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERMATERIALCOLORS =`\r\nquery  {\r\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPRODUCTPURITIES =`\r\nquery  {\r\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DESIGNMASTER =`\r\nquery  {\r\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    alias\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n    id\r\n  }\r\n}\r\n}`;\r\nconst COLLECTIONMASTER =`\r\nquery  {\r\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst OCCASSIONSMASTER =`\r\nquery  {\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst STYLEMASTER =`\r\nquery  {\r\nallMasterStyles {\r\n  nodes {\r\n    alias\r\n    createdAt\r\n    name\r\n    id\r\n    updatedAt\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}`;\r\nconst THEMEMASTER =`\r\nquery  {\r\n  allMasterThemes {\r\n    nodes {\r\n      createdAt\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst DIAMONDMASTER =`\r\nquery  {\r\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    diamondClarity\r\n    diamondColor\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\n\r\nconst PAYMENTSTATUSMASTER =`\r\nquery  {\r\n  allOrderStatusMasters {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      isActive\r\n      name\r\n      updatedAt\r\n    }\r\n  },\r\n  allPaymentStatusMasters {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      id\r\n      isActive\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DIAMONDSETTINGS =`\r\nquery  {\r\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\nconst DIAMONDSHAPES =`\r\nquery  {\r\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERPRODUCTTYPES =`\r\nquery  {\r\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    certificate\r\n    name\r\n    id\r\n    alias\r\n    isActive\r\n    isFilter\r\n    shortCode\r\n    displayOrder\r\n  }\r\n}\r\n}`;\r\nconst MASTERCATEGORIES =`\r\nquery  {\r\n  allMasterProductCategories(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\nconst MASTERPAGES =`\r\nquery  {\r\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      pagename\r\n      displayname\r\n      id\r\n    }\r\n  }\r\n}`;\r\nconst GOLDPRICESETUPMASTER =`\r\nquery  {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\nconst EARRINGBACKING =`\r\nquery  {\r\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      updatedAt\r\n      createdAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\n\r\n\r\nconst MASTERSTONES =`\r\nquery  {\r\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCOUNTRIES =`\r\nquery  {\r\n  allMasterCountries(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      iso\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGCHARGES= `query{\r\n  allShippingCharges {\r\n    nodes {\r\n      id\r\n      name\r\n      isActive\r\n      isCart\r\n      chargeType\r\n      rangeFrom\r\n      rangeTo\r\n      shipmentCharge\r\n      productAttributes\r\n      displayAttributes\r\n      shippingZoneByZoneId {\r\n        name\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n}`\r\nconst ACTIVESHIPPINGZONES =`\r\nquery  {\r\n  allShippingZones(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGZONES =`\r\nquery  {\r\n  allShippingZones {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n      shippingZoneCountriesByZoneId {\r\n        nodes {\r\n          countryId\r\n          createdAt\r\n          id\r\n          masterCountryByCountryId {\r\n            name\r\n            nicename\r\n            id\r\n          }\r\n        }\r\n      }\r\n      shippingChargesByZoneId {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst MASTERSTONECOLORS =`\r\nquery  {\r\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERWEIGHTS =`\r\nquery  {\r\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      createdAt\r\n      name\r\n      id\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONESHAPES =`\r\nquery  {\r\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      createdAt\r\n      alias\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\nconst MASTERATTRIBUTES =`\r\nquery  {\r\nallAttributeMasters {\r\n  nodes {\r\n    name\r\n    isFilter\r\n    id\r\n    isSearch\r\n    isActive\r\n    filterPosition\r\n    isTopMenu\r\n    createdAt\r\n    shortCode\r\n    updatedAt\r\n  }\r\n}\r\n}`;\r\n\r\nconst MASTERGEMSETTINGS =`\r\nquery  {\r\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERGEMSHAPES =`\r\nquery  {\r\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGEMTYPES =`\r\nquery  {\r\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      colorCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGENDER =`\r\nquery  {\r\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst SEOPRIORITIES =`\r\nquery  {\r\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      priority\r\n      seoText\r\n      seoUrl\r\n      imageUrl\r\n        mobileImageUrl\r\n      id\r\n      attributeName\r\n      attributeValue\r\n    }\r\n  }\r\n}`;\r\n/**************** */\r\n\r\n\r\n// const PRODUCTLIST  = (category) =>  gql`\r\n// query  {\r\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\r\n//     nodes {\r\n//       id\r\n//       nodeId\r\n//       productName,\r\n//       productCategory,\r\n//       productType\r\n//       productId,\r\n//       createdAt\r\n//       isactive,\r\n//       transSkuListsByProductId(condition: {isdefault: true}) {\r\n//         nodes {\r\n//           skuUrl\r\n//           discount\r\n//         }\r\n//       }\r\n//     }\r\n//     totalCount\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst GOLDPRICELIST = gql`\r\nquery MyQuery($vendorCode: String!) {\r\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\r\n    nodes {\r\n      purity\r\n      vendorCode\r\n      updatedAt\r\n      sellingPriceType\r\n      sellingPrice\r\n      material\r\n      id\r\n      createdAt\r\n      costPrice\r\n    }\r\n    totalCount\r\n  }\r\n}`;\r\n\r\nconst DIAMONDMARKUP = gql`\r\nquery MyQuery($vendorCode: String!) {\r\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      updatedAt\r\n      sellingPriceMin\r\n      sellingPriceMax\r\n      material\r\n      category\r\n      productType\r\n      markupValue\r\n      markupType\r\n      id\r\n      createdAt\r\n    }\r\n    totalCount\r\n  }\r\n}`;\r\n\r\nconst DIAMONDPRICELIST = gql`\r\nquery MyQuery($vendorCode: String!) {\r\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\r\n    nodes {\r\n      costPrice\r\n      createdAt\r\n      diamondClarity\r\n      diamondColour\r\n      id\r\n      sellingPrice\r\n      sellingPriceType\r\n      updatedAt\r\n      vendorCode\r\n    }\r\n    totalCount\r\n  }\r\n}`;\r\n// const CATGORYLIST = gql`\r\n// query {\r\n//   allMasterMaterials {\r\n//     nodes {\r\n//       name\r\n//       shortCode\r\n//     }\r\n// }`;\r\n\r\n\r\nconst CATGORYLIST =gql`\r\nquery  {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      alias\r\n      name\r\n      shortCode\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst PRODUCTTYPEMASTER =gql`\r\nquery  {\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n      shortCode\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\n\r\nconst MATERIALMASTER =gql`\r\nquery  {\r\n  allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      name\r\n      shortCode\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst MASTERCOLORS =gql`\r\nquery  {\r\n  allMasterMetalsColors {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst SALEDISCOUNTS =gql`\r\nquery  {\r\n  allSaleDiscounts {\r\n    nodes {\r\n      id\r\n      discountName\r\n      discountType\r\n      discountValue\r\n      components\r\n      attributes\r\n      isActive\r\n      productAttributes\r\n      productAttributesText\r\n    }\r\n\r\n    totalCount\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst VOUCHERDISCOUNTS =gql`\r\nquery  {\r\n  allVouchers {\r\n    nodes {\r\n      id\r\n      name\r\n      code\r\n      uses\r\n      maxUses\r\n      isActive\r\n      voucherCodes\r\n      description\r\n      \r\n    }\r\n\r\n    totalCount\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\nconst MASTERPURITIES =gql`\r\nquery  {\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst VENDORLIST =`\r\nquery {\r\n  allMasterVendors {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n  }\r\n}`;\r\n\r\nconst METALMASTER =`\r\nquery {\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\nconst MASTERCATEGORY =`\r\nquery {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\nconst GEMSTONEMASTER =`\r\nquery {\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n      colorCode\r\n    }\r\n  }  \r\n}`;\r\n\r\n\r\n\r\nconst MAKINGCHARGEPRICELIST = gql`\r\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\r\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\r\n    nodes {\r\n      weightStart\r\n      weightEnd\r\n      vendorCode\r\n      updatedAt\r\n      sellingPriceType\r\n      rateType\r\n      purity\r\n      priceType\r\n      price\r\n      material\r\n      id\r\n      createdAt\r\n    }\r\n    totalCount\r\n  }\r\n}`;\r\nconst GEMPRICELIST = gql`\r\nquery MyQuery($vendorCode: String!) {\r\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\r\n    nodes {\r\n      price\r\n      rateType\r\n      priceType\r\n      sellingPriceType\r\n      vendorCode\r\n      weightEnd\r\n      weightStart\r\n      updatedAt\r\n      id\r\n      createdAt\r\n      gemstoneType\r\n    }\r\n    totalCount\r\n  }\r\n}`;\r\nconst PRODUCTLISTSTATUSEDIT = gql`\r\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\r\n  __typename\r\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\r\n    clientMutationId\r\n    productList {\r\n      isactive\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATETAXSETUP = gql`\r\nmutation MyMutation($id:UUID!,$updatedAt:Date!,$createdAt:Date!,$taxValue:Double!,$taxName:String!,$hsnNumber:String!) {\r\n  __typename\r\n  createMasterTaxSetting(input: {masterTaxSetting: {id: $id, updatedAt: $updatedAt, createdAt: $createdAt, taxValue: $taxValue, taxName: $taxName, hsnNumber: $hsnNumber}}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\nconst VOUCHERSTATUSEDIT = gql`\r\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\r\n  __typename\r\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\r\n    clientMutationId\r\n    voucher {\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst DISCOUNTSTATUSEDIT = gql`\r\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\r\n  __typename\r\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\r\n    clientMutationId\r\n    saleDiscount {\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEMARKUPPRICE = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deletePricingMarkupById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEGOLDPRICE = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\nconst DELETESALEDISCOUNT = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deleteSaleDiscountById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEVOUCHERDISCOUNT = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deleteVoucherById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEMAKINGCHARGE = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEGEMCHARGE = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\nconst DELETEDIAMONDCHARGE = gql`\r\nmutation MyMutation($elementId:UUID!) {\r\n  __typename\r\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\nconst PRODUCTDIAMONDTYPES = `\r\nquery{\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTEDIT = `\r\nquery MyQuery($productId: String!) {\r\n  productListByProductId(productId: $productId) {\r\n    productMetalcoloursByProductId {\r\n      nodes {\r\n        productColor\r\n        id\r\n      }\r\n    }\r\n    productName\r\n    productType\r\n    vendorCode\r\n    gender\r\n    isactive\r\n    productMaterialsByProductSku {\r\n      nodes {\r\n        materialName\r\n      }\r\n    }\r\n    productDiamondsByProductSku {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColour\r\n        diamondSettings\r\n        diamondShape\r\n        diamondType\r\n        id\r\n        stoneCount\r\n        stoneWeight\r\n      }\r\n    }\r\n    productGemstonesByProductSku {\r\n      nodes {\r\n        gemstoneSetting\r\n        gemstoneShape\r\n        gemstoneSize\r\n        gemstoneType\r\n        gemstonsSize\r\n        id\r\n        stoneCount\r\n        stoneWeight\r\n      }\r\n    }\r\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\r\n      nodes {\r\n        id\r\n        imagePosition\r\n        productId\r\n        imageUrl\r\n        ishover\r\n        isdefault\r\n        productColor\r\n      }\r\n    }\r\n    productPuritiesByProductId {\r\n      nodes {\r\n        purity\r\n        id\r\n      }\r\n    }\r\n    productThemesByProductId(condition: {isActive: true}) {\r\n      nodes {\r\n        themeName\r\n        id\r\n      }\r\n    }\r\n    productStonecolorsByProductId {\r\n      nodes {\r\n        id\r\n        stonecolor\r\n      }\r\n    }\r\n    productStylesByProductId(condition: {isActive: true}) {\r\n      nodes {\r\n        styleName\r\n        id\r\n      }\r\n    }\r\n    productCollectionsByProductId {\r\n      nodes {\r\n        collectionName\r\n        id\r\n      }\r\n    }\r\n    productOccassionsByProductId(condition: {isActive: true}) {\r\n      nodes {\r\n        occassionName\r\n        id\r\n      }\r\n    }\r\n    productStonecountsByProductId {\r\n      nodes {\r\n        id\r\n        stonecount\r\n      }\r\n    }\r\n    transSkuListsByProductId {\r\n      nodes {\r\n        skuSize\r\n        diamondType\r\n        metalColor\r\n        purity\r\n        productId\r\n        skuWeight\r\n        generatedSku,\r\n        costPrice\r\n        costPriceTax\r\n        discountPrice\r\n        discountPriceTax\r\n        markupPrice\r\n        marginOnSalePercentage\r\n        markupPriceTax\r\n        marginOnSalePercentage\r\n        sellingPrice\r\n        discountDesc\r\n        sellingPriceTax\r\n        isReadyToShip\r\n        discount\r\n        isActive\r\n        isdefault,\r\n        vendorDeliveryTime\r\n        id\r\n        isActive\r\n        transSkuDescriptionsBySkuId {\r\n          nodes {\r\n            skuDescription\r\n            certificate\r\n            ringsizeImage\r\n          }\r\n        }\r\n      }\r\n    }\r\n    productCategory\r\n    sizeVarient\r\n  }\r\n}\r\n\r\n`;\r\n  export {\r\n    PRODUCTCATEGORY,\r\n    PRODUCTLIST,\r\n    PRODUCTEDIT,\r\n    PRODUCTLISTSTATUSEDIT,\r\n    PRODUCTDIAMONDTYPES,\r\n    GOLDPRICELIST,\r\n    DIAMONDPRICELIST,\r\n    GEMPRICELIST,\r\n    MAKINGCHARGEPRICELIST,\r\n    VENDORLIST,\r\n    ALLPRODUCTLIST,\r\n    DIAMONDMARKUP,\r\n    PRODUCTFILTERMASTER,\r\n    METALMASTER,\r\n    GEMSTONEMASTER,\r\n    MASTERCATEGORY,\r\n    DELETEMARKUPPRICE,\r\n    DELETEMAKINGCHARGE,\r\n    DELETEGEMCHARGE,\r\n    DELETEGOLDPRICE,\r\n    DELETESALEDISCOUNT,\r\n    CATGORYLIST,\r\n    DELETEDIAMONDCHARGE,\r\n    VENDORLISTS,\r\n    TaxList,\r\n    PRODUCTTYPEMASTER,\r\n    MATERIALMASTER,\r\n    MASTERCOLORS,\r\n    MASTERPURITIES,\r\n    SALEDISCOUNTS,\r\n    VOUCHERDISCOUNTS,\r\n    DELETEVOUCHERDISCOUNT,\r\n    VOUCHERSTATUSEDIT,\r\n    DISCOUNTSTATUSEDIT,\r\n    MASTERMATERIAL,\r\n    MASTERMATERIALCOLORS,\r\n    MASTERPRODUCTPURITIES,\r\n    COLLECTIONMASTER,\r\n    DESIGNMASTER,\r\n    DIAMONDMASTER,\r\n    DIAMONDSETTINGS,\r\n    DIAMONDSHAPES,\r\n    MASTERPRODUCTTYPES,\r\n    MASTERGEMSETTINGS,\r\n    MASTERGEMSHAPES ,\r\n    MASTERGEMTYPES,\r\n    MASTERGENDER ,\r\n    SEOPRIORITIES,\r\n    CREATETAXSETUP,\r\n    TaxSettingList,\r\n    MASTERCATEGORIES,\r\n    EARRINGBACKING,\r\n    MASTERATTRIBUTES,\r\n    MASTERSTONESHAPES,\r\n    MASTERSTONECOLORS,\r\n    MASTERSTONES,\r\n    MASTERWEIGHTS,\r\n    THEMEMASTER,\r\n    STYLEMASTER,\r\n    OCCASSIONSMASTER,\r\n    PAYMENTSTATUSMASTER,\r\n    SHIPPINGZONES,\r\n    MASTERCOUNTRIES,\r\n    SHIPPINGCHARGES,\r\n    ACTIVESHIPPINGZONES,\r\n    MASTERPAGES,\r\n    GOLDPRICESETUPMASTER\r\n  }","import { gql } from 'apollo-boost';\r\n\r\nexport const PRODUCTCATEGORY = gql`query {\r\n    allMasterProductCategories{\r\n        nodes {\r\n            alias\r\n            name\r\n            id\r\n          }\r\n    }\r\n    allMasterProductTypes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterStonesColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterStones {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n  }`\r\n\r\n  export const USERORDERS = gql`query($userid: UUID!) {\r\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n          \r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  }`\r\nexport const ORDERS = orderid  => gql`query {\r\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\r\n    nodes {\r\n      paymentMode\r\n      paymentStatus\r\n      updatedAt\r\n      createdAt\r\n      awbNumber\r\n      cartId\r\n      orderStatus\r\n      comments\r\n      id\r\n      shoppingCartByCartId {\r\n        shoppingCartItemsByShoppingCartId {\r\n          nodes {\r\n            transSkuListByProductSku {\r\n              generatedSku\r\n              productListByProductId {\r\n                productCategory\r\n                productType\r\n                productCollectionsByProductId {\r\n                  nodes {\r\n                    collectionName\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        giftwrapsByCartId {\r\n          nodes {\r\n            message\r\n            giftFrom\r\n            giftTo\r\n          }\r\n        }\r\n        \r\n        cartAddressesByCartId {\r\n          nodes {\r\n            firstname\r\n            contactNumber\r\n            addressline1\r\n            addressline2\r\n            city\r\n            pincode\r\n            state\r\n          }\r\n        }\r\n        userProfileByUserprofileId {\r\n          firstName\r\n          mobile\r\n          email\r\n          userAddressesByUserProfileId {\r\n            nodes {\r\n              contactNumber\r\n            }\r\n          }\r\n          \r\n        }\r\n      }\r\n      paymentDetailsByOrderId {\r\n        nodes {\r\n          paymentResponse\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}`\r\n\r\nexport const MATERIALMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const VOUCHERMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      \r\n      \r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\nexport const SHIPPINGMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allShippingCharges(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nexport const TAXMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\r\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\r\nimport apidata from '../screens/Productupload/data.json';\r\n\r\nexport const productCategory = {\r\n    query: PRODUCTCATEGORY,\r\n    mapper: (response) => {\r\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.shortCode,\r\n            label: _.name,\r\n            title: _.name\r\n        }))\r\n        const material = response.allMasterMaterials.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label:_.name\r\n        }))\r\n        const gender = response.allMasterGenders.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            display: _.name +' ('+_.shortCode+' )'\r\n        }))\r\n        \r\n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const themes = response.allMasterThemes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            themeName:_.name\r\n        }))\r\n        const styles = response.allMasterStyles.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            styleName: _.name\r\n        }))\r\n        \r\n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            occassionName: _.name\r\n        }))\r\n        const collections = response.allMasterCollections.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            collectionName: _.name\r\n        }))\r\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            stonecolor:_.name\r\n        }))\r\n        const stones = response.allMasterStones.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            stonecount:_.name\r\n        }))\r\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\r\n            ..._,\r\n            productColor: _.name,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            purity: _.name\r\n        }))\r\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n\r\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const productseries = response.allProductLists.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.productSeries,\r\n        }))\r\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.shortCode,\r\n            label:_.name\r\n        }))\r\n        \r\n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.alias,\r\n            label:_.name\r\n        }))\r\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.alias,\r\n            label:_.name\r\n        }))\r\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.alias,\r\n            label:_.name\r\n        }))\r\n\r\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.diamondColor+_.diamondClarity,\r\n            label:_.diamondColor+_.diamondClarity\r\n        }))\r\n\r\n        \r\n        \r\n        const metals = apidata.metals\r\n        \r\n        return { category,\r\n             product_type, \r\n             material, \r\n             gender,\r\n             vendorcode, \r\n             metalcolour, \r\n             metals, \r\n             diamondsettings,\r\n             diamondshapes,\r\n            themes,\r\n            styles,\r\n            occasions,\r\n            collections,\r\n            gemstonecolor,\r\n            stones,\r\n            metalpurity,\r\n            diamondcolors,\r\n            diamondtypes,\r\n            diamondclarities,\r\n            productseries,\r\n            gemstontypes,\r\n            gemstonshapes,\r\n            gemstonesettings,\r\n            earringbacking\r\n        }\r\n    }\r\n}\r\n\r\nexport const orderList = {\r\n    query: ORDERS,\r\n    mapper: (response) => {\r\n        const orders = response.allOrders.nodes.map(_ => ({\r\n            ..._\r\n                }))\r\n               \r\n        return {\r\n            orders\r\n        }\r\n    }\r\n}\r\nexport const userOders = {\r\n    query: USERORDERS,\r\n    mapper: (response) => {\r\n        const orders = response.allOrders.nodes.map(_ => ({\r\n            ..._\r\n                }))\r\n               \r\n        return {\r\n            orders\r\n        }\r\n    }\r\n}\r\nexport const materialMaster = {\r\n    query: VOUCHERMASTER,\r\n    mapper: (response) => {\r\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\r\n            ..._\r\n                }))\r\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\r\n                    ..._\r\n        }))\r\n\r\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const collections = response.allMasterCollections.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\r\n            ..._,\r\n            \r\n        }))\r\n        const styles = response.allMasterStyles.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n\r\n        const themes = response.allMasterThemes.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\r\n            ..._,\r\n            \"alias\": _.shortCode,\r\n            \"diamondtype\":_.diamondColor+_.diamondClarity\r\n        }))\r\n        \r\n\r\n        \r\n        // alert(JSON.stringify(product_types))\r\n        return {\r\n            vendors,\r\n            product_categories,\r\n            product_types,\r\n            materials,\r\n            pricing_components,\r\n            collections,\r\n            purities,\r\n            styles,\r\n            themes,\r\n            occations,\r\n            diamondtypes\r\n        }\r\n    }\r\n\r\n\r\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\r\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\r\nexport const BASE_URL = \"https://api-staging.stylori.com\";\r\nexport const API_URL = \"https://api-staging.stylori.com\";\r\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\";\r\nexport const URL = \"https://console-staging.stylori.com\";\r\n\r\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\r\n// export const API_URL = \"http://localhost:8000\"\r\n// export const BASE_URL = \"http://localhost:8000\"\r\n// export const URL = \"https://localhost:3000\"\r\n","import React from 'react';\r\nimport { productCategory } from '../services/mapper';\r\nimport { API_URL } from '../config';\r\nimport { isString } from 'util';\r\n\r\nconst TOKEN = 'accesstoken'\r\n\r\nconst initialNetworkCtx = {\r\n    networkCtx: {\r\n        mapper: productCategory,\r\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\r\n        notRequested: true\r\n    },\r\n    setNetworkCtx: () => null,\r\n    sendNetworkRequest: () => null\r\n}\r\n\r\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\r\n    url = API_URL+url;\r\n    console.info('URL', url, data)\r\n    const method = data ? 'POST' : 'GET', \r\n        headers = {\r\n            'Content-Type': 'application/json'\r\n        };\r\n    let resdata = null;\r\n    if(auth){\r\n        const token = localStorage.getItem(TOKEN)\r\n        if(token) headers[\"x-access-token\"] = token\r\n       // else window.location = '/'\r\n    }\r\n    const response = await fetch(url, method === 'GET' ? {method} : ({\r\n        method, body: isString(data) ? data : JSON.stringify(data), headers\r\n    }))\r\n\r\n    if(response.status < 400){\r\n        resdata = await response.json();\r\n    } else {\r\n        resdata = await response.json();\r\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\r\n        // {\r\n        //    if(!resdata.auth)\r\n        //    {\r\n        //     //alert(resdata.message)\r\n        //    }\r\n        // }else{\r\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n        // }\r\n    }\r\n    resdata['statuscode'] = response.status\r\n\r\n    return resdata;\r\n}\r\n\r\nexport const NetworkContext = React.createContext(initialNetworkCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n\r\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\r\n\r\n    return(\r\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\r\n            {props.children}\r\n        </NetworkContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { GRAPHQL_DEV_CLIENT } from '../config';\r\n\r\nconst globalCtxInitial = {\r\n    globalCtx: {\r\n        auth:{\r\n            loggedIn: false,\r\n            userData: {}\r\n        },\r\n        sideBarOpen: false,\r\n        isExpand: false,\r\n        selectedIndex: 0,\r\n        gqlClient: GRAPHQL_DEV_CLIENT\r\n    },\r\n    setGlobalCtx: () => null\r\n}\r\n\r\nexport const GlobalContext = React.createContext(globalCtxInitial);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = props => {\r\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n    return(\r\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst productuploadCtxInitial = {\r\n    productCtx: {  \r\n        product_categoy: \"\",\r\n        steps: ['Step1', 'Step2','Step6'],\r\n        product_type:\"\",\r\n        productname:\"\",\r\n        material:\"\",\r\n        product_type_shortcode: \"\",\r\n        category:[],\r\n        metalColour:\"\",\r\n        metalpurities:\"\",\r\n        isExpand:false,\r\n        selectedgender:\"\",\r\n        selected_metal_colour:{},\r\n        gender: {},\r\n        product_gender:\"\",\r\n        vendorcode: \"\",\r\n        productseries:[],\r\n        size:0,\r\n        sizes:[],\r\n        selected_sizes:[],\r\n        metal:{\r\n            value : 1,\r\n            label:'Diamond'\r\n        },\r\n        materials:[\r\n                \"Diamond\",\r\n                \"Gold\",\r\n                \"Gemstone\",\r\n                \"Solitaire\",\r\n                \"Silver\",\r\n                \"Platinum\"\r\n        ],\r\n        gemstontypes:\"\",\r\n        gemstonshapes:\"\",\r\n        product_code: \"\",\r\n        isactive: false,\r\n        gemstonelist:[],\r\n        diamondlist:[],\r\n        variants:[],\r\n        oldproductMetalColor:[],\r\n        oldproductMetalPurity:[],\r\n        productMetalColor:[],\r\n        productMetalPurity:[],\r\n        productDiamondColor:[],\r\n        productDiamondClarity:[],\r\n        productDiamondTypes:[],\r\n        productImages:[],\r\n        productDiamondTypesArray:[],\r\n        oldproductDiamondTypesArray:[],\r\n        productmaterials:[],\r\n        createVariantList:[],\r\n        editVariants:[],\r\n        editDiamondLists:[],\r\n        editGemstoneLists:[],\r\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \r\n        ],\r\n        variant_size:[],\r\n        gemstonetype:\"\",\r\n        gemstoneshape:\"\",\r\n        gemstonesettings:\"\",\r\n        gemstonesize:\"\",\r\n        gemstonecount:\"\",\r\n        gemstoneweight:\"\",\r\n        stonetype:\"\",   \r\n\r\n         editleadtime: \"\",\r\n         editreadytoship:false,\r\n         editisdefault: false,\r\n         editisactive: false,\r\n\r\n\r\n         editcostprice: 0,\r\n         editsellingprice:0,\r\n         editmarkupprice: 0,\r\n         editdiscountprice: 0,\r\n         editcostpricetax: 0,\r\n         editsellingpricetax:0,\r\n         editmarkuppricetax: 0,\r\n         editdiscountpricetax: 0,\r\n\r\n        diamondclarity:\"\",\r\n        diamondcolor:\"\",\r\n        diamondsettings:\"\",\r\n        diamondshape:\"\",\r\n        diamondcount:\"\",\r\n        diamondweight:\"\",\r\n        metalindex: -1,\r\n        themes:\"\",\r\n        prod_styles:\"\",\r\n        occassions:\"\",\r\n        collections:\"\",\r\n        stonecount:\"\",\r\n        stonecolour:\"\",\r\n        product_images:{},\r\n        metalcolour:[],\r\n        metal_purity:[],\r\n        metalpurity:[],\r\n        metal_color:0,\r\n        metal_weight:0,\r\n        diamond_colour:0,\r\n        diamond_clarity:0,\r\n        metal_height:0,\r\n        metal_width:0,\r\n        metal_length:0,\r\n        metal_object:0,\r\n        diamondtype:0,\r\n        metals:[],\r\n        error_message:{ }\r\n    },\r\n    masterData: {},\r\n    setProductCtx: () => null\r\n}\r\n\r\nexport const ProductContext = React.createContext(productuploadCtxInitial);\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\r\n\r\n    return productuploadCtxInitial.productCtx;\r\n}\r\n\r\nexport const ProductProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('productCtx s',productCtx);\r\n    },[productCtx.material])\r\n\r\n    return(\r\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </ProductContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst materialCtxInitial = {\r\n    materialCtx: {\r\n        \r\n    },\r\n    materialMaster: {\r\n        materials: []\r\n    },\r\n    setMaterialCtx: () => null\r\n}\r\n\r\nexport const MaterialContext = React.createContext(materialCtxInitial);\r\n\r\nexport const MaterialConsumer = MaterialContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\r\n\r\n    return materialCtxInitial.materialCtx;\r\n}\r\n\r\nexport const MaterialProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',materialCtx);\r\n    },[materialCtx.material])\r\n\r\n    return(\r\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </MaterialContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst voucherCtxInitial = {\r\n    voucherCtx: {\r\n        voucher:\"\",\r\n        attrobj:{}\r\n    },\r\n    voucherMaster: {\r\n        materials: []\r\n    },\r\n    setVoucherCtx: () => null\r\n}\r\n\r\nexport const VoucherContext = React.createContext(voucherCtxInitial);\r\n\r\nexport const VoucherConsumer = VoucherContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\r\n\r\n\r\n    return voucherCtxInitial.voucherCtx;\r\n}\r\n\r\nexport const VoucherProvider = props => {\r\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',voucherCtx);\r\n    },[voucherCtx.voucher])\r\n\r\n    return(\r\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </VoucherContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst orderCtxInitial = {\r\n    orderCtx: {\r\n        \r\n    },\r\n    orderMaster: {\r\n        orders: []\r\n    },\r\n    setOrderCtx: () => null\r\n}\r\n\r\nexport const OrderContext = React.createContext(orderCtxInitial);\r\n\r\nexport const OrderConsumer = OrderContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \r\n    if(Object.keys(apiData).length === 0) return {};\r\n \r\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\r\n\r\n    return orderCtxInitial.orderCtx;\r\n}\r\n\r\nexport const OrderProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('orderCtx s',orderCtx);\r\n    },[orderCtx.order])\r\n\r\n    return(\r\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </OrderContext.Provider>      \r\n    )\r\n}","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport gradients from '../../../../utils/gradients';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { GlobalContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\nvar validate = require(\"validate.js\");\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n   \r\n  },\r\n  card: {\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 8, 4)\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    color: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32\r\n  },\r\n  loginForm: {\r\n\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  person: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst LoginForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showmessage, setShowmessage] = React.useState(\"\");\r\n  const [iserror, setIserror] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n   const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if(formState.isValid)\r\n    {\r\n      //alert(JSON.stringify(formState.values))\r\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\r\n   \r\n   if(signinobj.statuscode === 200)\r\n   {\r\n    localStorage.setItem('accesstoken', signinobj.accessToken);\r\n\r\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n    pageaccess.pages.forEach(element => {\r\n      pages.push(element.pageurl)\r\n      // pagepermissions[element.pageurl] = {\r\n      //   isread : element.is_view,\r\n      //   iswrite : element.is_write\r\n      // }\r\n      if(element.is_write)\r\n      {\r\n        pagepermissions.push(element.pageurl)\r\n      }\r\n    });\r\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\r\n\r\n    localStorage.setItem('accesspages', pages);\r\n    localStorage.setItem('pagepermissions', pagepermissions);\r\n\r\n    \r\n    props.history.push('/productlist')\r\n\r\n\r\n   }else\r\n   {\r\n\r\n    setShowmessage(signinobj.message)\r\n    setOpen(true);\r\n   }\r\n  \r\n    }else{\r\n      alert(\"has some error\")\r\n    }\r\n\r\n\r\n    //alert(JSON.stringify(formState))\r\n    // dispatch(login());\r\n    //alert(\"i am here\")\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.content}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n        Log in Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n        {/* Sign in on the internal platform */}\r\n        </Typography>\r\n        \r\n        <form\r\n          {...rest}\r\n          className={clsx(classes.root, className)}\r\n          autoComplete={\"off\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className={classes.fields}>\r\n            <TextField\r\n              error={hasError('email')}\r\n              fullWidth\r\n              helperText={hasError('email') ? formState.errors.email[0] : null}\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              \r\n              onChange={handleChange}\r\n              value={formState.values.email || ''}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={hasError('password')}\r\n              fullWidth\r\n              helperText={\r\n                hasError('password') ? formState.errors.password[0] : null\r\n              }\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={formState.values.password || ''}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.submitButton}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n        Log in\r\n          </Button>\r\n          <Snackbar open={open} autoHideDuration={6000}\r\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\r\n          onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n             {showmessage}\r\n            </Alert>\r\n      </Snackbar>\r\n        </form>\r\n       \r\n      </CardContent>\r\n     \r\n    </Card>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Input} from '../../components/Input.js'\r\nimport Page from '../../components/Page'\r\n\r\nimport \"./Login.css\"\r\nimport { LoginForm } from './components';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class Login extends React.Component {\r\n\r\n   \r\n  render() {\r\n  return (\r\n    <Page\r\n    className='root'\r\n      title=\"Login\"\r\n    >\r\n    <LoginForm />\r\n        </Page>\r\n         \r\n  );\r\n}\r\n}\r\n\r\n\r\n  \r\n  export default (withRouter(Login));","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {Input} from '../../components/Input.js'\r\n\r\nimport \"./Dashboard.css\"\r\n\r\nclass Dashboard_ extends React.Component {\r\n  \r\n   \r\n  render() {\r\n  return (\r\n    <Container className=\"root\" component=\"main\">\r\n    <Input />\r\n  </Container>\r\n         \r\n  );\r\n}\r\n}\r\n\r\nexport const Dashboard = withRouter(Dashboard_);\r\n  export default Dashboard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction FullLoader(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <div className={classes.loader}>\r\n\r\n      <CircularProgress />\r\n\r\n      </div>\r\n\r\n      </DialogContent>\r\n      \r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default FullLoader;","import React,{ useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\n\r\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport {Input} from '../../components/Input.js'\r\nimport { ProductContext } from '../../context';\r\nimport FullLoader from '../../components/Loader'\r\nimport \"./Productupload.css\"\r\nimport Select from 'react-select';\r\nimport \"./floating_dropdown.css\"\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 }\r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n  dropdownlayout: {\r\n    '& .menu':{\r\n      position: \"Relative !important\",\r\n    }\r\n  },\r\n  helperinput: {\r\n    '& .MuiFormHelperText-root':{\r\n      color: \"#e53935\",\r\n    }\r\n  },\r\n  \r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  dateField: {\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\n  \r\nexport default function AddressForm(props) {\r\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n    const classes = useStyles();\r\n    const { className, ...rest } = props;\r\n\r\n    React.useEffect(() => {\r\n    },[productCtx])\r\n    // const handleChange = selectedOption => {\r\n    \r\n    // };\r\n    const handlesizeChange  = selectedOption => {\r\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\r\n    };\r\n    const handlevendorChange  = selectedOption => {\r\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\r\n    };\r\n   \r\n    const changeproducttype = type => (event, newvalue) => {\r\n      setProductCtx({ ...productCtx, product_type: newvalue})\r\n\r\n    }\r\n    const handlechange = type =>  selectedOption => {\r\n      if(type === 'product_type')\r\n      {\r\n        if(selectedOption)\r\n        {\r\n          var size = \"\";\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      var selected_sizes = [];\r\n      var default_size = 0;\r\n      if(selectedOption.shortCode === 'K')\r\n      {\r\n\r\n        selected_sizes.push(\r\n          {\r\n            value:\"XS\",\r\n            label:\"XS\"\r\n          }\r\n        )\r\n        selected_sizes.push(\r\n          {\r\n            value:\"S\",\r\n            label:\"S\"\r\n          }\r\n        )\r\n        selected_sizes.push(\r\n          {\r\n            value:\"M\",\r\n            label:\"M\"\r\n          }\r\n        )\r\n        selected_sizes.push(\r\n          {\r\n            value:\"L\",\r\n            label:\"L\"\r\n          }\r\n        )\r\n      }  else\r\n      {\r\n\r\n      \r\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\r\n      {\r\n        minvalue = 13\r\n        maxvalue = 25\r\n        default_size = 15\r\n      }\r\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\r\n      {\r\n        minvalue = 8\r\n       maxvalue = 23\r\n       default_size = 12\r\n      }\r\n      \r\n      for(var i=minvalue; i<maxvalue;i++)\r\n      {\r\n        selected_sizes.push(\r\n          {\r\n            value:i,\r\n            label:\"\"+i\r\n          }\r\n        )\r\n      }\r\n    }\r\n      \r\n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\r\n        }else{\r\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\r\n\r\n        }  \r\n    }else{\r\n        setProductCtx({ ...productCtx, [type]: selectedOption})\r\n\r\n      }\r\n    };\r\n    const handleTextChange = type => e => {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n    }\r\n    const handleoptionChange = type => (event, value) => {\r\n     \r\n      if(type === 'vendorcode')\r\n      {\r\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\r\n\r\n      }else\r\n      {\r\n        setProductCtx({ ...productCtx, [type]: value})\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n    const switchisorderable = event => {\r\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\r\n\r\n     \r\n\r\n    };\r\n\r\n\r\n    const purityChange = type => selectedOption => {\r\n      setProductCtx({ ...productCtx, [type]:selectedOption })\r\n  \r\n    }\r\n \r\n\r\n    const handleGenderChange = type => (event, value)  => {\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      var selected_sizes=[]\r\n      var sizes = [];\r\n      var default_size = 0\r\n      if(productCtx.product_type.shortCode === 'K')\r\n      {\r\n\r\n       \r\n        default_size = \"XS\"\r\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\r\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\r\n      }  else\r\n      {\r\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\r\n    {\r\n      minvalue = 13\r\n      maxvalue = 26\r\n      default_size = ''+15\r\n    }\r\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\r\n    {\r\n     minvalue = 8\r\n      maxvalue = 24\r\n      default_size = ''+12\r\n\r\n    }\r\n\r\n    for(var i=minvalue; i<maxvalue;i++)\r\n    {\r\n      selected_sizes.push(\r\n        ''+i\r\n      )\r\n      sizes.push(\r\n        ''+i\r\n      )\r\n    }\r\n  }\r\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    const handleMaterialChange = type => (event, value)  => {\r\n      var steps = ['Step1', 'Step2','Step6']\r\n      if(value)\r\n      {\r\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\r\n            {\r\n            \r\n            if(steps.indexOf('Step3') === -1)\r\n            {\r\n              steps = ['Step1', 'Step2','Step3','Step6']\r\n\r\n            }\r\n\r\n          }\r\n        }\r\n      setProductCtx({ ...productCtx, [type]:value,steps})\r\n\r\n    }\r\n\r\n    const handleInputChange = type => e => {\r\n\r\n                var size = productCtx.size;\r\n                var materials = productCtx.materials;\r\n                var selected_sizes = productCtx.selected_sizes;\r\n\r\n            if(type === 'selectedgender')\r\n                {\r\n                  var minvalue = 0;\r\n                  var maxvalue = 0;\r\n                  selected_sizes=[]\r\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\r\n                {\r\n                  size = \"13-25\"\r\n                  minvalue = 13\r\n                  maxvalue = 26\r\n                }\r\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\r\n                {\r\n                 size = \"8-18\"\r\n                 minvalue = 8\r\n                  maxvalue = 19\r\n\r\n                }\r\n\r\n                for(var i=minvalue; i<maxvalue;i++)\r\n                {\r\n                  selected_sizes.push(\r\n                    {\r\n                      value:i,\r\n                      label:\"\"+i\r\n                    }\r\n                  )\r\n                }\r\n              }\r\n\r\n              if(type === 'product_categoy')\r\n              {\r\n                  if(e.target.value === 'Platinum Jewellery')\r\n                  {\r\n                    materials.push('Platinum Jewellery')\r\n                    var index = materials.indexOf('Silver Jewellery');\r\n\r\n                    if(index >= 0)\r\n                    {\r\n                        materials.splice(index, 1)\r\n                    }\r\n                  }else if(e.target.value === 'Silver Jewellery')\r\n                  {\r\n                    materials.push('Silver Jewellery')\r\n                    var index1 = materials.indexOf('Platinum Jewellery');\r\n                    if(index1 >= 0)\r\n                    {\r\n                      materials.splice(index1, 1)\r\n                    }\r\n                  }else{\r\n                    var indexval = materials.indexOf('Silver Jewellery');\r\n\r\n                    if(indexval >= 0)\r\n                    {\r\n                        materials.splice(indexval, 1)\r\n                    }\r\n                    indexval = materials.indexOf('Platinum Jewellery');\r\n                    if(indexval >= 0)\r\n                    {\r\n                      materials.splice(indexval, 1)\r\n                    }\r\n                  }\r\n              }\r\n\r\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\r\n\r\n              \r\n      }\r\n\r\n\r\n    const materialChange = type => selectedOption => {\r\n      //   let material = { ...productCtx.material, [type]: selectedOption }\r\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\r\n      //   if(material.material)\r\n      //   {\r\n      //   material.material.forEach(element => {\r\n        let material_names = []\r\n          if(selectedOption)\r\n          {\r\n\r\n            selectedOption.forEach(element => {\r\n              material_names.push(element.name)\r\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\r\n            {\r\n            \r\n            if(steps.indexOf('Step3') === -1)\r\n            {\r\n              steps = ['Step1', 'Step2','Step3','Step6']\r\n\r\n            }\r\n\r\n          }\r\n            });\r\n            \r\n        }\r\n      //   });\r\n      // }\r\n\r\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\r\n\r\n    }\r\n    const keyPress =type => e => {\r\n      const re = /^[a-zA-Z \\b]+$/;\r\n      if (e.target.value === '' || re.test(e.target.value)) {\r\n        setProductCtx({ ...productCtx, [type]: e.target.value})\r\n      }\r\n      \r\n   }\r\n    \r\n  return (\r\n    <>\r\n    <div>\r\n      {/* <FullLoader /> */}\r\n    <Grid container  spacing={1}>  \r\n    <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Product Information 1\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={1}>  \r\n      <Grid item xs={12} sm={12} spacing={1}>\r\n                      <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.productname}\r\n                          id=\"productname\"\r\n                          error = {productCtx.error_message.productname}\r\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\r\n                          name=\"productname\"\r\n                          label=\"Product Name\"\r\n                          onChange={keyPress('productname')}\r\n                          />\r\n          \r\n      </Grid> \r\n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.product_categoy}\r\n                      onChange={handleoptionChange('product_categoy')}\r\n                      options={productCtx.masterData.category.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Product Category\"\r\n                        margin=\"dense\"\r\n                        error = {productCtx.error_message.product_categoy}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n\r\n            </Grid>\r\n      <Grid    item xs={12} sm={6} spacing={1}>\r\n            \r\n                  <Autocomplete\r\n                    id=\"product_type\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    defaultValue={productCtx.product_type}\r\n                    options={productCtx.masterData.product_type}\r\n                    onChange={handleoptionChange('product_type')}\r\n                    \r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Select Product Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    error = {productCtx.error_message.product_type}\r\n                    fullWidth\r\n\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                  />\r\n            </Grid>\r\n\r\n     \r\n          \r\n      </Grid>\r\n      </CardContent>\r\n      </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n\r\n      { productCtx.product_type ? <>\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Product Information 2\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>   \r\n      { productCtx.product_type ? <>              \r\n              <Grid item xs={12} sm={6}>\r\n  \r\n                  <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.material_names}\r\n                      options={productCtx.masterData.material.map(option => option.label)}\r\n                      onChange={handleMaterialChange('material_names')}\r\n\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Select Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      error = {productCtx.error_message.material_names}\r\n                      fullWidth\r\n  \r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n              </Grid>\r\n           \r\n          \r\n  \r\n          \r\n  \r\n                </> : null } \r\n                <Grid item xs={12} sm={6}>\r\n                         <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.selectedgender}\r\n                    options={productCtx.masterData.gender.map(option => option.label)}\r\n                    onChange={handleGenderChange('selectedgender')}\r\n\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Select Gender\"\r\n                    margin=\"dense\"\r\n                    error = {productCtx.error_message.selectedgender}\r\n\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\r\n\r\n            </Grid>  \r\n      <Grid item xs={6} sm={6}>      \r\n                  <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel = {option => option.label}\r\n                    defaultValue={productCtx.metalpurity}\r\n                    options={productCtx.masterData.metalpurity}\r\n                    onChange={handleoptionChange('metalpurity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Metal Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    error = {productCtx.error_message.metalpurity}\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\r\n          \r\n        </Grid>\r\n        <Grid item xs={6} sm={6}>\r\n      \r\n                <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    defaultValue={productCtx.metalcolour}\r\n                    options={productCtx.masterData.metalcolour}\r\n                    onChange={handleoptionChange('metalcolour')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Metal Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    error = {productCtx.error_message.metalcolour}\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n</Grid>\r\n      \r\n        </Grid>\r\n      </CardContent>\r\n      </Card>\r\n      </> : null}\r\n</Grid>\r\n</Grid>\r\n<Grid container  spacing={1}>  \r\n\r\n<Grid item xs={12} sm={6}>\r\n{ productCtx.product_type ? <>\r\n  <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Vendor Information\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={1}>  \r\n      <Grid item xs={12} sm={6}>\r\n                  <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.vendorcode}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.vendorcode}\r\n                    onChange={handleoptionChange('vendorcode')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Select Vendor Code\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    error = {productCtx.error_message.vendorcode}\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n            </Grid> \r\n            <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      label=\"Vendor Product Code\"\r\n                      fullWidth\r\n                      className={classes.helperinput} \r\n                      value={productCtx.productvendorcode}\r\n                      error = {productCtx.error_message.productvendorcode}\r\n                      id=\"productvendorcode\"\r\n                      name=\"productvendorcode\"\r\n                      onChange={handleTextChange('productvendorcode')}\r\n                      />\r\n\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      label=\"Vendor Lead Time\"\r\n                      fullWidth\r\n                      className={classes.helperinput} \r\n                      error = {productCtx.error_message.vendorleadtime}\r\n                      value={productCtx.vendorleadtime}\r\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\r\n                      id=\"vendorleadtime\"\r\n                      name=\"vendorleadtime\"\r\n                      onChange={handleTextChange('vendorleadtime')}\r\n                      />\r\n\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n          <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\r\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\r\n            <FormControlLabel\r\n              value=\"Yes\"\r\n              \r\n              control={<Radio color=\"primary\" \r\n               />}\r\n              label=\"Yes\"\r\n              labelPlacement=\"right\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"No\"\r\n              control={<Radio  color=\"primary\" />}\r\n              label=\"No\"\r\n              labelPlacement=\"right\"\r\n            />\r\n            </RadioGroup>\r\n            </FormControl>\r\n      </Grid>\r\n      </Grid>\r\n      </CardContent>\r\n      </Card> </>: null}\r\n\r\n\r\n\r\n   </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n    <Grid container  spacing={1}> \r\n    <Grid item xs={12} sm={12}>\r\n\r\n{ productCtx.product_type ? \r\n\r\n  <Card\r\n    {...rest}\r\n    className={clsx(classes.root, className)}\r\n  >\r\n    <CardHeader title=\"Default SKU For Display\r\n  \" />\r\n    <Divider />\r\n    <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n      \r\n      \r\n      \r\n      \r\n      <Grid item xs={6} >\r\n  \r\n                    <Autocomplete\r\n                        id=\"product_category\"\r\n                        className={classes.fixedTag}\r\n                        defaultValue={productCtx.default_metal_colour}\r\n                        onChange={handleoptionChange('default_metal_colour')}\r\n                        options={productCtx.metalcolour.map(option => option.label)}\r\n                        renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Metal Colour\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          error = {productCtx.error_message.default_metal_colour}\r\n  \r\n                          InputProps={{ ...params.InputProps, type: 'search' }}\r\n                        />\r\n                      )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={6} >\r\n             \r\n  \r\n                  <Autocomplete\r\n                        id=\"product_category\"\r\n                        className={classes.fixedTag}\r\n                        defaultValue={productCtx.default_metal_purity}\r\n                        onChange={handleoptionChange('default_metal_purity')}\r\n                        options={productCtx.metalpurity.map(option => option.label)}\r\n                        renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Metal Purity\"\r\n                          margin=\"dense\"\r\n                          error = {productCtx.error_message.default_metal_purity}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n  \r\n                          InputProps={{ ...params.InputProps, type: 'search' }}\r\n                        />\r\n                      )}\r\n                    />\r\n     \r\n      </Grid>\r\n      </Grid>\r\n      </CardContent>\r\n      </Card> : null }\r\n      \r\n    </Grid>\r\n    </Grid> \r\n    <Grid item xs={12} sm={12}>\r\n\r\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\r\n  <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Size Information\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}> \r\n      <Grid item xs={6} >\r\n               \r\n               <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       className={classes.fixedTag}\r\n                       defaultValue={productCtx.selected_sizes}\r\n                       options={productCtx.sizes}\r\n                       onChange={handleoptionChange('selected_sizes')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Ring Sizes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       error = {productCtx.error_message.selected_sizes}\r\n\r\n                       InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n               </Grid> \r\n\r\n\r\n               <Grid item xs={6} >\r\n               \r\n               <Autocomplete\r\n                    id=\"product_type\"\r\n                    className={classes.fixedTag}\r\n                    freeSolo\r\n                    defaultValue={productCtx.default_size}\r\n                    options={productCtx.selected_sizes}\r\n                    onChange={handleoptionChange('default_size')}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Select Default Size\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    error = {productCtx.error_message.default_size}\r\n\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                  />\r\n               </Grid> \r\n     \r\n      \r\n      </Grid>\r\n          </CardContent>\r\n      </Card> </>: null}\r\n    </Grid>\r\n    <Grid item xs={12} sm={12}>\r\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\r\n  <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>  \r\n      \r\n        <Grid item xs={12} >\r\n               \r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.earringbacking}\r\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\r\n                    onChange={handleoptionChange('earringbacking')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Earring Backing\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    error = {productCtx.error_message.earringbacking}\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n            </Grid>\r\n      </Grid>\r\n          </CardContent>\r\n      </Card> </>: null}\r\n\r\n      </Grid>\r\n   \r\n    </Grid>\r\n</Grid>\r\n<Grid container  spacing={1}>  \r\n    \r\n</Grid>\r\n  </div>\r\n\r\n     </>\r\n  );\r\n}","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\nimport { View, Text} from \"react-primitives\";\r\nimport \"../screens/Productupload/Productupload.css\"\r\n\r\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\r\n  position: 'absolute',\r\n  transition: 'all .25s',\r\n  pointerEvents: 'none',\r\n  top: placeholderUp ? -8 : 10,\r\n  left: 8,\r\n  zIndex: placeholderzindex,\r\n  paddingLeft: 8,\r\n  paddingRight: 8,\r\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\r\n  fontSize: placeholderUp ? 12 : 15,\r\n  color: placeholderUp ? '#3F51B5' : '#263238',\r\n}));\r\n\r\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  zIndex: selectzindex\r\n}));\r\n\r\nconst SelectView = props => {\r\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\r\n  return (\r\n    <SelectContainer selectzindex={selectzindex}>\r\n      <Select \r\n        fullWidth\r\n        isClearable\r\n      {...props} placeholder=\"\" />\r\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nclass SelectPlaceholder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholderUp: false,\r\n      placeholderzindex : 1\r\n    };\r\n  }\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ placeholderUp: true });\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { value, onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SelectView\r\n      className={'dropdownlayout'}\r\n        fullWidth\r\n        {...this.props}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPlaceholder;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox,\r\n  Card,\r\n  CardHeader,\r\n  TextField,\r\n  Divider,\r\n  Chip,\r\nCardContent} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Select from 'react-select';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { ProductContext } from '../../context';\r\nimport Box from '@material-ui/core/Box';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\n\r\nimport \"./Productupload.css\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n}));\r\n\r\n\r\nexport default function PaymentForm(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const materialChange = type => e => {\r\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\r\n    setProductCtx({ ...productCtx, selected_metal_colour })\r\n    }\r\n  const purityChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]:selectedOption })\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n  \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n<Grid container  spacing={1}> \r\n    <Grid item xs={12} sm={6}>\r\n      <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>\r\n      <Grid item container xs={12} sm={12}>\r\n      <Grid item xs={6} sm={3}>\r\n\r\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\r\n                  <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      disabled\r\n                      id=\"size\"\r\n                      onChange={handleInputChange('product_code')}\r\n                      name=\"size\"\r\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\r\n                      \r\n                      />\r\n                      </Grid>\r\n     </Grid>\r\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\r\n      <>\r\n     <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Height\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_height')}\r\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\r\n          \r\n          />\r\n     </Grid> \r\n\r\n    <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Width\"\r\n          name=\"size\"\r\n          onChange = {handleInputChange('metal_width')}\r\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\r\n\r\n          autoComplete=\"size\"\r\n          \r\n          />\r\n    </Grid>\r\n    </>\r\n     }\r\n      \r\n   \r\n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Length\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_length')}\r\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\r\n\r\n          />\r\n    </Grid> : null }\r\n  \r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Enter weights for different Purity\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container spacing={1}>\r\n\r\n    <Grid item xs={12}>\r\n\r\n    </Grid>\r\n    {productCtx.metalpurity.map(row => (\r\n  \r\n  <Grid item container xs={12} spacing={2} >\r\n    \r\n    <Grid item xs={6} >\r\n\r\n      <Input\r\n    variant=\"outlined\"\r\n    disabled\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Purity\"\r\n    name=\"size\"\r\n    autoComplete=\"size\"\r\n    value={row.name}\r\n    />\r\n</Grid>\r\n    <Grid item xs={6} >\r\n\r\n<Input\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Weight\"\r\n    name=\"size\"\r\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\r\n    autoComplete=\"size\"\r\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\r\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\r\n    />\r\n</Grid>\r\n    </Grid> ))}\r\n\r\n      </Grid>\r\n      </CardContent>\r\n</Card>\r\n</Grid>\r\n<Grid item xs={12} sm={6}>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={6} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleoptionChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.themes}\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={6}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleoptionChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.prod_styles}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleoptionChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.occassions}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleoptionChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.collections}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n              </Grid>\r\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\r\n              <>\r\n               <Grid item xs={12} sm={6} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleoptionChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"No of Stones\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleoptionChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Stone Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    </> : null }\r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n\r\n</Grid>\r\n</Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  TextField,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./Productupload.css\"\r\nimport { func } from 'prop-types';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    root:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    table:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    gempapper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  \r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n  const { className, ...rest } = props;\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption })\r\n  };\r\n  function editmaterial(name) {\r\n    clearmetalvalue();\r\n    assignvalue(productCtx.metals[name], name);\r\n  }\r\n  function deletematerial(name) {\r\n    clearmetalvalue();\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.splice(name,1)\r\n    setProductCtx({ ...productCtx, metals: metalsarr }) \r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n  function clearmetalvalue()\r\n  {\r\n    // for(let value in initialState){\r\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\r\n    //     setProductCtx({  \r\n    //       [value]:initialState[value]\r\n    //     })\r\n    //   }\r\n    // }\r\n    setProductCtx({...productCtx,\r\n      diamondsettings: \"\",\r\n      diamondcolor:\"\",\r\n      diamondclarity:\"\",\r\n      diamondshape:\"\",\r\n      diamondcount:\"\",\r\n      diamondweight:\"\",\r\n      gemstonetype:\"\",\r\n      gemstoneshape:\"\",\r\n      gemstonesettings:\"\",\r\n      gemstonesize:\"\",\r\n      gemstonecount:\"\",\r\n      gemstoneweight:\"\"\r\n    })\r\n    // alert(productCtx)\r\n    // console.log(productCtx)\r\n    \r\n\r\n  }\r\n  function assignvalue(metalobj, indexval)\r\n  {\r\n    if(metalobj.metalname === 'Diamond')\r\n    {\r\n    setProductCtx({ ...productCtx, \r\n      diamondsettings: metalobj.settings,\r\n      diamondcolor:metalobj.color,\r\n      diamondclarity:metalobj.clarity,\r\n      diamondshape:metalobj.shape,\r\n      diamondcount:metalobj.count,\r\n      diamondweight:metalobj.weight,\r\n    metalindex: indexval})\r\n    }else\r\n    {\r\n      setProductCtx({ ...productCtx, \r\n        gemstonesettings: metalobj.settings,\r\n        gemstoneshape:metalobj.color,\r\n        gemstonetype:metalobj.clarity,\r\n        gemstonesize:metalobj.shape,\r\n        gemstonecount:metalobj.count,\r\n        gemstoneweight:metalobj.weight,\r\n      metalindex: indexval})\r\n    }\r\n\r\n  }\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    var stonedetails = {};\r\n    stonedetails['metalname'] = productCtx.metal.label;\r\n    var isvalid = true\r\n    if(productCtx.diamondclarity)\r\n    {\r\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\r\n      productCtx.diamondweight)\r\n      {      stonedetails['metalname'] = \"Diamond\"\r\n    stonedetails['settings'] = productCtx.diamondsettings;\r\n    stonedetails['color'] = productCtx.diamondcolor;\r\n    stonedetails['clarity'] = productCtx.diamondclarity;\r\n    stonedetails['shape'] = productCtx.diamondshape;\r\n    stonedetails['count'] = productCtx.diamondcount;\r\n    stonedetails['weight'] = productCtx.diamondweight;\r\n      }else\r\n      {\r\n        isvalid = false\r\n        alert(\"Fill all fields\")\r\n      }\r\n\r\n    }else{\r\n      if(productCtx.gemstonetype && \r\n        productCtx.gemstoneshape && \r\n        productCtx.gemstonesettings && \r\n        productCtx.gemstonesize && productCtx.gemstonecount &&\r\n        productCtx.gemstoneweight)\r\n        { \r\n      stonedetails['metalname'] = \"Gemstone\"\r\n      stonedetails['clarity'] = productCtx.gemstonetype;\r\n      stonedetails['color'] = productCtx.gemstoneshape;\r\n      stonedetails['settings'] = productCtx.gemstonesettings;\r\n      stonedetails['shape'] = productCtx.gemstonesize;\r\n      stonedetails['count'] = productCtx.gemstonecount;\r\n      stonedetails['weight'] = productCtx.gemstoneweight;\r\n    }else\r\n    {\r\n      isvalid = false\r\n      alert(\"Fill all fields\")\r\n    }\r\n    }\r\n\r\n    if(isvalid)\r\n    {\r\n    if(productCtx.metalindex === -1)\r\n    {\r\n      stonedetails['id'] = metalsarr.length;\r\n\r\n      metalsarr.push(stonedetails) \r\n\r\n    }else\r\n    {\r\n      stonedetails['id'] = productCtx.metalindex\r\n\r\n      metalsarr[productCtx.metalindex] = stonedetails;\r\n    }\r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n    clearmetalvalue()\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid item xs={4} >\r\n                   \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondclarity}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                    onChange={handleoptionChange('diamondclarity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Type/Clarity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n        </Grid>\r\n\r\n        <Grid item xs={4} >\r\n        \r\n                      \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondcolor}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                    onChange={handleoptionChange('diamondcolor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n       \r\n                      <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\r\n            Add Diamond\r\n          </Button>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n        </CardContent>\r\n        </Card>\r\n   }\r\n\r\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \r\n\r\n  \r\n       <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n\r\n          <Grid  container xs={12} spacing={1}>\r\n\r\n      <Grid item xs={4} >\r\n      \r\n                 \r\n                       <Autocomplete\r\n                    \r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonetype}\r\n                    options={productCtx.masterData.gemstontypes}\r\n                    onChange={handleoptionChange('gemstonetype')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n      </Grid>\r\n    \r\n      <Grid item xs={4} >\r\n    \r\n          \r\n\r\n<Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstoneshape}\r\n                    options={productCtx.masterData.gemstonshapes}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n          \r\n                    <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonesettings}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n    \r\n      <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Gemstone Size\"\r\n            name=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n            autoComplete=\"size\"\r\n            value={productCtx.gemstonesize}\r\n            />\r\n      \r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={productCtx.gemstonecount}\r\n            />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n        \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Weight\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n            value={productCtx.gemstoneweight}\r\n            />\r\n      </Grid>\r\n      <Grid container item xs={12} justify=\"flex-end\">\r\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\r\n          Add Gemstone\r\n        </Button>\r\n\r\n      </Grid>\r\n      </Grid>\r\n            </CardContent>\r\n            </Card>}\r\n\r\n            <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n    <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Stone</TableCell>\r\n            <TableCell align=\"right\">Type/Clarity</TableCell>\r\n            <TableCell align=\"right\">Colour</TableCell>\r\n            <TableCell align=\"right\">Setting</TableCell>\r\n            <TableCell align=\"right\">Shape</TableCell>\r\n            <TableCell align=\"right\">#of stone</TableCell>\r\n            <TableCell align=\"right\">Weight</TableCell>\r\n            <TableCell align=\"center\">Edit</TableCell>\r\n            <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productCtx.metals.map(row => (\r\n            <TableRow key={row.metalname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.metalname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\r\n              <TableCell align=\"right\">{row.color.label}</TableCell>\r\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\r\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\r\n              <TableCell align=\"right\">{row.count}</TableCell>\r\n              <TableCell align=\"right\">{row.weight}</TableCell>\r\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\r\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </CardContent>\r\n      </Card>\r\n         \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from 'react-select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Multiselect from '../../components/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\nCardContent} from '@material-ui/core';\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n\r\n\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\r\n  };\r\n  const handlemetalcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\r\n  };\r\n  const handlediamndcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\r\n  };\r\n  const handlediamndclarityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\r\n  };\r\n\r\n  const handlemetalpurityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\r\n  };\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.push(\"test\") \r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Default SKU For Display\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n    \r\n    \r\n    \r\n    \r\n    <Grid item xs={4} >\r\n\r\n                  \r\n                \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_colour}\r\n                      onChange={handleChange('default_metal_colour')}\r\n                      options={productCtx.metalcolour}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={4} >\r\n           \r\n\r\n                <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_purity}\r\n                      onChange={handleChange('default_metal_purity')}\r\n                      options={productCtx.metalpurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Purity\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid>\r\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \r\n    <Grid item xs={4} >\r\n           \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      isDisabled \r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_size}\r\n                      onChange={handleChange('default_metal_size')}\r\n                      options={productCtx.selected_sizes}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Default Size\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid> : null}\r\n    {/* <Grid item xs={3} >\r\n                <Select\r\n                    value={productCtx.diamond_colour}\r\n                    placeholder=\"Diamond Colour\"\r\n                    onChange={handlediamndcolorChange}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                  />\r\n   \r\n    </Grid>\r\n    <Grid item xs={3} >\r\n    <Select\r\n                    value={productCtx.diamond_clarity}\r\n                    placeholder=\"Diamond Clarity\"\r\n                    onChange={handlediamndclarityChange}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                  />\r\n\r\n    </Grid>                 */}\r\n    \r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Chip,\r\n  TextField,\r\nCardContent} from '@material-ui/core';\r\nimport { ProductContext } from '../../context';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { className, ...rest } = props;\r\n  const handleChange = type => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value  })\r\n\r\n  };\r\n \r\n  \r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={4} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={4}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n // Import React FilePond\r\n import { FilePond, registerPlugin } from 'react-filepond';\r\n import TextField from '@material-ui/core/TextField';\r\n\r\n // Import FilePond styles\r\n import 'filepond/dist/filepond.min.css';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\r\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\r\n\r\n// Register the plugins\r\n \r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { file } from '@babel/types';\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\r\n\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      paper: {\r\n        height: 140,\r\n      },\r\n      img: {\r\n        height: '100%',\r\n        width:'100%',\r\n        objectFit:'contain'\r\n      },\r\n      control: {\r\n        padding: theme.spacing(2),\r\n      },\r\n      input: {\r\n        display: 'none',\r\n      },\r\n  }));\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n  let count= 0;\r\n  const classes = useStyles();\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalcolour, setMetalcolour] = React.useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n  const [images,setImages] = React.useState({});\r\n  React.useEffect(() => {\r\n    let metalcolour = []\r\n    let product_images = [];\r\n\r\n    productCtx.metalcolour.forEach(element => {\r\n      if(element.name === productCtx.default_metal_colour)\r\n      {\r\n        product_images[element.name] = [] \r\n        if(metalcolour.length > 0)\r\n        {\r\n          metalcolour.unshift(element);\r\n        }else{\r\n          metalcolour.push(element)\r\n        }\r\n\r\n      }else{\r\n        metalcolour.push(element)\r\n        product_images[element.name] = []\r\n      }\r\n    })\r\n    setMetalcolour(metalcolour)\r\n\r\n}, []);\r\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\r\n  {\r\n      \r\n//alert(JSON.stringify(bodaydata))\r\n\r\n  let prodimages = productCtx.product_images;\r\n  if(prodimages)\r\n  {\r\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\r\n    let imagecolourobj = productCtx.product_images[imagecolor];\r\n    var imagecount  = 1;\r\n    if(imagecolourobj)\r\n    {\r\n      imagecount = imagecolourobj.length + 1;\r\n    }\r\n\r\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\r\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\"+url);\r\n    var filepathname = returnData.filepath\r\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\r\n    var options = {\r\n        headers: {\r\n            'Content-Type': bodaydata.fileExtension,\r\n            'Access-Control-Allow-Origin':'*'\r\n        }\r\n    };\r\n    \r\n    if(imagecolourobj)\r\n    {\r\n      const imageobj = {\r\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\r\n        \"position\":(imagecolourobj.length+1),\r\n        \"color\":imagecolor,\r\n        \"image_url\":filepathname,\r\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\r\n      }\r\n      if(uploadtype === 'edit')\r\n      {\r\n        imagecolourobj[imageposition] = imageobj;\r\n\r\n      }else\r\n      {\r\n        imagecolourobj.push(imageobj)\r\n\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n\r\n    }else\r\n    {\r\n      const imageobj = {\r\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\r\n        \"position\":imageposition,\r\n        \"color\":imagecolor,\r\n        \"image_url\":filepathname,\r\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\r\n      }\r\n      imagecolourobj = [];\r\n      imagecolourobj.push(imageobj)\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n  \r\n    setProductCtx({ ...productCtx, product_images: prodimages })\r\n    // setFiles([])\r\n  }\r\n  await axios.put(signedRequest, bodaydata.file, options)\r\n\r\n  \r\n\r\n  }\r\n\r\n  function removefiles(imageposition, imagecolor)\r\n  {\r\n  \r\n\r\n    let prodimages = productCtx.product_images;\r\n\r\n  if(prodimages)\r\n  {\r\n    let imagecolourobj = prodimages[imagecolor];\r\n\r\n    if(imagecolourobj)\r\n    {\r\n      if(imagecolourobj.length > imageposition)\r\n      {\r\n        let removedfile = imagecolourobj[imageposition]\r\n\r\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\r\n\r\n      }\r\n\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n    setProductCtx({ ...productCtx, product_images: prodimages })\r\n//alert(JSON.stringify(productCtx.product_images))\r\n  }\r\n  }\r\n  \r\n const handleInit = () =>\r\n    {\r\n     // alert(\"initialized\")\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n         <Grid container className={classes.root} spacing={2}>\r\n\r\n     <Grid item direction=\"row\" xs={12}>\r\n       <Grid container  justify=\"left\" spacing={2}>\r\n\r\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \r\n            <Grid xs={12} container spacing={1} item>\r\n            <Grid  xs={12}  item>\r\n\r\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {value.name}\r\n             </Typography> \r\n             </Grid>\r\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\r\n\r\n            <Grid  xs={3} alignItems=\"center\" item>\r\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {row.url}\r\n             </Typography> \r\n           {row.url.length === 0 ? <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          allowMultiple={true}\r\n                          maxFiles={3}  \r\n                          files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}>\r\n                </FilePond> :  <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          files={[{\r\n                            source: row.url,\r\n                            options: {\r\n                                type: 'local'\r\n                            }\r\n                        }]}\r\n                          server={{\r\n                            load: (source, load) => {\r\n                                // simulates loading a file from the server\r\n                                fetch(source).then(res => \r\n                                  \r\n                                  res.blob()).then(load);\r\n                            }\r\n                        }} \r\n                          onupdatefiles={fileItems => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItems)=> {\r\n                            \r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n                            removefiles(imageindex, value.name)\r\n                          }}>\r\n                </FilePond>\r\n               \r\n                \r\n                         } </Grid>\r\n             ))} */}\r\n            <Grid xs={12} sm={12} md={12} item>\r\n              <FilePond  \r\n                          allowImageValidateSize\r\n                          imageValidateSizeMinWidth=\"2400\"\r\n                          imageValidateSizeMinHeight=\"2400\"\r\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\r\n                            console.log(file);\r\n                            console.log('filepond property');\r\n                            debugger;\r\n                          })}\r\n                          labelIdle=\"Upload Image\" \r\n                          allowMultiple={true}  \r\n                          //files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objectsfiles to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}\r\n                          fileRenameFunction={\r\n                            (file) => new Promise(resolve => {\r\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\r\n                              let imagecolourobj = productCtx.product_images[value.name];\r\n                              var imagecount  = 1;\r\n                              if(imagecolourobj)\r\n                              {\r\n                                imagecount = imagecolourobj.length + 1;\r\n                              }\r\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\r\n                              resolve(imagename)\r\n                              \r\n                          })\r\n                           } \r\n                          >\r\n                </FilePond>\r\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\r\n                <Grid  xs={8} item>\r\n\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\r\n                      id=\"imagename\"\r\n                      name=\"imagename\"\r\n                      label=\"imagename\"\r\n                      />  \r\n                                        </Grid>          \r\n\r\n                <Grid  xs={4}  item>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                  >Upload</Button> \r\n                                    </Grid>          \r\n  \r\n                  </Grid>           */}\r\n            </Grid>\r\n            \r\n            </Grid>\r\n           ))} \r\n       </Grid>\r\n     </Grid>\r\n\r\n    </Grid>\r\n \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            Page Not Found\r\n          </Typography> \r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDOM from 'react-dom';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ProductContext } from '../../context';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n// create Plotly React component via dependency injection\r\nconst Plot = createPlotlyComponent(window.Plotly);\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [{\r\n'id':'1',\r\n'productid':'SE30002',\r\n'productname':'Gold Ring', \r\n'purity':'18K',\r\n'material':'Gold',\r\n'diamondcolor':'EF',\r\n'diamondclarity':'VVS',\r\n'gemstone':'Navrathna',\r\n'size':'18',\r\n'costprice':30000,\r\n'sellingprice':38000,\r\n'margin':8000\r\n}, \r\n{\r\n  'id':'2',\r\n  'productid':'SE30002',\r\n  'productname':'Diamond Ring', \r\n  'purity':'18K',\r\n  'material':'Diamond',\r\n  'diamondcolor':'EF',\r\n  'diamondclarity':'VVS',\r\n  'gemstone':'Navrathna',\r\n  'size':'12',\r\n  'costprice':70000,\r\n  'sellingprice':98000,\r\n  'margin':28000\r\n  }\r\n];\r\n\r\n  \r\n  const dimensions = [\r\n    {value: 'firstName', title: 'First Name'}\r\n  ]\r\n\r\n  const reduce = function(row, memo) {\r\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\r\n    return memo\r\n  }\r\n\r\n  const calculations = [\r\n    {\r\n      title: 'Amount', value: 'amountTotal',\r\n      template: function(val, row) {\r\n        return '$' + val.toFixed(2)\r\n      },\r\n      sortBy: function(row) {\r\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\r\n      }\r\n    }\r\n  ]\r\n  \r\n  \r\n  \r\nexport default function Pivot(props) {\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  function setcurrentstate(s)\r\n  {\r\n    setProductCtx({ ...productCtx, s })\r\n\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <PivotTableUI\r\n                data={data}\r\n                onChange={s => setcurrentstate(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...productCtx.s}\r\n\r\n          />\r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport { Grid } from '@material-ui/core';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nimport Step4 from './Step4';\r\nimport Step5 from './Step5';\r\nimport Step6 from './Step6';\r\nimport Step7 from './Step7';\r\nimport Step8 from './Step8';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { element } from 'prop-types';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#fff\"\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(1, 0, 1),\r\n    background: \"#fff\"\r\n\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case \"Step1\":\r\n    return <AddressForm />;\r\n    case \"Step2\":\r\n      return <PaymentForm />;\r\n    case \"Step3\":\r\n      return <Review />;\r\n    case \"Step4\":\r\n      return <Step5 />;\r\n    case \"Step5\":\r\n      return <Step4 />;  \r\n    case \"Step6\":\r\n      return <Step6 />;\r\n  \r\n    case \"Step7\":\r\n      return <Step7 />;    \r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nexport default function Productupload() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [failure, setfailure] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSuccess(true);\r\n  };\r\n \r\n  const handleClose =  (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const handleNext = async () => {\r\n    var isvalid = true;\r\n    var  error_content = {}\r\n    // if(productCtx.error_message)\r\n    // {\r\n    //   error_content = productCtx.error_message\r\n\r\n    // }\r\n\r\n    if(activeStep === 0)\r\n    {\r\n    if(!productCtx.product_type)\r\n    {\r\n      isvalid = false\r\n      error_content['product_type'] = \"Error messsage\";\r\n     \r\n    }\r\n    if(!productCtx.productname)\r\n    {\r\n      isvalid = false\r\n      error_content['productname'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.product_categoy)\r\n    {\r\n      isvalid = false\r\n      error_content['product_categoy'] = \"Error messsage\" \r\n    }\r\n\r\n    if(!productCtx.metalcolour)\r\n    {\r\n      isvalid = false\r\n      error_content['metalcolour'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.material_names)\r\n    {\r\n      isvalid = false\r\n      error_content['material_names'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\r\n    {\r\n      isvalid = false\r\n\r\n      error_content['metalpurity'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\r\n    {\r\n      isvalid = false\r\n\r\n      error_content['metalcolour'] = \"Error messsage\" \r\n    }\r\n    \r\n    if(!productCtx.vendorcode)\r\n    {\r\n      isvalid = false\r\n      error_content['vendorcode'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.vendorleadtime)\r\n    {\r\n      isvalid = false\r\n      error_content['vendorleadtime'] = \"Error messsage\" \r\n    }\r\n\r\n    if(!productCtx.default_metal_colour)\r\n    {\r\n      isvalid = false\r\n      error_content['default_metal_colour'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.default_metal_purity)\r\n    {\r\n      isvalid = false\r\n      error_content['default_metal_purity'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.productvendorcode)\r\n    {\r\n      isvalid = false\r\n      error_content['productvendorcode'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\r\n    {\r\n      isvalid = false\r\n      error_content['earringbacking'] = \"Error messsage\" \r\n    }\r\n    if(!productCtx.selectedgender)\r\n    {\r\n      isvalid = false\r\n      error_content['selectedgender'] = \"Error messsage\" \r\n    }\r\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\r\n    {\r\n\r\n      isvalid = false\r\n      error_content['selected_sizes'] = \"Error messsage\" \r\n    }\r\n\r\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\r\n    {\r\n\r\n      isvalid = false\r\n      error_content['default_size'] = \"Error messsage\" \r\n    }\r\n   // isvalid = true;\r\n  }\r\n\r\n  if(activeStep === 1)\r\n  {\r\n    productCtx.metalpurity.forEach( element => {\r\n      const keyvalue = (element.name)+'_metal_weight'\r\n\r\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\r\n    {\r\n      isvalid = false\r\n\r\n      error_content[keyvalue] = \"Error messsage\" \r\n\r\n    }\r\n    \r\n    })\r\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\r\n    {\r\n      isvalid = false\r\n      error_content['themes'] = \"Error messsage\" \r\n    }\r\n    if(productCtx.product_type_shortcode === 'R')\r\n    {\r\n      if(!productCtx.metal_height)\r\n      {\r\n        isvalid = false\r\n        error_content['metal_height'] = \"Error messsage\" \r\n      }\r\n      if(!productCtx.metal_width)\r\n      {\r\n        isvalid = false\r\n        error_content['metal_width'] = \"Error messsage\" \r\n      }\r\n    }\r\n    \r\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\r\n    {\r\n      isvalid = false\r\n      error_content['themes'] = \"Error messsage\" \r\n    }\r\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\r\n    {\r\n      isvalid = false\r\n      error_content['prod_styles'] = \"Error messsage\" \r\n    }\r\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\r\n    {\r\n      isvalid = false\r\n      error_content['occassions'] = \"Error messsage\" \r\n    }\r\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\r\n    // {\r\n    //   isvalid = false\r\n    //   error_content['collections'] = \"Error messsage\" \r\n    // }\r\n\r\n  //  isvalid = true;\r\n\r\n\r\n  }\r\n    \r\n\r\n\r\n    setProductCtx({...productCtx,error_message:error_content})\r\n     if(activeStep === productCtx.steps.length - 1){\r\n      console.info('HANDLE',sendNetworkRequest);\r\n     const productseries = productCtx.masterData.productseries[0].productSeries\r\n\r\n      delete productCtx['masterData'];\r\n\r\n      var formdata = productCtx\r\n      formdata['productseries'] = productseries\r\n \r\n      setLoading(true)\r\n       await sendNetworkRequest('/productupload', {}, formdata)\r\n      setLoading(false)\r\n      setSuccess(true)\r\n      await sleep(500)\r\n      window.location.replace('/productlist')\r\n    }else{\r\n       if(isvalid)\r\n       {\r\n        setActiveStep(activeStep + 1);\r\n  \r\n      \r\n        }\r\n     }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n      //else\r\n    //  {\r\n    //  }\r\n\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  async  function sleep(millis) {\r\n    return new Promise(resolve => setTimeout(resolve, millis));\r\n  }\r\n  \r\n  return (\r\n    \r\n    <Grid item xs={12} sm={12}  >\r\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} >\r\n          Product Created Successfully\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Please Wait ...\r\n        </Alert>\r\n  </Snackbar> \r\n\r\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Please try again\r\n        </Alert>\r\n      </Snackbar>\r\n        <Paper className={classes.paper}>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {productCtx.steps.map((label, index) => (\r\n              <Step key={label}>\r\n                <StepLabel></StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          </Paper>\r\n\r\n    \r\n          <React.Fragment>\r\n            {activeStep === productCtx.steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Product Added Successfully\r\n                  </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  \r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(productCtx.steps[activeStep])}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Component from './Component';\r\nimport { ProductProvider } from '../../context';\r\nimport { productCategory } from '../../services/mapper';\r\nimport { useQuery } from 'react-apollo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport \"./Productupload.css\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: 'auto'\r\n    },\r\n  }));\r\n  \r\nexport const Productupload = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\r\n            <Component {...props} />\r\n        </ProductProvider>\r\n    )\r\n});\r\nexport default Productupload;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./Configuration.css\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n   \r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  },\r\n}));\r\nexport const Configuration = withRouter(props => {\r\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => \r\n  {\r\n      setRaised(true);\r\n  }\r\n  const onMouseOut = () => \r\n  { \r\n      setRaised(false);\r\n     // setCardindex(-1)\r\n\r\n  }\r\n\r\n  \r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n  )\r\n});\r\n\r\nexport default Configuration;","import React from \"react\";\r\nimport { Form, Grid, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [producttype, setProducttype] = React.useState(\"\");\r\n\r\n  // const handleinputChange =type => e => {\r\n  // props.searchproduct(e.target.value)\r\n  // }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setSearchtext(e.target.value);\r\n  };\r\n  const handlecategoryChange = (type) => (event, value) => {\r\n    setCategory(value.name);\r\n    props.applyfilter(searchtext, value.name, producttype);\r\n  };\r\n  const handletypeChange = (type) => (event, value) => {\r\n    setProducttype(value.name);\r\n    props.applyfilter(searchtext, category, value.name);\r\n  };\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function applyfilter() {\r\n    props.applyfilter(searchtext, category, producttype);\r\n  }\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        background: \"white\",\r\n        borderTop: \"1px solid #e4e4e4\",\r\n        borderBottom: \"1px solid #e4e4e4\",\r\n      }}\r\n    >\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.mastercategory}\r\n          onChange={handlecategoryChange(\"product_category\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.masterproducttype}\r\n          onChange={handletypeChange(\"product_type\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          onChange={handleinputChange(\"productname\")}\r\n          placeholder={\"Search by product name or product id\"}\r\n          onChange={handleinputChange(\"productname\")}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Button\r\n          onClick={(e) => applyfilter()}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst columns = [\r\n  { id: 'vendorcode', label: 'Vendor Code' },\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'Address', label: 'Address' },\r\n  { id: 'City', label: 'City' },\r\n  { id: 'gstNo', label: 'gstNo' },\r\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n  { id: 'updatedAt', label: 'updated on' },\r\n  { id: 'actions', label: 'actions' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  contantview: {\r\n   placeItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [add,setAdd] = React.useState(false)\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  async function addnewvendor()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \r\n    setIsadd(true)\r\n    setNewvendorcode(response.newvendorcode)\r\n  }\r\n  function Cancelcreate(refetch) {\r\n    window.location.reload();\r\n    // props.onCancel();\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      shortCode : vendordata.shortCode,\r\n      name : vendordata.name,\r\n      address : vendordata.address,\r\n      city : vendordata.city,\r\n      pincode : vendordata.pincode,\r\n      gstNo : vendordata.gstNo,\r\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n    if(!editcontent.isedit)\r\n    {\r\n      \r\n      editcontent['isedit'] = false\r\n      editcontent['shortCode'] = newvendorcode\r\n    }\r\n   \r\n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\r\n     props.onCancel()\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  // refetch()\r\n  if(!editcontent.isedit)\r\n    {\r\n      \r\n  window.location.reload();\r\n    }else{\r\n      refetch()\r\n    }\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('product_id');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  const query = props.client.query\r\n    query({\r\n      query: PRODUCTFILTERMASTER,\r\n      fetchPolicy: \"network-only\"\r\n    }).then((data) => {\r\n      if (data) {\r\n      // setProductlists(data.data.allProductLists.nodes)\r\n       setMastercategories(data.data.allMasterProductCategories.nodes)\r\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\r\n      }else{\r\n      }\r\n    })\r\n  .catch((error) => {console.log(\"smbcj\")})\r\n  }, [])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\r\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\r\n          <Typography  component=\"h4\" variant=\"h4\" >\r\n            Vendors\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\r\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\r\n              Add New Vendor\r\n            </Button>\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          { <Query\r\n              query={VENDORLISTS}\r\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> \r\n                              {data.allMasterVendors.nodes.map((row, index) => (\r\n                           <>\r\n                           {index == 0 && isadd ? \r\n                           <TableRow key={row.name}>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              contentEditable={false}\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={newvendorcode}\r\n                              onChange={handleInputChange('shortCode')}\r\n\r\n                              label=\"Vendor Code\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('name')}\r\n\r\n                              label=\"Vendor Name\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('address')}\r\n\r\n                              label=\"Address\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"City\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"vendordeliverydays\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {new Date()}\r\n                                  </Moment>\r\n                           </TableCell>\r\n                           \r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                           </TableRow> : null }\r\n                              \r\n                                \r\n                                <TableRow key={row.name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.shortCode}\r\n                                  </TableCell>\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendorname\"\r\n                        name=\"vendorname\"\r\n                        value={editcontent.name}\r\n                        onChange={handleInputChange('name')}\r\n                        label=\"Vendor Name\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                           </TableCell> }\r\n                           {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendoraddress\"\r\n                        name=\"vendoraddress\"\r\n                        value={editcontent.address}\r\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \r\n                           </TableCell> }\r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendorcity\"\r\n                              name=\"vendorcity\"\r\n                              value={editcontent.city}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"Vendor City\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \r\n                           </TableCell> }\r\n                                  \r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"gst_no\"\r\n                              name=\"gst_no\"\r\n                              value={editcontent.gstNo}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \r\n                           </TableCell> }  \r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.vendorDelivaryDays}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"Vendor Delivery Days\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \r\n                           </TableCell> }\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                      <Button ><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n                                  \r\n                                </TableRow>\r\n                                </>\r\n\r\n                              ))}\r\n                              \r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction Newvendor(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      fullWidth={true}\r\n      maxWidth={'md'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <Grid container  spacing={2}> \r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorname\"\r\n            name=\"vendorname\"\r\n            value={\"test\"}\r\n            label=\"Vendor Name\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorcode\"\r\n            name=\"vendorcode\"\r\n            value={\"test\"}\r\n            label=\"Vendor Code\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={\"test\"}\r\n            label=\"Organization\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"partnercategory\"\r\n            name=\"partnercategory\"\r\n            value={\"test\"}\r\n            label=\"Partner Category\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"gstno\"\r\n            name=\"gstno\"\r\n            value={\"test\"}\r\n            label=\"GST Number\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={12} sm={12} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            rows={3}\r\n            multiline\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n      </Grid>\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button  color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  color=\"primary\">\r\n            Update\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default Newvendor;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Newvendor from '../../components/Newvendor'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\nexport const Vendorlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  \r\n \r\n  function cancelvendorcreation()\r\n  {\r\n    setIsadd(false)\r\n\r\n\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\r\n    <Grid container  spacing={2}>  \r\n    \r\n    \r\n    <Vendor  onCancel={cancelvendorcreation}  />\r\n   \r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibityIcon from '@material-ui/icons/Visibility';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst columns = [\r\n  { id: 'product_id', label: 'product id' },\r\n  { id: 'product_name', label: 'product name' },\r\n  { id: 'product_type', label: 'product type' },\r\n  { id: 'vendor_code', label: 'vendor code' },\r\n  { id: 'product_category', label: 'product category' },\r\n  { id: 'isactive', label: 'active' },\r\n  { id: 'createdAt', label: 'Created on' }\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  \r\n  }, [])\r\n  useEffect( () => {\r\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\r\n  \r\n  }, [props.filterparams])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n async function showproductdetails(prod_id){\r\n   let bodycontent = {\r\n    productid : prod_id\r\n   }\r\n\r\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\r\n    console.log(response)\r\n  //setProductlists(response.products.rows)\r\n window.open(response.url, '_blank');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {/* <Query\r\n              query={PRODUCTLIST(true,\"Bangles\")}\r\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> */}\r\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\r\n                                  <TableRow key={row.product_id}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.product_id}\r\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\r\n                                    <VisibityIcon />\r\n                                  </Button>\r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\r\n                                    {/* <Link variant=\"body2\">  */}\r\n                                    {row.product_name}\r\n\r\n                                    {/* </Link>   */}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\r\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\r\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\r\n                                  \r\n\r\n                                  <TableCell align=\"left\"> <FormControlLabel\r\n                                      label={row.isactive ? \"\" : \"\"}\r\n\r\n                                      control={\r\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\r\n                                      }\r\n                                    /></TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  \r\n                                </TableRow>\r\n                              ))}\r\n                          {/* </> */}\r\n                       {/* }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  */}\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Grid, Chip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n      width: '100%',\r\n      padding: theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    buttonPadding: {    \r\n        marginLeft: theme.spacing(2),   \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    chip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    pendingchip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.secondary,\r\n    }\r\n  }));\r\n\r\nexport default function Categoryrow(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n\r\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\r\n            <Grid item xs={6} sm={9}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                       mano\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                    mani\r\n                    </Typography>\r\n            </Grid>\r\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n                >\r\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\r\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\r\n            size=\"small\" /></Grid>\r\n             <Grid item xs={3}>\r\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\r\n            <CreateIcon />\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\r\n            <DeleteIcon />\r\n            </IconButton>\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </Grid>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    borderRadius: theme.shape.borderRadius,\r\n    lineHeight: '10px',\r\n    fontSize: '10px',\r\n    height: 20,\r\n    minWidth: 20,\r\n    whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0.5, 1)\r\n  },\r\n  rounded: {\r\n    borderRadius: 10,\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst Label = props => {\r\n  const { className, variant, color, shape, children, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const rootClassName = clsx(\r\n    {\r\n      [classes.root]: true,\r\n      [classes.rounded]: shape === 'rounded'\r\n    },\r\n    className\r\n  );\r\n\r\n  const finalStyle = { ...style };\r\n\r\n  if (variant === 'contained') {\r\n    finalStyle.backgroundColor = color;\r\n    finalStyle.color = '#FFF';\r\n  } else {\r\n    finalStyle.border = `1px solid ${color}`;\r\n    finalStyle.color = color;\r\n  }\r\n\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      className={rootClassName}\r\n      style={finalStyle}\r\n      variant=\"overline\"\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.oneOf(['square', 'rounded']),\r\n  style: PropTypes.object,\r\n  variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  style: {},\r\n  color: colors.grey[600],\r\n  variant: 'contained',\r\n  shape: 'square'\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {URL} from '../../config'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    '&:active': {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  //event.preventDefault();\r\n  console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function CustomizedBreadcrumbs(props) {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        href= {props.url ? URL+props.url : URL+\"/configuration\"}\r\n        label={props.name ? props.name : \"Configuration\"}\r\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\r\n      />\r\n      \r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  drawer: {\r\n    width: 420,\r\n    maxWidth: '100%'\r\n  },\r\n  header: {\r\n    padding: theme.spacing(2, 1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 3),\r\n    flexGrow: 1\r\n  },\r\n  contentSection: {\r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  contentSectionHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    cursor: 'pointer'\r\n  },\r\n  contentSectionContent: {},\r\n  formGroup: {\r\n   \r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginTop: 0,\r\n    marginBottom: 0\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  minAmount: {\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  maxAmount: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  radioGroup: {},\r\n  actions: {\r\n    padding: theme.spacing(3),\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Filter = props => {\r\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n      name: '',\r\n      company: '',\r\n      mobile: '',\r\n      city: '',\r\n      version: null,\r\n      commodity: []\r\n  };\r\n\r\n  const [expandProject, setExpandProject] = useState(true);\r\n  const [expandCustomer, setExpandCustomer] = useState(false);\r\n  const [values, setValues] = useState({ ...initialValues });\r\n\r\n  const handleClear = () => {\r\n    setValues({ \r\n      ...initialValues });\r\n  };\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n  const handleoptionchange = type => (event, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [type]: value\r\n    }));\r\n  }\r\n  const handleinputchange = type => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n  const handleDateChange = type => (date) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: date\r\n    })\r\n  };\r\n  const handleToggleProject = () => {\r\n    setExpandProject(expandProject => !expandProject);\r\n  };\r\n\r\n  const handleToggleCustomer = () => {\r\n    setExpandCustomer(expandCustomer => !expandCustomer);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    onFilter && onFilter(values);\r\n    onClose && onClose()\r\n  };\r\n\r\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\r\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant=\"temporary\"\r\n    >\r\n      <form\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={classes.header}>\r\n          <Button\r\n            onClick={onClose}\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon className={classes.buttonIcon} />\r\n            Close\r\n          </Button>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Grid container xs={12} spacing={1}>\r\n            {/* <Grid item xs={12}>\r\n                      <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={values.name}\r\n                            onChange={handleinputchange('name')}\r\n                           label=\"Name\"\r\n                          />\r\n            </Grid> */}\r\n             <Grid xs={12}>\r\n            <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_categories}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_category}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={handleoptionchange('product_category')}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n                      \r\n           \r\n            <Grid item xs={12}>\r\n            <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_types}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_type}\r\n                  onChange={handleoptionchange('product_type')}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n           </Grid>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleClear}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.buttonIcon} />\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Apply filters\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  masters : PropTypes.object,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  },\r\n  searchButton: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const { onSearch, className, ...rest } = props;\r\n  const [searchcontent, setSearchcontent] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n  const handleinputchange = type => e => {\r\n    setSearchcontent(e.target.value)\r\n  }\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search by order id, Name and Mobile\"\r\n          onChange={handleinputchange('searchcontent')}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        className={classes.searchButton}\r\n        onClick={() => onSearch(searchcontent)}\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nimport { Search, Filter } from \"./components\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    maxWidth: 480,\r\n    flexBasis: 480,\r\n  },\r\n  filterButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  filterIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProductFilter = (props) => {\r\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleFilterOpen = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleFilterClose = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      spacing={3}\r\n    >\r\n      <Grid item>\r\n        <Search className={classes.search} onSearch={onSearch} />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        {window.location.pathname === \"/productlist\" ? (\r\n          <>\r\n            {\" \"}\r\n            <CSVLink\r\n              header={dataCSV.keyCSV}\r\n              data={dataCSV.valueCSV}\r\n              filename={\"ProductDetails.csv\"}\r\n              style={{ textDecoration: \"none \" }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                style={{ marginRight: \"8px\" }}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n              >\r\n                Download CSV\r\n              </Button>\r\n            </CSVLink>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <Button\r\n          className={classes.filterButton}\r\n          color=\"primary\"\r\n          onClick={handleFilterOpen}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        >\r\n          <FilterListIcon className={classes.filterIcon} /> Filter\r\n        </Button>\r\n      </Grid>\r\n\r\n      <Filter\r\n        onClose={handleFilterClose}\r\n        onFilter={onFilter}\r\n        open={openFilter}\r\n        masters={masters}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProductFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  masters: PropTypes.object,\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport {\r\n  PRODUCTLIST,\r\n  PRODUCTCATEGORY,\r\n  PRODUCTFILTERMASTER,\r\n  PRODUCTLISTSTATUSEDIT,\r\n} from \"../../graphql/query\";\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"../../components/Products\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport { ProductFilter } from \"../../components\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nexport const Productlist = withRouter(\r\n  withApollo((props) => {\r\n    const [masters, setMasters] = useState({});\r\n    const [filterparams, setFilterparams] = useState({});\r\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\r\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n    let responseCSV;\r\n    function onFilter(filterobj) {\r\n      let filtercontent = {};\r\n\r\n      if (filterobj.product_category) {\r\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      if (filterobj.product_type) {\r\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      setFilterparams({\r\n        ...filterparams,\r\n        ...filtercontent,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    function onSearch(searchtext) {\r\n      //  alert(searchtext)\r\n      setFilterparams({\r\n        ...filterparams,\r\n        searchtext,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    useEffect(() => {\r\n      const query = props.client.query;\r\n      query({\r\n        query: PRODUCTFILTERMASTER,\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n        .then((data) => {\r\n          if (data) {\r\n            let product_categories = data.data.allMasterProductCategories.nodes;\r\n            let product_types = data.data.allMasterProductTypes.nodes;\r\n            setMasters({\r\n              product_categories,\r\n              product_types,\r\n            });\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"smbcj\");\r\n        });\r\n\r\n      async function fetchCSVdata() {\r\n        responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\r\n        let responseData = responseCSV.res_json;\r\n     \r\n        if (responseCSV.statuscode === 200) {\r\n          let keyData = [];\r\n\r\n          for (const [key] of Object.entries(responseData[0])) {\r\n            keyData.push({ label: key, key: key });\r\n          }\r\n\r\n          console.log(keyData);\r\n          setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\r\n        }\r\n      }\r\n      fetchCSVdata();\r\n    }, []);\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={6} sm={6}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Products\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\r\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Add New Product\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        <ProductFilter\r\n          masters={masters}\r\n          onSearch={onSearch}\r\n          onFilter={onFilter}\r\n          dataCSV={dataCSV}\r\n        />\r\n        <Product filterparams={filterparams} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Productlist;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New Category\r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {CATGORYLIST} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={CATGORYLIST}\r\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.shortCode} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { MaterialContext } from '../../context';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n  \r\nexport default function Categorycontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const [isadd, setIsadd] = useState(false);\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      setOrders( [\r\n        {\r\n          id: uuid(),\r\n          created_at: \"test\",\r\n          customer: {\r\n            name: 'Ekaterina Tankova'\r\n          },\r\n          payment: {\r\n            ref: 'FAD103',\r\n            method: 'CreditCard',\r\n            total: '500.00',\r\n            currency: '$',\r\n            status: 'pending'\r\n          },\r\n          status: 'inactive'\r\n        }])\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Header onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n      className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n      orders={materialCtx.materialMaster.materials}\r\n    />\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MaterialProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Categorycontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const CategoryList = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </MaterialProvider>\r\n\r\n)});\r\nexport default CategoryList;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","export const makeid = ((length, prefix,couponcount) => {\r\n  var count = 1;\r\n  var codes = []\r\n  if(couponcount)\r\n  {\r\n    count = couponcount;\r\n  }\r\n  let codelength = length - prefix.length\r\n  var result           = '';\r\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  var charactersLength = characters.length;\r\n  generatecode(0)\r\n  function generatecode(generatedcount)\r\n  {\r\n  for ( var i = 0; i < codelength; i++ ) {\r\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  result = prefix.toUpperCase() + result.toUpperCase();\r\n  codes.push(result)\r\n  result = \"\"\r\n  generatedcount = generatedcount + 1\r\n  if(count > generatedcount)\r\n  {\r\n    generatecode(generatedcount);\r\n  }\r\n  }\r\n  return codes;\r\n});","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  ButtonGroup,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Switch,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState([]);\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  const handleendDateChange = val => {\r\n      setSelectedendDate(val)\r\n      setVoucherCtx({\r\n        ...voucherCtx,\r\n        \"enddate\": val\r\n      })\r\n    };\r\n  const handleDateChange = val => {\r\n    setSelectedDate(val)\r\n\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"startdate\": val\r\n    })\r\n};\r\n  const handleClick = (event, option) => {\r\n   // setDiscounttype(option);\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"discounttype\": option\r\n   })\r\n  };\r\n  const handleMinimumreq = (event, option) => {\r\n   // setDiscounttype(option);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"minimumreq\": option\r\n    })\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n    \r\n  };\r\n  const handleInputChange = type => (event, value) => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"vouchercodes\":value\r\n    })\r\n    setVouchercode(value)\r\n  }\r\n  // const handleInputChange = (event, option) => {\r\n  //   alert(JSON.stringify(option))\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setVouchercode(e.target.value.toUpperCase())\r\n  // }\r\n  const handlevouchername = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handlevaluechange = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handleisloggedin = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.checked\r\n    })\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n  //  setIsonce(!isonce);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"isonce\": !voucherCtx.isonce\r\n    })\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\r\n   })\r\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid container item xs={12} sm={12} spacing={1} >\r\n      <Grid   item xs={6} sm={6} >\r\n      <Grid container  item xs={12} sm={12} spacing={1}>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlevouchername('vouchername')}\r\n            id=\"vouchername\"\r\n            name=\"vouchername\"\r\n            value={voucherCtx.vouchername}\r\n            label=\"Voucher Name\"\r\n            />\r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlePrefixChange('voucherprefix')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n             value={voucherprefix}\r\n            label=\"Voucher Prefix\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={6} sm={6} >\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handleCountChange('vouchercount')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            // value={vouchercode}\r\n            label=\"No of vouchers\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={12} sm={12} >\r\n\r\n         {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            \r\n            onChange={handleInputChange('vouchercode')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            value={vouchercode}\r\n            label=\"Voucher Code\"\r\n            />  */}\r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       defaultValue={voucherCtx.vouchercode}\r\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       options={[]}\r\n                        onChange={handleInputChange('vouchercode')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Voucher Codes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                      //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n                       </Grid>\r\n      </Grid>\r\n      </Grid> \r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            multiline\r\n            rows=\"7\"\r\n            onChange={handlevaluechange('voucherdescription')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n           value={voucherCtx.voucherdescription}\r\n            label=\"Voucher Description\"\r\n            />\r\n\r\n      </Grid>\r\n      \r\n    \r\n      <Grid   item xs={2} sm={2} >\r\n        <Button size=\"small\" variant=\"contained\" \r\n        onClick={event => generateCoupon(event)}\r\n        className={classes.margin}>\r\n            Generate Voucher\r\n          </Button>\r\n      </Grid>\r\n      \r\n          \r\n\r\n        </Grid>\r\n        \r\n       \r\n       \r\n     \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n             checked={voucherCtx.isloggedin}\r\n             onChange={handleisloggedin('isloggedin')}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        labelPlacement=\"start\"\r\n\r\n        label=\"Applicable for loggedin user\"\r\n      />  \r\n      </Grid>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n                      \r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n      Discount Type\r\n      </Typography>\r\n      </Grid>\r\n        \r\n\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {props.categories.map(option => (\r\n              \r\n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        </Grid>\r\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n            <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"orderqty\"\r\n          name=\"orderqty\"\r\n          label=\"Minimum order Quantity\"\r\n          onChange={handlevaluechange('minimumqty')}\r\n          value={voucherCtx.minimumqty}\r\n          />\r\n        </Grid> </Grid> :  \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Discount Value\"\r\n          onChange={handlevaluechange('voucherdiscount')}\r\n          value={voucherCtx.voucherdiscount}\r\n          />\r\n          </Grid>\r\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Maximun Discount Value\"\r\n          onChange={handlevaluechange('maxvoucherdiscount')}\r\n          value={voucherCtx.maxvoucherdiscount}\r\n          />\r\n          </Grid> : null}\r\n\r\n        </Grid>\r\n}\r\n      \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Uses per user\"\r\n          defaultValue=\"1\"\r\n          helperText=\"One User can use how many times\"\r\n          onChange={handlevaluechange('isonce')}\r\n          value={voucherCtx.isonce}\r\n          />\r\n        {/* <CardActionArea>\r\n\r\n        <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: voucherCtx.isonce\r\n            })}\r\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n\r\n            key={\"\"}\r\n          >\r\n                <CardActions>\r\n\r\n            <Radio\r\n              checked={voucherCtx.isonce}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              label\r\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n              />\r\n            </CardActions>\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               If this option is disabled, discount will be counted for every eligible product\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          </CardActionArea> */}\r\n          </Grid>\r\n         \r\n          <Grid item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('limittouse')}\r\n          fullWidth\r\n          value={voucherCtx.limittouse}\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          helperText=\"How may times we can  use this\"\r\n\r\n          />\r\n        \r\n        </Grid>\r\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n        Minimum Requirements\r\n        </Typography>\r\n      </Grid>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\r\n              \r\n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        \r\n        </Grid> */}\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} spacing={1}>\r\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('minorder')}\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          value={voucherCtx.minorder}\r\n          label={'Minimum Order Value'}\r\n          />\r\n        {/* } */}\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usage Limits\r\n            </Typography>\r\n          </Grid> */}\r\n{/* \r\n          <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\r\n            })}\r\n            key={\"\"}\r\n            onClick={event => handleusagelimit(event, \"once\")}\r\n\r\n          >\r\n            <Radio\r\n              checked={usagelimit === \"once\"}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleusagelimit(event, \"once\")}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                className={selected === \"\" ? classes.selectedtext : null}\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               Limit to one use per customer\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          \r\n            </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n<div\r\n  className={clsx(classes.option, {\r\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\r\n  })}\r\n  key={\"\"}\r\n  onClick={event => handleusagelimit(event, \"usagecount\")}\r\n\r\n>\r\n  <Radio\r\n    checked={usagelimit === \"usagecount\"}\r\n    className={classes.optionRadio}\r\n    color=\"primary\"\r\n    onClick={event => handleusagelimit(event, \"usagecount\")}\r\n  />\r\n  <div className={classes.optionDetails}>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"h5\"\r\n    >\r\n     Usage Limit\r\n    </Typography>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"title\"\r\n    >\r\n     Limit number of times this discount can be used in total\r\n    </Typography>\r\n    </div>\r\n  \r\n</div>\r\n<Grid item xs={12} sm={12} spacing={1}>\r\n        {usagelimit === 'once' ? null :\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          \r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          />\r\n        }\r\n        </Grid>\r\n  </Grid> */}\r\n          </Grid>\r\n          <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n        <DateTimePicker\r\n          label=\"Start Date\"\r\n          fullWidth\r\n          inputVariant=\"outlined\"\r\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \r\n          minDate={new Date()}    \r\n          onChange={handleDateChange}\r\n        />\r\n    </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n            <DateTimePicker\r\n      label=\"End Date\"\r\n      fullWidth\r\n      inputVariant=\"outlined\"\r\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\r\n      minDate={selectedDate}\r\n      strictCompareDates={true}\r\n      onChange={handleendDateChange}\r\n    />\r\n    </Grid>\r\n        </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\r\n           onChange={handleoptionChange('componenets')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n  \r\nexport default function Voucherdiscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [attributes, setAttributes] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [discountid, setDiscountid] = React.useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  function attributesadded(attributedata)\r\n  {\r\n    setAttributes(attributedata)\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(attributedata)\r\n\r\n  }\r\n  async function creatediscount()\r\n  {\r\n    setIsloading(true)\r\n    var discounttype = 2;\r\n    if(voucherCtx.discounttype === 'Free Shipping')\r\n    {\r\n      discounttype = 3\r\n    }\r\n  else if(voucherCtx.discounttype === 'percentage')\r\n    {\r\n      discounttype =2\r\n    }\r\nelse    {\r\n      discounttype = 1\r\n    }\r\n    let bodydata = {}\r\n    bodydata['vouchername'] = voucherCtx.vouchername;\r\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\r\n    bodydata['description'] = voucherCtx.voucherdescription;\r\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\r\n    bodydata['discounttype'] = discounttype;\r\n    bodydata['discount'] = voucherCtx.voucherdiscount;\r\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\r\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\r\n    bodydata['isonce'] = voucherCtx.isonce;\r\n    bodydata['limittouse'] = voucherCtx.limittouse;\r\n    bodydata['minorder'] = voucherCtx.minorder;\r\n    bodydata['attributes'] = attributes;\r\n    bodydata['startdate'] = voucherCtx.startdate;\r\n    bodydata['enddate'] = voucherCtx.enddate;\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\r\n    setIsloading(false)\r\n    setOpen(true)\r\n\r\n    window.location='/voucherdiscountlist'\r\n\r\n  }\r\n\r\n  async function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setIsloading(false)\r\n\r\n    \r\n  }\r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      id : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\r\n    let voucherobj = response.response\r\n    let discounttype = voucherobj.discounttype\r\n    var discounttypeval = \"percentage\"\r\n    if(discounttype === 1)\r\n    {\r\n      discounttypeval = 'Fixed'\r\n    }else if(discounttype === 3)\r\n    {\r\n      discounttypeval = 'Free Shipping'\r\n\r\n    }\r\n    let categories = voucherobj.product_attributes.category;\r\n    let selectedcategories = []\r\n    if(categories)\r\n    {\r\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\r\n      if(categories.indexOf(catobj.alias) > -1)\r\n      {\r\n        selectedcategories.push(catobj)\r\n      }\r\n    })\r\n  }\r\n    let materials = voucherobj.product_attributes.materials;\r\n    let selectedmaterials = []\r\n    if(materials)\r\n    {\r\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\r\n      if(materials.indexOf(matobj.alias) > -1 )\r\n      {\r\n        selectedmaterials.push(matobj)\r\n      }\r\n    })\r\n  }\r\n    \r\n    let producttypes = voucherobj.product_attributes.product_types;\r\n    let selectedproduct_types = []\r\n    if(producttypes)\r\n    {\r\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\r\n      if( producttypes.indexOf(protypeobj.alias) > -1)\r\n      {\r\n        selectedproduct_types.push(protypeobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let collections = voucherobj.product_attributes.collections;\r\n    let selectedcollections = []\r\n    if(collections)\r\n    {\r\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\r\n      if( collections.indexOf(collectionobj.alias) > -1)\r\n      {\r\n        selectedcollections.push(collectionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let occassions = voucherobj.product_attributes.occations;\r\n    let selectedoccassions = []\r\n    if(occassions)\r\n    {\r\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\r\n      if( occassions.indexOf(occassionobj.alias) > -1)\r\n      {\r\n        selectedoccassions.push(occassionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let themes = voucherobj.product_attributes.themes;\r\n  let selectedthemes = []\r\n  if(themes)\r\n  {\r\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\r\n    if( themes.indexOf(themeobj.alias) > -1)\r\n    {\r\n      selectedthemes.push(themeobj)\r\n    }\r\n  })\r\n}\r\n\r\n  let styles = voucherobj.product_attributes.styles;\r\n    let selectedstyles = []\r\n    if(styles)\r\n    {\r\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\r\n      if( styles.indexOf(styleobj.alias) > -1)\r\n      {\r\n        selectedstyles.push(styleobj)\r\n      }\r\n    })\r\n  }\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      vouchername: voucherobj.name,\r\n      vouchercode: voucherobj.voucher_codes,\r\n      voucherdescription : voucherobj.description,\r\n      isloggedin: voucherobj.isloginneeded,\r\n      discounttype: discounttypeval,\r\n      minimumqty:0,\r\n      maxvoucherdiscount:voucherobj.max_discount,\r\n      isonce: voucherobj.max_uses_user,\r\n      limittouse:voucherobj.max_uses,\r\n      voucherdiscount:voucherobj.discount_amount,\r\n      minorder: voucherobj.min_cart_value,\r\n      startdate: voucherobj.starts_at,\r\n      enddate: voucherobj.expires_at,\r\n      category: selectedcategories,\r\n      materials: selectedmaterials,\r\n      product_types : selectedproduct_types,\r\n      collections : selectedcollections,\r\n      styles: selectedstyles,\r\n      themes: selectedthemes\r\n    })\r\n    setIsloaded(true)\r\n    }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n    {\r\n       setDiscountid( props.location.pathname.split('/')[2]);\r\n      getdiscountvalue(props.location.pathname.split('/')[2])\r\n  \r\n    }else{\r\n      setIsloaded(true)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <FullLoader title=\"\" isopen={isloading}/>\r\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n   {isloaded ? <>\r\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\r\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\r\n\r\n    <Typography variant=\"h5\" component=\"h2\">\r\n    {products.length} Products and {skus.length} skus\r\n  </Typography>\r\n          </Grid>\r\n          \r\n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\r\n          </Grid>:null} </>\r\n          : null }\r\n          </>:null}\r\n    \r\n   \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './VoucherdiscountContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Voucherdiscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Voucherdiscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [status, setStatus] = useState({});\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  function handleAdd(e) {\r\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\r\n\r\n    props.update(e)\r\n  }\r\n  function handleupdate(e) {\r\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\r\n\r\n    props.resumeupdate(e)\r\n  }\r\n  \r\n\r\n  function handledownload(e) {\r\n    props.downloadlog()\r\n  }\r\n async function handlestatus(e) {\r\n   let bodydata = {\r\n    \"component\":e.label\r\n   }\r\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\r\n\r\n    setStatus({...status, [e.id]: response.message})\r\n  }\r\n  async function getpricestatus(component)\r\n  {\r\n\r\n  }\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card style={{marginTop : 16}}>\r\n        \r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Components</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Action</TableCell>\r\n\r\n                    <TableCell align=\"center\">Status</TableCell>\r\n                    <TableCell align=\"center\">Restart</TableCell>\r\n\r\n                    <TableCell align=\"center\">Log</TableCell>\r\n\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.pricingrows.map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.id}</TableCell>\r\n                      <TableCell align=\"center\">  \r\n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\r\n                          ₹ Run\r\n                        </Button>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                        {status[order.id] ? status[order.id] : \"\"}\r\n                        \r\n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\r\n                          <RefreshIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\r\n                        Re Run\r\n\r\n                      </Button>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\r\n                        Download\r\n                      </Button>\r\n                      </TableCell>\r\n                     \r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          \r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  Chip,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\r\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\r\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\r\n  const [productids, setProductids] = useState(props.productids);\r\n  \r\n  \r\n  const [updatestatus, setUpdatestatus] = useState(\"\");\r\n\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n\r\n  const handleproducttypechange = type => (event, option) => {\r\n      \r\n    let vendorsarray = []\r\n    option.forEach(element => {\r\n      vendorsarray.push(element.name)\r\n    });\r\n    setFormData({...formData, producttypes:vendorsarray})\r\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\r\n  };\r\n  const handlecategorychange = type => (event, option) => {\r\n    let vendorsarray = []\r\n    option.forEach(element => {\r\n      vendorsarray.push(element.name)\r\n    });\r\n    setFormData({...formData, categories:vendorsarray})\r\n\r\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\r\n  };\r\n  const hangeoptionchange = type => (event, option) => {\r\n    \r\n    let vendorsarray = []\r\n    option.forEach(element => {\r\n      vendorsarray.push(element.shortCode)\r\n    });\r\n    setFormData({...formData, vendorid:vendorsarray})\r\n\r\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\r\n  };\r\n \r\n  const handleClick = async (event, option) => {\r\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\r\n    if(response.status < 400){\r\n    }else{\r\n      alert(\"error\")\r\n    }\r\n  };\r\n  const handleuploadstatus = async (event, option) => {\r\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\r\n    if(response.status < 400){\r\n      setUpdatestatus(response.message)\r\n    }else{\r\n    }\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n  const handleInputChange = type => e => {\r\n    setVouchercode(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder =  (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(makeid(10))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={2}>  \r\n        <Grid item xs={6} sm={4}>\r\n           <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.vendorlist}\r\n              getOptionLabel={option => option.display}\r\n              fullWidth\r\n              onChange={hangeoptionchange('vendorcode')}\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\r\n              )}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={6} sm={4} >\r\n        <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.categorylist}\r\n              getOptionLabel={option => option.name}\r\n              onChange={handlecategorychange('category')}\r\n              fullWidth\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\r\n              )}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={6} sm={4}>\r\n        <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.producttypelist}\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleproducttypechange('product_type')}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\r\n              )}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n        \r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       disabled={props.isdisabled}\r\n                       className={classes.fixedTag}\r\n                       value={props.productids}\r\n                       options={productids}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n\r\n       \r\n       \r\n       {/* <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleClick}\r\n        color=\"primary\">\r\n        Update Price\r\n      </Button>\r\n      </Grid>\r\n      \r\n      <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Update Status\r\n      </Button>\r\n      <Typography variant=\"subtitle1\">\r\n                {updatestatus}\r\n      </Typography>\r\n\r\n      </Grid> */}\r\n      {/* <Grid item xs={6} sm={3} >\r\n      <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Price Update\r\n      </Button>\r\n       \r\n      </Grid> */}\r\n        </Grid>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fullloader from '../../components/Loader';\r\n\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher } from './components';\r\nimport { productCategory } from '../../services/mapper';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader';\r\nconst rows = [\r\n  { id: 'Diamond', label: 'Diamond' },\r\n  { id: 'Gemstone', label: 'Gemstone' },\r\n  { id: 'Metal & Making Charge', label: 'Gold' },\r\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  \r\n}));\r\n  \r\nexport default function PriceupdateContent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const [masters, setMasters] = useState([]);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [sizes, setSizes] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [startrun, setStartrun] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  async function updateprices(component)\r\n{\r\n  setOpen(true)\r\n  var  bodydata = {}\r\n  bodydata = {\r\n    pricingcomponent: component.label,\r\n    req_product_id : products\r\n  }\r\n  setStartrun(true)\r\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\r\n  setOpen(false)\r\n}\r\nasync function rerun(component)\r\n{\r\n  var  bodydata = {}\r\n  bodydata = {\r\n    component: component.label,\r\n    // req_product_id : products\r\n  }\r\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\r\n  let history_id = response.id;\r\n  let update_products = response.products\r\n  if(response.products && response.products.length > 0)\r\n  {\r\n    setOpen(true)\r\n\r\n    var  bodydata = {}\r\n    bodydata = {\r\n      pricingcomponent: component.label,\r\n      req_product_id : update_products,\r\n      history_id : history_id\r\n    }\r\n    setStartrun(true)\r\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\r\n    setOpen(false)\r\n  }else\r\n  {\r\n    alert(\" Doesn't have any incomplete products\")\r\n  }\r\n  \r\n}\r\n\r\n async function filterapllied(filterdata, categories, producttypes)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n      bodydata = {\r\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\r\n        product_category : categories && categories.length > 0 ? categories : '',\r\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\r\n      }\r\n\r\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\r\n    setProducts(response.products)\r\n    setCategories(response.category)\r\n    setVendors(response.vendorlist)\r\n    // if(response.status < 400){\r\n    //   alert(JSON.stringify(products))\r\n    // }\r\n  }\r\n  async function downloadlog()\r\n  {\r\n\r\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\r\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\r\n  \r\n  }\r\n async function getsizes()\r\n  {\r\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\r\n    if(response.status < 400){\r\n      setSizes(response.sizes)\r\n    }else{\r\n      alert(\"succes21s\")\r\n    }\r\n      \r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    //filterapllied()\r\n    //getsizes();\r\n    setMasters(productCategory.mapper(props.data));\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\r\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { productCategory } from '../../services/mapper';\r\nimport Component from './PriceupdateContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Priceupdate = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} data={data} />\r\n    // </VoucherProvider>\r\n\r\n)});\r\nexport default Priceupdate;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = props.columns\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    const [showcolumns,setshowColumns ] = React.useState()\r\n    \r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(!data.disabled)\r\n            {\r\n                data.isActive = false;\r\n            }    \r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function saveaction(){\r\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n        //     if(data.isActive){\r\n        //               }\r\n        //               return data;  \r\n\r\n        // })\r\n        let columnnames = []\r\n        columns.listOfValue.forEach(element => {\r\n            if(element.isActive)\r\n            {\r\n                columnnames.push(element)\r\n            }\r\n        });\r\n        props.getColumnnames(columnnames);\r\n        props.columnclose()\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                               disabled = {head.disabled}\r\n                            onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Columns from './columns';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    // button: {\r\n    //     color:\"#06847B\",\r\n    //     border: \"1px solid #7bbcb7\",\r\n    //     '&:hover':{\r\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n    //         border: \"1px solid #06847B\",\r\n    //     }\r\n    //   },\r\n\r\n}));\r\n\r\nfunction SortHeader(props){\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(false);\r\n      };\r\n      const open = Boolean(anchorEl);\r\n      const id = open ? 'simple-popover' : undefined;\r\n    \r\n     \r\n        return(\r\n            <Grid container lg={12} md={12} sm={12} xs={12} >\r\n               \r\n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\r\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\r\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\r\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\r\n                        </Button> */}\r\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\r\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\r\n                        </Button>\r\n                        \r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\r\n                        </Popover>\r\n\r\n\r\n\r\n                    </Grid>\r\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n\r\n}\r\nexport default SortHeader","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport SortHeader from './SortHeader';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    placeItems:\"center\",\r\n  },\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const handleApplicationOpen = () => {\r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  function handlesearch(){\r\n    props.onSearch(searchtext)\r\n  }\r\n  const handleinputChange =type => e => {\r\n    setSearchtext(e.target.value)\r\n   //props.onSearch(e.target.value)\r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n\r\n      <Grid\r\n        className={classes.contantview}\r\n        container\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={3} >\r\n           <Typography\r\n           variant=\"h4\"\r\n           style={{margin: \"8px\"}}\r\n          >\r\n            Orders\r\n          </Typography>\r\n           {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n          >\r\n             Order List\r\n          </Typography>  */}\r\n        </Grid>\r\n        <Grid container xs={6} item  >\r\n        <Grid xs={9} item >\r\n               <TextField\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={searchtext}\r\n                    id=\"productname\"\r\n                    name=\"productname\"\r\n                    label=\"Search by name/email/mobile\"\r\n                    //onInput={keyPress.bind(this)}\r\n                    onChange={handleinputChange('searchtext')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  />\r\n\r\n          </Grid>\r\n        <Grid xs={3} item >\r\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \r\n\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\r\n\r\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  debugger\r\n  console.log(props);\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell> */}\r\n        {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            width={headCell.type == 9 ? 300 : null}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label ? headCell.label : headCell.name}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Moment from 'react-moment';\r\nimport { TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Grid,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  table: {\r\n   // minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n    overflowY: 'auto',\r\n    maxHeight: '100vh'\r\n  },\r\n  containergrid: {\r\n    overflowX: 'scroll',\r\n    width: 1000,\r\n    height: 20,\r\n    overflowY: 'hidden'\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  debugger\r\n  console.log(props)\r\n  const { className, orders, ...rest } = props;\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\r\n  const handleRequestSort = (event, property) => {\r\n\r\n    const isAsc = orderBy === property && order === 'asc';\r\n\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  const classes = useStyles();\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    \r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n  async function Savevendor(refetch) {\r\n    props.onupdate(editcontent)\r\n   // setIsadd(false)\r\n  // alert(JSON.stringify(editcontent))\r\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n // refetch()\r\n}\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  async function showorderdetails(orderurl){\r\n    \r\n  window.open(orderurl, '_blank');\r\n   }\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Editvendor(vendordata) {\r\n      let paymentstatusobj = {}\r\n      props.orderstatus.forEach(element => {\r\n        if(vendordata.orderstatus === element.name)\r\n        {\r\n          paymentstatusobj = element;\r\n        }\r\n      });\r\n      \r\n     delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      orderstatus : paymentstatusobj,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n  //  alert(diamondData.paymentstatus)\r\n    // if(isadd)\r\n    // {\r\n    //   let masters = masterlist;\r\n \r\n    //  masters.splice(0, 1)\r\n    //  setMasterlist(masterlist)\r\n \r\n    // }\r\n    //    setIsadd(false)\r\n     setEditcontent({})\r\n     setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    \r\n      <Card>\r\n       \r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          \r\n         \r\n            <div className={classes.tableWrapper}>\r\n              \r\n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\r\n                {/* <TableHead>\r\n                  <TableRow>\r\n                  {props.columnobjs.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))} */}\r\n              <EnhancedTableHead\r\n              columns={props.columnobjs}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n                    {/* <TableCell>Order ID</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Order Date</TableCell>\r\n                    <TableCell align=\"center\">Customer Name</TableCell>\r\n                    <TableCell align=\"center\">Email</TableCell>\r\n                    <TableCell align=\"center\">Mobile</TableCell>\r\n                    <TableCell align=\"center\">Shipping Address</TableCell>\r\n                    <TableCell align=\"center\">Gift Message</TableCell>\r\n                    <TableCell align=\"center\">Payment Type</TableCell>\r\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\r\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\r\n                    <TableCell align=\"center\">Comments</TableCell>\r\n                    <TableCell align=\"center\">PG Response</TableCell> */}\r\n\r\n                  {/* </TableRow>\r\n                </TableHead> */}\r\n                <TableBody style={{overflow : \"scroll\"}}>\r\n                {stableSort(orders, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      {props.columnobjs.map(col => (\r\n                        <>\r\n                        {col.key === 'action' && props.iswrite?   \r\n                        <TableCell align=\"center\" style = {{width: 20}}>\r\n                        {\r\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\r\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                          </Button>\r\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\r\n                          </Button></> : <Button \r\n                           >\r\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\r\n                     </Button>\r\n                         } \r\n                   </TableCell> : \r\n                   <>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == order.orderid  ?\r\n                        <TableCell>\r\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \r\n                        { col.type == 2 ? <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        \r\n                        id={col.key}\r\n                        name={col.key}\r\n                        value={editcontent[col.key]}\r\n                        onChange={handleInputChange(col.key)}\r\n    \r\n                        label={col.label}\r\n                       />:null } \r\n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {order[col.key]} \r\n                                       </Moment>:null } \r\n\r\n                   {col.type == 5 && order.paymentmode == 'COD' ? \r\n                  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={props.paymentstatus}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[col.key]}\r\n                  onChange={handleoptionChange(col.key)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\r\n                /> : null }  \r\n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \r\n       \r\n                  {col.type == 3 ? \r\n                  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={props.orderstatus}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[col.key]}\r\n                  onChange={handleoptionChange(col.key)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\r\n                /> : null }\r\n                            \r\n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\r\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {order[col.key]} \r\n                             </Moment>: <Typography> {order[col.key]}</Typography> } \r\n\r\n                          \r\n                           \r\n                           </TableCell> }\r\n                        </>\r\n                        }\r\n                       \r\n                      </>\r\n                      ))}                      \r\n\r\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {order.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell> : null }\r\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\r\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\r\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\r\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\r\n\r\n                      {/* <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[10,50, 100, 250]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n   \r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { OrderContext } from '../../context';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport Columns from './components/columnnames.json';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    //marginTop: theme.spacing(3)\r\n  },\r\n  \r\n}));\r\n  \r\nexport default function Producttypecontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\r\n  const [columnnames, setColumnnames] = useState(Columns.columns);\r\n  const [filteredorder, setFilteredorder] = useState([]);\r\n  const [paymentstatus, setpaymentstatus] = useState([]);\r\n  const [orderstatus, setorderstatus] = useState([]);\r\n  const [iswrite, setIswrite] = useState(false);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\r\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\r\n\r\n  function columnchanged(columnnames){\r\n    let displycolumns = [];\r\n    columnnames.forEach(element => {\r\n      displycolumns.push(element.name)\r\n    })\r\n    setDisplaycolumns(columnnames)\r\n    setDisplaycolumnnames(displycolumns)\r\n  }\r\n\r\n  async function updateorder(ordercontent)\r\n  {\r\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\r\n    window.location.reload();\r\n\r\n   // getorders()\r\n  }\r\n  function searchorder(searchtext)\r\n  {\r\n    if(searchtext.length > 0)\r\n    {\r\n    var data_filter = orders.filter( element => \r\n      element.email &&  element.email.match(searchtext+'.*')  || \r\n      element.mobile && element.mobile.match(searchtext+'.*') ||\r\n      element.orderid && element.orderid.match(searchtext+'.*') || \r\n      element.username && element.username.match(searchtext+'.*')\r\n      )\r\n      setFilteredorder(data_filter)\r\n    }else{\r\n      setFilteredorder(orders)\r\n    }\r\n  }\r\n  async function getorders()\r\n  {\r\n    var orders_arr = []\r\n    orderCtx.orderMaster.orders.forEach(element => {\r\n\r\n        let orderobj = {}\r\n        orderobj['orderid'] = element.id\r\n        orderobj['orderdate'] = element.createdAt\r\n        orderobj['paymentmode'] = element.paymentMode\r\n        orderobj['cartid'] = element.cartId\r\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\r\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\r\n       orderobj['comments'] = element.comments ? element.comments : \"\"\r\n       orderobj['orderstatus'] = element.orderStatus\r\n       if(element.paymentMode === 'COD')\r\n       {\r\n        orderobj['paymentstatus'] = element.paymentStatus\r\n\r\n       }\r\n        if(element.paymentDetailsByOrderId)\r\n        {\r\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\r\n            pgresponseobj.forEach(pgres => {\r\n           let response_pg =   JSON.parse(pgres.paymentResponse)\r\n                    if(element.paymentMode === 'Prepaid')\r\n                    {\r\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\r\n\r\n                    }\r\n\r\n            } )\r\n        }\r\n        if(element.shoppingCartByCartId)\r\n        {\r\n            let cartcontent = element.shoppingCartByCartId\r\n\r\n                if(cartcontent.cartAddressesByCartId)\r\n                {\r\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\r\n                    addresscontent.forEach(addressobj => {\r\n                        orderobj['address'] = addressobj.addressline1\r\n                        if(!orderobj[\"mobile\"])\r\n                        {\r\n                          orderobj['mobile'] = addressobj.contactNumber\r\n\r\n                        }\r\n                        if(!orderobj[\"username\"])\r\n                        {\r\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\r\n            {\r\n              \r\n\r\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\r\n                let skus = []\r\n                \r\n                cartitemscontent.forEach(element => {\r\n                    if(element.transSkuListByProductSku)\r\n                    {\r\n                        skus.push(element.transSkuListByProductSku.generatedSku)\r\n                    }\r\n\r\n                    \r\n                })\r\n                orderobj['skus'] = skus.join(' , ')\r\n            }\r\n            if(cartcontent.userProfileByUserprofileId)\r\n            {\r\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\r\n              let usercontent = cartcontent.userProfileByUserprofileId\r\n              if(usercontent.firstName)\r\n              {\r\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\r\n\r\n              }\r\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\r\n                if(!orderobj[\"username\"])\r\n                            {\r\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\r\n\r\n\r\n                            }\r\n\r\n              let useraddressess = usercontent.userAddressesByUserProfileId\r\n              if(useraddressess)\r\n              {\r\n                let address_arr = useraddressess.nodes\r\n                address_arr.forEach(useraddressobj => {\r\n\r\n                  // if(!orderobj[\"mobile\"])\r\n                  // {\r\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\r\n                  // }\r\n                  // if(!orderobj[\"mobile\"])\r\n                  // {\r\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\r\n                  // }\r\n                });\r\n              }\r\n            }\r\n\r\n            if(cartcontent.giftwrapsByCartId)\r\n            {\r\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\r\n                giftobj.forEach(gift => {\r\n                    orderobj['giftmessage'] = gift.message\r\n                })\r\n            }\r\n        }\r\n        orders_arr.push(orderobj)\r\n    });\r\n    \r\n    setOrders(orders_arr)\r\n    setFilteredorder(orders_arr)\r\n  }\r\n  async function getmaster(getmaster)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n\r\n        \r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let pagepermission = localStorage.getItem('pagepermissions')\r\n    if(pagepermission.indexOf('/orderlist') > -1)\r\n    {\r\n      setIswrite(true)\r\n\r\n    }else\r\n    {\r\n      setIswrite(false)\r\n    }\r\n    getmaster()\r\n  }, [])\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n        \r\n     \r\n    };\r\n\r\n    getmaster()\r\n    getorders()\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n  debugger\r\nconsole.log(displaycolumnnames)\r\nconsole.log(displaycolumns)\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={6} sm={6}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            Orders\r\n          </Typography>\r\n          </Grid>\r\n          \r\n    </Grid> */}\r\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\r\n    {filteredorder ? <Results\r\n      className={classes.results}\r\n      orderstatus={paymentstatus}\r\n      paymentstatus={orderstatus}\r\n      iswrite={iswrite}\r\n     orders={filteredorder}\r\n     onupdate={updateorder}\r\n     showcolumns={displaycolumnnames}\r\n     columnobjs={displaycolumns}\r\n\r\n\r\n    /> : null }\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { OrderProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { orderList } from '../../services/mapper';\r\nimport { ORDERS } from '../../services/queries';\r\n\r\nimport Component from './Orderlistcontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const OrderList = withRouter(props => {\r\n    const classes = useStyles();\r\n    let user_id = props.location.pathname.split('/')[2];\r\n      \r\n    const { data, loading, error } = useQuery(ORDERS(user_id));\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </OrderProvider>\r\n\r\n)});\r\nexport default OrderList;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Divider} from '@material-ui/core'\r\nexport default function ConformationAlert(props) {\r\n  \r\n  const handleOk = () => {\r\n    props.onSuccess(props.data, props.refetch)\r\n  };\r\n  const handleClose = () => {\r\n    props.onCancel()\r\n  };\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.isshow}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n            Verify details before deleting\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\r\n          {props.positivebtn}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [metaldata, setMetaldata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.save(metaldata,props.refetch)\r\n  };\r\n\r\nconst handleoptionChange = type => (event, value) => {\r\n    setMetaldata({ ...metaldata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMetaldata({\r\n    ...metaldata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Gold Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('pricetype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"sellingprice\"\r\n              name=\"Selling Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{ useEffect, useContext, useState }  from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConformationAlert from '../../../components/ConformationAlert'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, Grid, Card} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport Moment from 'react-moment';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Addmetalprice from './Addmetalprice'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\r\n\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport { MATERIALMASTER } from '../../../services/queries';\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n  const [goldpricelist,setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalmaster,setMetalmaster] = React.useState([])\r\n  const [puritymaster,setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  async function handleAdd(metalcontent,refetch)\r\n\r\n  {\r\nvar bodydata = {}\r\nbodydata = {\r\nmaterial : metalcontent.metal.name,\r\n purity: metalcontent.purity.shortCode,\r\n costprice : metalcontent.costPrice,\r\n sellingprice : metalcontent.sellingPrice,\r\n pricetype: metalcontent.pricetype.label,\r\n vendor : props.vendor,\r\n isadd: true\r\n}\r\nconsole.log(\"--------\")\r\n\r\nconsole.log(JSON.stringify(bodydata))\r\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n setOpen(false)\r\n refetch()\r\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  \r\n  function handleEdit(diamondData) {\r\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\r\n      let selectedsellingPriceType = {}\r\n      pricetypes.forEach(element => {\r\n    \r\n        if(element.label == diamondData.sellingPriceType)\r\n        {\r\n          selectedsellingPriceType = element\r\n        }\r\n      })\r\n        setEditdiamond({  \r\n          ...editdiamond,\r\n          priceid: diamondData.id,\r\n          costPrice : diamondData.costPrice,\r\n          sellingPriceType : diamondData.sellingPriceType,\r\n          selectedsellingPriceType : selectedsellingPriceType,\r\n          sellingPrice : diamondData.sellingPrice,\r\n          updatedAt : new Date()\r\n\r\n\r\n        })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch){\r\n    var bodydata = {}\r\n   bodydata = {\r\n    priceid: editdiamond.priceid,\r\n    costprice : editdiamond.costPrice,\r\n    sellingprice : editdiamond.sellingPrice,\r\n    pricetype: editdiamond.sellingPriceType.label\r\n   }\r\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n    refetch()\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value})\r\n}\r\n  const handleinputChange =type => e => {\r\n   setEditdiamond({\r\n     ...editdiamond,\r\n     [type]: e.target.value\r\n   })\r\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n   \r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  // useEffect(() => {\r\n  //   const query = props.client.query\r\n  //     query({\r\n  //       query: ALLPRODUCTLIST,\r\n  //       fetchPolicy: \"network-only\"\r\n  //     }).then((data) => {\r\n  //       // if (data) {\r\n  //       // setProductlists(data.data.allProductLists.nodes)\r\n  //       // setAllProductlists(data.data.allProductLists.nodes)\r\n  //       // setPageCount( data.data.allProductLists.totalCount )\r\n  //       // }else{\r\n  //       //   alert(\"success\")\r\n  //       // }\r\n  //     })\r\n  //   .catch((error) => {console.log(\"smbcj\")})\r\n  //   }, [])\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n      <>\r\n     \r\n    <Card className={classes.cardcontent} > \r\n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n      <Grid item xs={6}> \r\n      <Typography variant=\"h6\"> \r\n        {\"Gold Price Setup\"}\r\n      </Typography> \r\n      </Grid>\r\n      {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n      </Grid>\r\n\r\n      </Grid>\r\n    </Card>\r\n    <Paper className={classes.root}>\r\n      \r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={GOLDPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": props.vendor}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                        setGoldpricelist(data)\r\n                          return <>\r\n                           <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \r\n\r\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\r\n                                  <TableRow key={row.material}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.material}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.purity}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.costPrice}\r\n                                    onChange={handleinputChange('costPrice')}\r\n                                    id=\"productvendorcode\"\r\n\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.sellingPrice}\r\n                                    onChange={handleinputChange('sellingPrice')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPrice} </Typography>  }\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                    {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      value={editdiamond.selectedsellingPriceType}\r\n                                      onChange={handleoptionChange('sellingPriceType')}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell>\r\n\r\n\r\n\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 170}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 170}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table> \r\n\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [diamonddata, setDiamonddata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(diamonddata, props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setDiamonddata({ ...diamonddata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setDiamonddata({\r\n    ...diamonddata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Diamond Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\r\n              options={props.diamonds}\r\n              onChange={handleoptionChange('diamondtype')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Diamond Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input} from '@material-ui/core';\r\nimport {Grid, Card} from '@material-ui/core';\r\nimport ConformationAlert from '../../../components/ConformationAlert'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport Adddiamondprice from './Adddiamondprice'\r\n\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n   \r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(metalcontent,refetch)\r\n\r\n  {\r\n    alert(\"i am here\")\r\n    let bodydata = {}\r\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\r\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\r\n    bodydata['costprice'] = metalcontent.costPrice\r\n    bodydata['pricetype'] = metalcontent.pricetype.label\r\n    bodydata['sellingprice'] = metalcontent.sellingprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['isadd'] = true\r\n\r\n\r\n    \r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n  setOpen(false)\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n    refetch()\r\n  }\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        priceid : diamondData.id,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id,refetch){\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice : editdiamond.costPrice,\r\n      sellingprice : editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n     }\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n  \r\n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      refetch()\r\n\r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value})\r\n}\r\n  const handleinputChange =type => e => {\r\n   setEditdiamond({\r\n     ...editdiamond,\r\n     [type]: e.target.value\r\n   })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       // alert(JSON.stringify(fatchvalue))\r\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n  \r\n    <Card className={classes.cardcontent} > \r\n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n    <Grid item xs={6}> \r\n      <Typography variant=\"h6\"> \r\n        {\"Diamond Price Setup\"}\r\n      </Typography> \r\n      </Grid>\r\n     \r\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n      </Grid>\r\n\r\n\r\n      </Grid>\r\n    </Card>\r\n    <Paper className={classes.root}>\r\n    \r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": props.vendor}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                             <ConformationAlert \r\n                            title={\"Are you sure to delete?\"} \r\n                            positivebtn={\"Yes\"} \r\n                            negativebtn={\"No\"} \r\n                            message={\"\"} \r\n                            refetch={refetch}\r\n                            data={deleteid}\r\n                            onSuccess={handledelete}\r\n                            onCancel={hidedeleteconformation}\r\n                            isshow={isconformation} />\r\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \r\n\r\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                                  <TableRow key={row.diamondClarity}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.diamondClarity}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.diamondColour}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.costPrice}\r\n                                    onChange={handleinputChange('costPrice')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.sellingPrice}\r\n                                    onChange={handleinputChange('sellingPrice')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      onChange={handleoptionChange('sellingPriceType')}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 170}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 170}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table> \r\n      </div>\r\n\r\n    </Paper>\r\n  </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addgemstoneprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [gemstonedata, setGemstonedata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(gemstonedata)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setGemstonedata({ ...gemstonedata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setGemstonedata({\r\n    ...gemstonedata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('gemstone')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.gems}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Gemstone\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {props.viewtype == 1 ? \r\n          <>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              onChange={handleinputChange('weightend')}\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          </> : null }\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              onChange={handleinputChange('costprice')}\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{ useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input} from '@material-ui/core';\r\nimport {Card,CardContent} from '@material-ui/core';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Grid} from '@material-ui/core';\r\nimport ConformationAlert from '../../../components/ConformationAlert'\r\n\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport Addgemstoneprice from './Addgemstoneprice'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'From weight', label: 'From weight' },\r\n  { id: 'To Weight', label: 'To Weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\r\n\r\n];\r\nconst stonecountcolumns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  \r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid,setVendorid] = React.useState(props.vendor);\r\n  const [deleteid, setDeleteid] = React.useState([]);\r\n  const [gemmaster, setGemmaster] = React.useState([]);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editgem,setEditgem] = React.useState({})\r\n  const [gemlist,setgemlist] = React.useState([])\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n async function handledelete(diamondcontent)\r\n  {\r\n    if(deleteid.length > 0)\r\n    {\r\n      let variables ={\r\n        elementId:deleteid[0]\r\n      }\r\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\r\n    }\r\n    if(deleteid.length > 1)\r\n    {\r\n      let variables ={\r\n        elementId:deleteid[1]\r\n      }\r\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\r\n    }\r\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\r\n\r\n    //   if(res!==null){\r\n    //    // refetch();\r\n    //     // refetchval()\r\n    //     getgemlist()\r\n    //   }\r\n    // }).catch(err => {\r\n\r\n    // })\r\n    setgemlist([])\r\n\r\n    setDeleteid([])\r\n    getgemlist()\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n\r\n    let deleteids = [];\r\n    deleteids.push(diamondData.costprice.id)\r\n    deleteids.push(diamondData.sellprice.id)\r\n\r\n     setDeleteid(deleteids)\r\n     setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(gemstonedata){\r\n    var bodydata = {}\r\n    bodydata['gemstone_type'] = gemstonedata.name\r\n    bodydata['weight_start'] = gemstonedata.weightstart\r\n    bodydata['weight_end'] = gemstonedata.weightend\r\n    bodydata['cost_price'] = gemstonedata.costprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\r\n    bodydata['selling_price']= gemstonedata.sellingprice\r\n    bodydata['isadd']=true\r\n\r\n   // alert(JSON.stringify(gemstonedata))\r\n\r\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\r\n    setOpen(false)\r\n     getgemlist()\r\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditgem({\r\n        ...editgem,\r\n        cost_price_id : diamondData.costprice.id,\r\n        weight_start : diamondData.costprice.weight_start,\r\n        weight_end : diamondData.costprice.weight_end,\r\n        cost_price : diamondData.costprice.price,\r\n         selling_price : diamondData.sellprice.price,\r\n         selling_price_id : diamondData.sellprice.id,\r\n\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\r\n\r\n  }\r\n\r\n async function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\r\n\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  async function getgemlist()\r\n  {\r\n    let bodydata = {\r\n      vendorid : props.vendor,\r\n      ratetype : props.viewtype\r\n    }\r\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\r\n   // setProductlists(response.products)\r\n   setgemlist(response.gems)\r\n\r\n  }\r\n  useEffect( () => {\r\n    getgemlist()\r\n  }, [vendorid])\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n       \r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const handleinputChange =type => e => {\r\n    setEditgem({\r\n      ...editgem,\r\n      [type]: e.target.value\r\n    })\r\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n    \r\n   }\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n     <ConformationAlert \r\n      title={\"Are you sure to delete?\"} \r\n      positivebtn={\"Yes\"} \r\n      negativebtn={\"No\"} \r\n      message={\"\"} \r\n      onSuccess={handledelete}\r\n      data={deleteid}\r\n      onCancel={hidedeleteconformation}\r\n      isshow={isconformation} />\r\n   <Card className={classes.cardcontent} > \r\n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n      <Grid item xs={6}> \r\n      <Typography variant=\"h6\"> \r\n        {props.title}\r\n      </Typography> \r\n      </Grid>\r\n      {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n      </Grid>\r\n\r\n      </Grid>\r\n    </Card>\r\n    <Paper className={classes.root}>\r\n       \r\n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\r\n        \r\n      </div> */}\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            {props.viewtype == 1 ? \r\n            <TableRow>\r\n              \r\n              {columns.map(column => (\r\n              \r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow> : <TableRow>\r\n              \r\n              {stonecountcolumns.map(column => (\r\n              \r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow> }\r\n          </TableHead>\r\n          <TableBody>\r\n          {/* <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <> */}\r\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\r\n                                  <TableRow key={row.gemstoneType}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.costprice.gemstone_type}\r\n                                    \r\n                                  </TableCell>\r\n                                  {props.viewtype == 1 ? \r\n                                  <>\r\n                                  <TableCell align=\"left\">\r\n                                  <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_start}\r\n                                   </Typography>\r\n                                  {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_start}\r\n                                   </Typography>  } */}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_end}\r\n                                   </Typography> \r\n                                  {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_end}\r\n                                   </Typography>  } */}\r\n                                    </TableCell>\r\n                                    </> : null}\r\n                                    <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.cost_price}\r\n                                    onChange={handleinputChange('cost_price')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.price}\r\n                                   </Typography>  }\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.selling_price}\r\n                                    onChange={handleinputChange('selling_price')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellprice.price}\r\n                                   </Typography>  }\r\n                                    </TableCell>\r\n\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\r\n                                      <TableCell  style = {{width: 170}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 170}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          {/* </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      } \r\n                  }}*/}\r\n          {/* </Query> */}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n        {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n        </Table> \r\n      </div>\r\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \r\n\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmakingchargeprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [makingcharge, setMakingcharge] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(makingcharge)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMakingcharge({ ...makingcharge, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMakingcharge({\r\n    ...makingcharge,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightend')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{ useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Grid,Card} from '@material-ui/core';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Input} from '@material-ui/core';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport Addmakingchargeprice from './Addmakingchargeprice'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport ConformationAlert from '../../../components/ConformationAlert'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'From Weight', label: 'From Weight' },\r\n  { id: 'To weight', label: 'To weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n\r\n  { id: 'updated On', label: 'updated On' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid,setVendorid] = React.useState(props.vendor);\r\n  const [editmc,setEditmc] = React.useState({})\r\n  const [puritymaster,setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n  const [mchargelist,setMchargelist]= React.useState([])\r\n  const [deleteid,setDeleteid]= React.useState('')\r\n  const [metalmaster,setMetalmaster]= React.useState([])\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: '',\r\n    add: false\r\n  })\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n async function handledelete(datacontent)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        //refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\r\n\r\n  }\r\n  async function handleAdd(makingcontent) {\r\n    let bodydata ={}\r\n    bodydata['material'] = makingcontent.metal.name;\r\n    bodydata['weight_start'] = makingcontent.weightstart;\r\n    bodydata['weight_end'] = makingcontent.weightend;\r\n    bodydata['price_type'] = makingcontent.pricetype.label;\r\n    bodydata['vendor_code'] = props.vendor;\r\n    bodydata['purity'] = makingcontent.purity.shortCode;\r\n    bodydata['cost_price'] = makingcontent.costPrice;\r\n    bodydata['selling_price'] = makingcontent.sellingprice;\r\n    bodydata['isadd'] = true\r\n\r\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\r\n\r\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n     setOpen(false)\r\n     getmclist()\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditmc({\r\n        ...editmc,\r\n        price : diamondData.price,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  async function getmclist()\r\n  {\r\n    let bodydata = {\r\n      vendorid : props.vendor\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\r\n   setMchargelist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  useEffect( () => {\r\n    getmclist()\r\n  }, [vendorid])\r\n  async function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n    getmclist()\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const handleinputChange =type => e => {\r\n    setEditmc({\r\n      ...editmc,\r\n      [type]: e.target.value\r\n    })\r\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n    \r\n   }\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n     <ConformationAlert \r\n      title={\"Are you sure to delete?\"} \r\n      positivebtn={\"Yes\"} \r\n      negativebtn={\"No\"} \r\n      message={\"\"} \r\n      data={deleteid}\r\n      onSuccess={handledelete}\r\n      onCancel={hidedeleteconformation}\r\n      isshow={isconformation} />\r\n    <Card className={classes.cardcontent} > \r\n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n      <Grid item xs={6}> \r\n      <Typography variant=\"h6\"> \r\n        {props.title}\r\n      </Typography> \r\n      </Grid>\r\n      {/* <Grid item > \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search By Purity\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n      </Grid>\r\n\r\n      </Grid>\r\n    </Card>\r\n    <Paper className={classes.root}>\r\n     \r\n      \r\n\r\n\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\r\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\r\n                                  <TableRow key={row.material}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.material}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\r\n\r\n                                  <TableCell align=\"left\">\r\n                                  {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                    <Typography className={classes.heading}> \r\n                                    {row.weightStart}\r\n                                   </Typography>  \r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"left\">\r\n                                  {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                    <Typography className={classes.heading}> \r\n                                    {row.weightEnd}\r\n                                   </Typography>  \r\n                                    </TableCell>\r\n\r\n                                  \r\n\r\n\r\n                                    <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.price}\r\n                                    onChange={handleinputChange('selling_price')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.price}\r\n                                   </Typography>  }\r\n                                    </TableCell>\r\n\r\n                                    {/* <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell> */}\r\n\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 170}} align=\"left\">\r\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"left\" style = {{width: 170}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n         {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n        </Table> \r\n      </div>\r\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \r\n\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Product from './components/Product'\r\nimport Diamonds from './components/Diamonds'\r\nimport Gemstones from './components/Gemstones'\r\nimport Makingcharge from './components/Makingcharge'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n}))\r\nexport const Vendorprice = withRouter(props => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n\r\n   \r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = type => (event, value) => { \r\n    setVendorcode(value.shortCode)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n\r\n        setVendorlist({ \r\n          ...vendorlist,\r\n          vendors : fatchvalue.data.allMasterVendors.nodes\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n   \r\n  return (\r\n         <Grid container  spacing={1}>  \r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Choose Vendor\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid>\r\n         \r\n         {vendorcode ? <>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n           Gold Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={vendorcode} />\r\n          </Grid>\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds vendor={vendorcode}/>\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup By weight\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           \r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \r\n    </Grid>\r\n\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Cost Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Selling Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\r\n    </Grid>\r\n          </> : null }\r\n    </Grid>\r\n\r\n    \r\n  )\r\n});\r\n\r\nexport default withRouter(Vendorprice);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmarkup(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         Add Markup Price For {props.material}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('category')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.category}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('producttype')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.producttype}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose product type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n        <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price Min\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellpricemin')}\r\n              id=\"productvendorcode\"\r\n              name=\"Selling Price Min\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price Max\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellpricemax')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('markuptype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Markup Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Markup Value \"\r\n              onChange={handleinputChange('markup')}\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport ConformationAlert from '../../../components/ConformationAlert'\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, Grid, Card} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport Addmarkup from './Addmarkup'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nconst columns = [\r\n  { id: 'Component', label: 'Components' },\r\n  { id: 'Product Category', label: 'product Category' },\r\n  { id: 'Product Type', label: 'Product Type' },\r\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\r\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\r\n  { id: 'Markup Type', label: 'Markup Type' },\r\n  { id: 'Markup value', label: 'Markup value' },\r\n\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [editmarkup,setEditmarkup] = React.useState({})\r\n  const [goldpricelist,setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid,setDeleteid] = React.useState(\"\")\r\n  const [refetch,setRefetch] = React.useState(null)\r\n  const [isdelete, setIsdelete] = React.useState(false);\r\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n   \r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch)\r\n  {\r\n    setIsdelete(true)\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n    \r\n  }\r\n  function handleDelete(diamondData, refetch) {\r\n    setDeleteid(diamondData.id)\r\n    \r\n    setIsconformation(true);\r\n  }\r\n\r\n\r\n async function updatemarkup(markupcontent,refetch)\r\n  {\r\n    var bodydata = {}\r\n    bodydata['category'] = markupcontent.category.name;\r\n    bodydata['producttype'] = markupcontent.producttype.name;\r\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\r\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\r\n    bodydata['markuptype'] = markupcontent.markuptype.label\r\n    bodydata['markupValue'] = markupcontent.markup\r\n    bodydata['material'] = pricecomponent\r\n    console.log(\"XXXXXXXX\")\r\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\r\n    setOpen(false)\r\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n     refetch()\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmarkup({\r\n          ...editmarkup,\r\n          markupid : diamondData.id,\r\n          sellingPriceMin : diamondData.sellingPriceMin,\r\n          sellingPriceMax : diamondData.sellingPriceMax,\r\n          markupValue : diamondData.markupValue,\r\n          updatedAt : new Date()\r\n\r\n\r\n        })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch){\r\n    var bodydata = {}\r\n    \r\n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n    refetch()\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditmarkup({ ...editmarkup, [type]: value})\r\n}\r\nconst handlecomponentChange = type => (event, value) => {\r\n  \r\n  setPriceomponent(value)\r\n}\r\n  const handleinputChange =type => e => {\r\n   setEditmarkup({\r\n     ...editmarkup,\r\n     [type]: e.target.value\r\n   })\r\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n   \r\n  }\r\n  \r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    \r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      \r\n    <Card className={classes.cardcontent} > \r\n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n     <Grid item xs={3}>\r\n       <Typography variant=\"h6\"> \r\n         {\"Selling Price Markup Setup\"}\r\n       </Typography> \r\n       </Grid>\r\n     <Grid item xs={3}> \r\n          \r\n     <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                     defaultValue={pricecomponent}\r\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\r\n                    onChange={handlecomponentChange('earringbacking')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Pricing Components\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    // error = {productCtx.error_message.earringbacking}\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n       </Grid> \r\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n      </Grid>\r\n \r\n       </Grid>\r\n     </Card>\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={DIAMONDMARKUP}\r\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\r\n              variables={{ \"vendorCode\": pricecomponent}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                        setGoldpricelist(data)\r\n                          return <>\r\n                           <ConformationAlert \r\n                                title={\"Are you sure to delete?\"} \r\n                                positivebtn={\"Yes\"} \r\n                                negativebtn={\"No\"} \r\n                                message={\"\"} \r\n                                refetch={refetch}\r\n                                onSuccess={handledelete}\r\n                                onCancel={hidedeleteconformation}\r\n                                isshow={isconformation} />\r\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \r\n\r\n                              { data.allPricingMarkups.nodes.map((row, index) => (\r\n                                <>\r\n                                  <TableRow key={row.category}>\r\n                                      <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.material}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.category}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.productType ? row.productType : 'All' }\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMin}\r\n                                    onChange={handleinputChange('sellingPriceMin')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPriceMin} </Typography>  \r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMax}\r\n                                    onChange={handleinputChange('sellingPriceMax')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPriceMax} </Typography>  \r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                    {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      onChange={handleoptionChange('sellingPriceType')}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.markupValue}\r\n                                    onChange={handleinputChange('markupValue')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.markupValue} </Typography>  }\r\n                                    </TableCell>\r\n\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 170}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 170}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                                </>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query> \r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table> \r\n       \r\n      </div>\r\n\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input} from '@material-ui/core';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                                  <TableRow key={row.diamondClarity}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.diamondClarity}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.diamondColour}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.costPrice}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.sellingPrice}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 20}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 20}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table> \r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  <TableRow key={row.gemstoneType}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.gemstoneType}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.weightStart}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                                  <TableCell align=\"left\">{row.price}</TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 20}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 20}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n        <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table> \r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  <TableRow key={row.material}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.material}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.weightStart}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\r\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 20}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 20}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n         <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table> \r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Product from './components/Product'\r\nimport Diamonds from './components/Diamonds'\r\nimport Gemstones from './components/Gemstones'\r\nimport Makingcharge from './components/Makingcharge'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n}))\r\nexport const Markupprice = withRouter(props => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n  const [categorylist, setCategorylist] = React.useState([]);\r\n  const [producttypes, setProducttypes] = React.useState([]);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n\r\n   \r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = type => (event, value) => { \r\n    setVendorcode(value.shortCode)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\r\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\r\n        // setVendorlist({ \r\n        //   ...vendorlist,\r\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\r\n        // })\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n   \r\n  return (\r\n    <Grid container  spacing={1}>  \r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.name}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid> */}\r\n         \r\n          \r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gem Stone Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gem Stone\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gold Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gold\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Making Charge Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Making Charge\"} />\r\n          </Grid> */}\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds />\r\n    </Grid> */}\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones /> \r\n    </Grid> */}\r\n\r\n{/* \r\n    <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge />\r\n    </Grid> */}\r\n    </Grid>\r\n  )\r\n});\r\n\r\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  \r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport data from './data.json'\r\nimport { Fullloader } from '../../../../components/Loader';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  \r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [discountobj, setDiscountobj] = useState({});\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(1);\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\nReact.useEffect(() => {\r\n  // setDiscountobj({\r\n  //   ...discountobj,\r\n  //   \"discountname\": props.discountcontent.discountname,\r\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\r\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\r\n  //   \"componenets\":props.discountcontent.componenets\r\n  // })\r\n},[])\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  \r\n \r\n  const handleClick = (event, option) => {\r\n    setDiscounttype(option);\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n\r\n  const handleInputChange = type => e => {\r\n    props.onAdded(type,e.target.value)\r\n\r\n  }\r\n  function changediscountype(optionvalue)\r\n  {\r\n    setDiscountobj({\r\n      ...discountobj,\r\n      \"discounttype\": optionvalue\r\n    })\r\n    props.onAdded(\"discounttype\",optionvalue)\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setDiscountobj({\r\n        ...discountobj,\r\n        [type]: value\r\n      })\r\n\r\n      props.onAdded(type,value)\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n \r\n  \r\n  return (\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <CardHeader title=\"General Information\" />\r\n      <Divider /> */}\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}> \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n\r\n\r\n<Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountname}\r\n    onChange={handleInputChange(\"discountname\")}\r\n    id=\"discountname\"\r\n    name=\"discountname\"\r\n    label=\"Name\"\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      fullWidth\r\n      value={discountobj.discounttitle}\r\n      onChange={handleInputChange(\"discounttitle\")}\r\n      id=\"discounttitle\"\r\n      name=\"discounttitle\"\r\n      label=\"Title\"\r\n      />\r\n    </Grid>\r\n<Grid   item xs={12} sm={12} >\r\n        \r\n                 \r\n\r\n  <Autocomplete\r\n                 id=\"free-solo-2-demo\"\r\n                 multiple\r\n                 defaultValue={discountobj.componenets}\r\n                 value={discountobj.componenets}\r\n                 className={classes.fixedTag}\r\n                 fullWidth\r\n                 getOptionLabel={option => option.name}\r\n                 options={voucherCtx.voucherMaster.pricing_components}\r\n                 onChange={handleoptionChange('componenets')}\r\n                 renderTags={(value, getTagProps) =>\r\n                 value.map((option, index) => (\r\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                 ))\r\n                 }\r\n                 renderInput={params => (\r\n                 <TextField\r\n                 {...params}\r\n                 label=\"Pricing Components\"\r\n                 margin=\"dense\"\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                 />\r\n                 )}\r\n                 />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  </Grid>\r\n  \r\n \r\n \r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  <Grid  item xs={12} sm={6} spacing={1}>\r\n\r\n<Typography\r\n  gutterBottom\r\n  variant=\"h5\"\r\n>\r\nDiscount Type\r\n</Typography>\r\n</Grid>\r\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n  {props.categories.map(option => (\r\n    \r\n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n    \r\n  ))}\r\n  </ButtonGroup>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountvalue}\r\n    onChange={handleInputChange(\"discountvalue\")}\r\n    id=\"discountvalue\"\r\n    name=\"discountvalue\"\r\n    label=\"Discount Value\"\r\n    />\r\n  </Grid>\r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  \r\n    </Grid>\r\n         </Grid> \r\n  \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n      </Grid>\r\n     </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      if(type === 'materials')\r\n      {\r\n        let elements_arr = []\r\n        value.forEach(element => {\r\n          elements_arr.push(element.name)\r\n          \r\n        });\r\n        if(elements_arr.indexOf(\"Gold\") > -1)\r\n        {\r\n          setIsgold(true)\r\n        }else\r\n        {\r\n          setIsgold(false)\r\n        }\r\n\r\n        if(elements_arr.indexOf(\"Diamond\") > -1)\r\n        {\r\n          setIsdiamond(true)\r\n        }else\r\n        {\r\n          setIsdiamond(false)\r\n        }\r\n      }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           value={attrobj.materials}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n           options={voucherCtx.voucherMaster.diamondtypes}\r\n           onChange={handleoptionChange('diamondtype')}\r\n           value={attrobj.diamondtype}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={attrobj.occations} \r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={attrobj.styles}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={attrobj.themes}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n    </Grid>\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nexport default function Viewsku(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n\r\n }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         SKUs\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        {props.products.map(data => (\r\n        <Chip\r\n        key={data.generated_sku}\r\n        label={data.generated_sku}\r\n        variant=\"outlined\"\r\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n         onDelete={handleDelete(data.generated_sku)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))}\r\n       \r\n       </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [attributenames, setAttributenames] = useState(\"\");\r\n  const [attributealias, setAttributealias] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    alert(JSON.stringify(option))\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.name}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Viewsku from '../Viewsku'\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Products = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectskus, setSelectskus] = useState([]);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function handlecancel(){\r\n    setOpen(false)\r\n  }\r\n  function handleOpen(prodskus)\r\n  {\r\n    setOpen(true)\r\n    setSelectskus(prodskus)\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \r\n\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title =  {props.title} \r\n\r\n         \r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Product ID</TableCell>\r\n                    \r\n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell> */}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order}</TableCell>\r\n                      {/* <TableCell align=\"center\"> \r\n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\r\n                          <VisibilityIcon />\r\n                      </IconButton>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      \r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={props.products.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nProducts.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {Chip,IconButton} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {palette} from '../../theme'\r\nimport Page from '../../components/Page'\r\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Salediscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [deletedids, setDeletedids] = useState([]);\r\n\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productattr, setProductattr] = useState({});\r\n  const [productattrtext, setProductattrtext] = useState(\"\");\r\n  const [errorskus, setErrorskus] = useState([]);\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\r\n  const [statusmessage, setStatusmessage] = useState(\"\");\r\n  const [titlecontent, setTitlecontent] = useState(\"\");\r\n  const [discount_id, setDiscount_id] = useState(\"\");\r\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\r\n\r\n  const [attributeobj, setAttributeobj] = useState({});\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n \r\n  \r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  \r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      discountid : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\r\n    let comparr = [];\r\n    let displyarr = [];\r\n    response.discunt.components.forEach(comp => {\r\n      comparr.push({\r\n        name: comp\r\n      })\r\n    })\r\n    // alert(JSON.stringify(response.discunt))\r\n\r\n    // alert(Object.keys(response.discunt.product_attributes))\r\n\r\n    setProducts(response.discunt.product_ids)\r\n    setAttributeobj({\r\n      ...setAttributeobj,\r\n      discountname:response.discunt.discount_name,\r\n      discountvalue:response.discunt.discount_value,\r\n      discounttype:response.discunt.discount_type,\r\n      discounttitle:response.discunt.discount_title,\r\n      componenets: comparr,\r\n      skucount: response.discunt.product_ids.length,\r\n      displaycomp: response.discunt.components,\r\n      attributes: response.discunt.product_attributes,\r\n      allkeys: Object.keys(response.discunt.product_attributes)\r\n    })\r\n    setIsloaded(true)\r\n  }\r\n  async function creatediscount(ispricerun)\r\n  {\r\n   let skuarray  = []\r\n    while(skus.length > 0)\r\n    {\r\n        let sku_content = skus.splice(0,25000)\r\n        skuarray.push(sku_content)\r\n    }\r\n    if(errorskus.length > 0 )\r\n    {\r\n      alert(\"Some skus are overlapping\")\r\n    }else{\r\n     \r\n    let discount_count = 0\r\n   setIsloading(true)\r\n      updatediscount(discount_count)\r\n     async function updatediscount()\r\n      {\r\n    let bodydata = {\r\n      discountvalue: parseFloat(attributeobj.discountvalue),\r\n      discounttype : attributeobj.discounttype,\r\n      componenets : attributeobj.componenets,\r\n      discountname : attributeobj.discountname,\r\n      discounttitle : attributeobj.discounttitle,\r\n      product_attributes: productattr,\r\n      product_attributes_text : productattrtext,\r\n      skus : skuarray[discount_count]\r\n    }\r\n    console.log(JSON.stringify(productattr))\r\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\r\n   \r\n    discount_count = discount_count + 1\r\n    if(skuarray.length > discount_count)\r\n    {\r\n      setLoadingtitle(skus.length+\" Left\")\r\n      updatediscount(discount_count)\r\n    }else{\r\n      setIsloading(false)\r\n      setOpen(true)\r\n      setIsshowpriceupdate(false)\r\n\r\n     window.location='/salediscountlist'\r\n\r\n    }\r\n  }\r\n  }\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n  //setProducts([]) \r\n  let errorindex =  errorskus.indexOf(chipToDelete)\r\n  if(errorindex > -1)\r\n  {\r\n    errorskus.splice(errorindex,1)\r\n    var erroritems = []\r\n    errorskus.forEach(itemname =>{\r\n      erroritems.push(itemname)\r\n    })\r\n   setErrorskus(erroritems) \r\n  }\r\n  let index = products.indexOf(chipToDelete)\r\n  products.splice(index,1)\r\n  var items = []\r\n  products.forEach(itemname =>{\r\n    items.push(itemname)\r\n  })\r\n setProducts(items) \r\n\r\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n};\r\n\r\nasync function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setErrorskus(response.eror_skus)\r\n   setIsloading(false)\r\n   setTitlecontent(response.title)\r\n    \r\n  }\r\n  async function updateprices()\r\n  {\r\n    alert('i am here')\r\n    var  bodydata = {}\r\n    bodydata = {\r\n      pricingcomponent: \"updateskuprice\",\r\n      req_product_id : products\r\n    }\r\n    setIsshowpriceupdate(true)\r\n\r\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n     \"component\":\"updateskuprice\"\r\n    }\r\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\r\n \r\n   setStatusmessage(response.message)\r\n   }\r\n  function attributeadded( value)\r\n  {\r\n  let componentsstring = {}\r\n  let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      componentsstring[key] = {\r\n        values : values,\r\n        alias : alias_arr\r\n      }\r\n      let displaytext = key + ' : ' + attrs.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n    setProductattr(componentsstring)\r\n    setProductattrtext(display_arr.join(' | '))\r\n   //alert(JSON.stringify(componentsstring))\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(value)\r\n    \r\n\r\n  }\r\n  function valuechange(type, value)\r\n  {\r\n    setAttributeobj({\r\n      ...attributeobj,\r\n      [type]: value\r\n    })\r\n    \r\n\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n  {\r\n    let discount_id = props.location.pathname.split('/')[2];\r\n    setDiscount_id(discount_id)\r\n    getdiscountvalue(discount_id)\r\n\r\n  }else\r\n  {\r\n    setIsloaded(true)\r\n  }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n     <FullLoader title={loadingtitle} isopen={isloading}/>\r\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    {!discount_id ?\r\n    <>\r\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\r\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\r\n  {/* <Paper className={classes.productcontent}>\r\n     <Typography variant=\"h5\" component=\"h2\">\r\n        {products.length} Products and {skus.length} skus\r\n      </Typography>\r\n\r\n     \r\n    </Paper> \r\n    {products.map(data => (\r\n        <Chip\r\n        key={data}\r\n        label={data}\r\n        variant=\"outlined\"\r\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n        onDelete={handleDelete(data)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))} */}\r\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\r\n    \r\n    \r\n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\r\n\r\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\r\n   \r\n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\r\n    {!isshowpriceupdate ? <>\r\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\r\n         \r\n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\r\n      </>:null} \r\n    </Grid>\r\n    </Grid>\r\n    </> : \r\n        <Grid container xs={12} spacing={2} >\r\n            <Grid item xs={6} style={{marginTop:16}} >\r\n            <Grid item xs={12} style={{marginTop:16}} >\r\n              \r\n              <Typography variant=\"body2\" component=\"body2\">\r\n              Discount Name\r\n\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h5\">\r\n            {attributeobj.discountname}\r\n\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} style={{marginTop:16}} >\r\n              \r\n              <Typography variant=\"body2\" component=\"body2\">\r\n              Discount Title\r\n\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h5\">\r\n            {attributeobj.discounttitle}\r\n\r\n\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} style={{marginTop:16}} >\r\n              \r\n              <Typography variant=\"body2\" component=\"body2\">\r\n              Discount Value\r\n\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h5\">\r\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\r\n\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} style={{marginTop:16}} >\r\n              \r\n              <Typography variant=\"body2\" component=\"body2\">\r\n              Pricing Compponent\r\n\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h5\">\r\n            {attributeobj.displaycomp}\r\n\r\n            </Typography>\r\n            </Grid>\r\n            </Grid>\r\n            \r\n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\r\n                   {attributeobj.allkeys.map((row, index) => (\r\n                     <Grid item xs={12} style={{marginTop:16}} >\r\n                       <Typography variant=\"body2\" component=\"body2\">\r\n                          {row}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h5\">\r\n                          {attributeobj.attributes[row].values}\r\n                        </Typography>\r\n                       </Grid>\r\n                  ))}  \r\n                  <Grid item xs={12} style={{marginTop:16}} >\r\n                       <Typography variant=\"body2\" component=\"body2\">\r\n                          Total Sku\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h5\">\r\n                          {attributeobj.skucount}\r\n                        </Typography>\r\n                       </Grid>\r\n            </Grid> : null}\r\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n                      {!isshowpriceupdate ? <>\r\n         \r\n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\r\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\r\n                            <RefreshIcon />\r\n                          </IconButton></>} \r\n                        \r\n                        \r\n      </Grid>\r\n      </Grid>\r\n} \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Salediscountcontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Salediscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Salediscount;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\n\r\nimport '../../tmp.css'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  Switch,\r\n  FormControlLabel,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n\r\n    padding: theme.spacing(0, 2),\r\n    paddingBottom: theme.spacing(2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    marginRight: theme.spacing(2),\r\n    // backgroundColor: colors.green[600],\r\n    // '&:hover': {\r\n    //   backgroundColor: colors.green[900]\r\n    // }\r\n  }\r\n}));\r\n\r\nconst EditContent = props => {\r\n  const { diamond,attributes, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    ...diamond\r\n  }\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  function previewimage(url)\r\n  {\r\n   \r\n    // setpreviewurl(url)\r\n    // setShowpreview(true)\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const toggleChecked = type =>  e => {\r\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] })\r\n\r\n  };\r\n  function handleInit() {\r\n    console.log('FilePond instance has initialised');\r\n}\r\n\r\nasync function uploadimagetoserver(bodaydata, keyvalue, uploadtype)\r\n  {\r\n      \r\n      let imagename = moment(new Date()).format('DD-MM-YYYYHH-MM-SS')\r\n     let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename,foldername: 'banner_images', product_id: null },false)\r\n      var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\"+url);\r\n    var filepathname = returnData.filepath\r\n     let imageurl = 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\r\n \r\n     var options = {\r\n        headers: {\r\n            'Content-Type': bodaydata.fileExtension,\r\n            'Access-Control-Allow-Origin':'*'\r\n        }\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options)\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = []\r\n    if(previmagenames)\r\n    {\r\n      previmages = previmagenames.split(',')\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(',')  })\r\n\r\n  \r\n}\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           {props.title}\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        {attributes.map((columnname, index) => (\r\n        <>\r\n         {showpreview && (\r\n          <Lightbox\r\n          class=\"fade\"\r\n          mainSrc={previewurl}\r\n           // nextSrc={images[(photoIndex + 1) % images.length]}\r\n           // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n            onCloseRequest={() => setShowpreview(false)}\r\n            onMovePrevRequest={() =>\r\n              alert('prev')\r\n            }\r\n            onMoveNextRequest={() =>\r\n              alert('next')\r\n            }\r\n          />\r\n        )}\r\n        <Grid container xs={12} spacing={2}>\r\n\r\n        {(!columnname.type || columnname.type == 1) && columnname.key != 'action'  ?\r\n         <Grid item xs={12}>\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                     /></Grid> : null}\r\n               {columnname.type === 2 &&  \r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                 label={columnname.key}\r\n                 labelPlacement=\"start\"\r\n                control={\r\n                  <Switch\r\n                    checked={editcontent[columnname.key]}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                    onChange={toggleChecked(columnname.key)}\r\n                  />\r\n        }\r\n       \r\n      />\r\n                </Grid> } \r\n              {columnname.type === 3 &&  \r\n              <Grid item xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} fullWidth margin='dense' label={columnname.label} variant=\"outlined\" />}\r\n                />\r\n                </Grid> } \r\n\r\n                {columnname.type == 4 && \r\n                <Grid item xs={12}>\r\n                <Typography> {diamond[columnname.key]}</Typography> \r\n                </Grid>}\r\n\r\n                {columnname.type == 5 && \r\n                <Grid item xs={12}>\r\n                  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                // options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} fullWidth margin='dense' label={columnname.label} variant=\"outlined\" />}\r\n                /> </Grid> }\r\n\r\n\r\n            {columnname.type === 6 &&   \r\n            <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                     {columnname.controllabel}\r\n                </Button> </Grid>}  \r\n\r\n\r\n          {columnname.type === 9 && \r\n          <Grid container item xs={12}>\r\n            <Grid  item xs={12}>\r\n                        <AvatarGroup max={2}>\r\n                          {diamond[columnname.key] ? diamond[columnname.key].split(',').map((diamond, index) => (\r\n                        <Avatar alt=\"Remy Sharp\" src={diamond} onClick={() =>previewimage(diamond)} className={classes.small} />)) : null }</AvatarGroup>\r\n          </Grid>\r\n          <Grid  item xs={3}>\r\n            <FilePond\r\n                  style={{height:'100',width:'100'}}\r\n                  oninit={() => handleInit() }\r\n                  labelIdle='Add Banner Image'\r\n                  onaddfile={(error, fileItem)=> {\r\n                    if(!error)\r\n                    {\r\n                      uploadimagetoserver(fileItem, columnname.key, \"add\")\r\n\r\n                    }else\r\n                    {\r\n                     // alert(row[columnname.key])\r\n                    }\r\n                  }}\r\n                />            \r\n            </Grid>\r\n           </Grid>\r\n                     \r\n\r\n           }\r\n          </Grid>\r\n        \r\n        </>\r\n        \r\n        ))}\r\n        \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            color={\"primary\"}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            onClick={() => onClose()}\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditContent.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  attributes: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditContent;\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport EditContent from  './components/EditContent'\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport \"./tmp.css\";\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport moment from 'moment';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null)\r\n    setOpenedit(false);\r\n  };\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    // let masters = masterlist;\r\n    // masters.insert(0, []);\r\n\r\n    //setMasterlist(masters)\r\n     setIsadd(true) \r\n     setOpenedit(true)\r\n     //setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n    setOpenedit(true)\r\n   // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(content) {\r\n      props.onCreate(content)\r\n      setIsadd(false)\r\n      setEditcontent(null)\r\n      setOpenedit(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n  //  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : '')\r\n\r\n  }\r\n  function handleInit() {\r\n    console.log('FilePond instance has initialised');\r\n}\r\nfunction removeimage(imagename,keyvalue) {\r\n  let previmagenames = editcontent[keyvalue];\r\n  let newimages = []\r\n  let previmages = previmagenames.split(',')\r\n  previmages.forEach(element => {\r\n      if(element == imagename)\r\n      {\r\n\r\n      }else{\r\n        newimages.push(element)\r\n      }\r\n  });\r\n  setEditcontent({...editcontent, [keyvalue]: newimages.join(',')})\r\n}\r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\nconst [showpreview, setShowpreview] = useState(false);\r\nconst [previewurl, setpreviewurl] = useState('');\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n  \r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype)\r\n  {\r\n      \r\n      let imagename = moment(new Date()).format('DD-MM-YYYYHH-MM-SS')\r\n     let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename,foldername: 'banner_images', product_id: null },false)\r\n      var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\"+url);\r\n    var filepathname = returnData.filepath\r\n     let imageurl = 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\r\n \r\n     var options = {\r\n        headers: {\r\n            'Content-Type': bodaydata.fileExtension,\r\n            'Access-Control-Allow-Origin':'*'\r\n        }\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options)\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = []\r\n    if(previmagenames)\r\n    {\r\n      previmages = previmagenames.split(',')\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(',')  })\r\n\r\n  \r\n}\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function previewimage(url)\r\n  {\r\n    setpreviewurl(url)\r\n    setShowpreview(true)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <>{showpreview && (\r\n      <Lightbox\r\n      class=\"fade\"\r\n      mainSrc={previewurl}\r\n       // nextSrc={images[(photoIndex + 1) % images.length]}\r\n       // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n        onCloseRequest={() => setShowpreview(false)}\r\n        onMovePrevRequest={() =>\r\n          alert('prev')\r\n        }\r\n        onMoveNextRequest={() =>\r\n          alert('next')\r\n        }\r\n      />\r\n    )}\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                          //  /  value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n        \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 9 ? \r\n                  \r\n                \r\n                         \r\n                      <>\r\n\r\n                  <FilePond\r\n                  \r\n                  oninit={() => handleInit() }\r\n                  labelIdle='Add Banner Image'\r\n                  \r\n                  onaddfile={(error, fileItem)=> {\r\n                    if(!error)\r\n                    {\r\n                      uploadimagetoserver(fileItem, columnname.key, \"add\")\r\n\r\n                    }else\r\n                    {\r\n                     // alert(row[columnname.key])\r\n                    }\r\n                  }}\r\n                /> \r\n                    <div className={classes.imagecontainer}>\r\n\r\n                {editcontent[columnname.key] ? editcontent[columnname.key].split(',').map((row, index) => ( <Badge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }} badgeContent={<HighlightOffIcon fontSize=\"small\" onClick={() => removeimage(row,columnname.key)} />\r\n              }><Avatar alt=\"Remy Sharp\" src={row} className={classes.small} /></Badge>)) : null }  \r\n              </div></>  :null\r\n              }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null} \r\n\r\n                      {columnname.type === 9 ? \r\n                        <AvatarGroup max={2}>\r\n                          {row[columnname.key] ? row[columnname.key].split(',').map((row, index) => (\r\n                        <Avatar alt=\"Remy Sharp\" src={row} onClick={() =>previewimage(row)} className={classes.small} />)) : null } className={classes.small} />)) : null }</AvatarGroup>\r\n                         : null}\r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                      {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8 && columnname.type != 9 ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n       {editcontent && <EditContent\r\n        diamond={editcontent}\r\n        attributes={props.columns}\r\n        title={props.title}\r\n        masters={props.masters}\r\n       onApply={Savevendor}\r\n       onClose={handleApplicationClose}\r\n        open={openedit}\r\n       />  }\r\n      </div>\r\n    </Paper>\r\n </>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsetup = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsetup);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  toolbar: {\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.red[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.red[900]\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Header = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Order #{order.id}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Button\r\n            className={classes.deleteButton}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n            Delete\r\n          </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  PAYMENTSTATUSMASTER,\r\n  PRODUCTDIAMONDTYPES,\r\n} from \"../../../../graphql/query\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OrderInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\r\n\r\n  const [option, setOption] = useState(options[0]);\r\n  const [paymentstatus, setPaymentstatus] = useState([]);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setOption(event.target.value);\r\n  };\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\r\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n  debugger;\r\n  console.log(props);\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>\r\n                <Link\r\n                  target=\"_blank\"\r\n                  component={RouterLink}\r\n                  to={`/customerdetails/${order.user_profile.id}`}\r\n                >\r\n                  {order.user_profile.first_name} {order.user_profile.last_name}\r\n                </Link>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline1\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline2\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].city\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].state\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].country\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email ID</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.cart_addresses\r\n                    ? order.shopping_cart.cart_addresses.length > 0\r\n                      ? order.shopping_cart.cart_addresses[0].contact_number\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Mobile Number</TableCell>\r\n              <TableCell>{order.user_profile.email}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>\r\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>\r\n                {order.currency}\r\n                {order.shopping_cart.discounted_price}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Waybil Number</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"option\"\r\n                  placeholder=\"Waybill Number\"\r\n                  onChange={handleChange}\r\n                  value={order.awb_number}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Gift Message</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.giftwraps\r\n                    ? order.shopping_cart.giftwraps.length > 0\r\n                      ? order.shopping_cart.giftwraps[0].message\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Mode</TableCell>\r\n              <TableCell>{order.payment_mode}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"option\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  // eslint-disable-next-line react/jsx-sort-props\r\n                  SelectProps={{ native: true }}\r\n                  value={option}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {paymentstatus.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"option\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  // eslint-disable-next-line react/jsx-sort-props\r\n                  SelectProps={{ native: true }}\r\n                  value={option}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {orderstatus.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Comments</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"option\"\r\n                  placeholder=\"Comments\"\r\n                  onChange={handleChange}\r\n                  value={order.awb_number}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          {/* <EditIcon className={classes.buttonIcon} /> */}\r\n          Save\r\n        </Button>\r\n        {/* <Button>\r\n          <ReceiptIcon className={classes.buttonIcon} />\r\n          Resend invoice\r\n        </Button> */}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst OrderItems = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Sku</TableCell>\r\n                  <TableCell>Product Image</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {order.shopping_cart.shopping_cart_items.map(item => (\r\n                  <TableRow key={item.id}>\r\n                     <TableCell>\r\n                      {item.product_sku}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.qty}\r\n                    </TableCell>\r\n                    <TableCell>{item.price}</TableCell>\r\n                    \r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OrderItems;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  CardContent,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inner_card: {\r\n    padding: \"10px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  image_container: {\r\n    padding: \"16px\",\r\n  },\r\n  product_image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  text_heading: {\r\n    // fontWeight: \"400\",\r\n    margin: \"8px 0px\",\r\n  },\r\n  text_content: {\r\n    margin: \"8px 0px\",\r\n  },\r\n  final_total_text: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\nconst OrderDetails = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  console.log(order, \"samir\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <Card>\r\n        <CardHeader title=\"Order Details\" />\r\n        <Divider />\r\n\r\n        <CardContent>\r\n          {order.shopping_cart.shopping_cart_items.map((item) => (\r\n            <Card key={item.id} className={classes.inner_card}>\r\n              <Grid container xs={12}>\r\n                {/*-------------------------------- Image part-------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  xs={12}\r\n                  md={3}\r\n                  className={classes.image_container}\r\n                >\r\n                  <img\r\n                    src=\"\"\r\n                    alt=\"Product Image\"\r\n                    className={classes.product_image}\r\n                  />\r\n                </Grid>\r\n                <Grid container xs={12} md={9}>\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Product Code</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.product_sku}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Metal</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.sku_weight}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Diamond Quality</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.diamond_type}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>\r\n                        Diamond Weight (Ct)\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> ? </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* ----------------------------------------------------------------- */}\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Quantity</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> {item.qty} </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Saved</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(\r\n                          item.trans_sku_list.discount_price -\r\n                            item.trans_sku_list.markup_price\r\n                        )} (${\r\n                          item.trans_sku_list.discount === null\r\n                            ? \"0\"\r\n                            : item.trans_sku_list.discount\r\n                        }%off)`}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Shipping</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> Free </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Grand Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\r\n                      </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          ))}\r\n          <Grid>\r\n            <p className={classes.final_total_text}>\r\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\r\n            </p>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport uuid from \"uuid/v1\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, OrderInfo, OrderItems } from \"./components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const OrderManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  async function fetchorderdetails(order_id) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getorderdetails\",\r\n      {},\r\n      { order_id }\r\n    );\r\n    console.log(response);\r\n    setOrder(response.orders);\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n    const fetchOrder = () => {\r\n      setOrder({\r\n        id: uuid(),\r\n        ref: \"FAD107\",\r\n        promoCode: null,\r\n        value: \"55.25\",\r\n        currency: \"$\",\r\n        status: \"canceled\",\r\n        customer: {\r\n          name: \"Ekaterina Tankova\",\r\n          address: \"Street King William, 42456\",\r\n          city: \"Montgomery\",\r\n          country: \"United States\",\r\n        },\r\n        items: [\r\n          {\r\n            id: uuid(),\r\n            name: \"Project Points\",\r\n            cuantity: 25,\r\n            billing: \"monthly\",\r\n            status: \"completed\",\r\n            value: \"50.25\",\r\n            currency: \"$\",\r\n          },\r\n          {\r\n            id: uuid(),\r\n            name: \"Freelancer Subscription\",\r\n            cuantity: 1,\r\n            billing: \"monthly\",\r\n            status: \"completed\",\r\n            value: \"5.00\",\r\n            currency: \"$\",\r\n          },\r\n        ],\r\n        created_at: moment(),\r\n      });\r\n    };\r\n\r\n    // fetchOrder();\r\n    fetchorderdetails(com_id);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Order Management Details\">\r\n      <Header order={order} />\r\n      <Grid className={classes.container} container spacing={3}>\r\n        <Grid item md={4} xl={3} xs={12}>\r\n          <OrderInfo order={order} />\r\n        </Grid>\r\n        <Grid item md={8} xl={9} xs={12}>\r\n          <OrderItems order={order} />\r\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\r\n        </Grid>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default OrderManagementDetails;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Materialmaster = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIAL  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastermetalcolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n      alert(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastermetalcolors;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpurities = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpurities;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibileIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n   // minWidth: 1150\r\n   overflowX: 'auto',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  let history = useHistory();\r\n\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function DiscountEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n   // history.push(`product_attributes/${id}`)\r\n   history.push(`salediscount/${id}`)\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      discountId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n          action={\r\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={SALEDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  \r\n                                 <>\r\n\r\n                                  <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">{row.discountName} \r\n                                              </TableCell>\r\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\r\n                                              } \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell> */}\r\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\r\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"Components\",\r\n  \"discount_value\",\r\n  \"product attributes\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const DiscountList = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    \r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Sale Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      onAdd={addcategory}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default DiscountList;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibleIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //minWidth: 1150\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  let history = useHistory();\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleEdit(diamondData) {\r\n\r\nhistory.push(`voucherdiscount/${diamondData.id}`)\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      voucherId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={VOUCHERDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                 <>\r\n                                  <TableRow key={row.name}>\r\n                                    <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.description}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.uses} / {row.maxUses}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><VisibleIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"code\",\r\n  \"description\",\r\n  \"uses/Max usage\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const VoucherdiscountListing = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Voucher Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercollections = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercollections;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdesigns = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DESIGNMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamonds = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\r\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Earringbacking = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: EARRINGBACKING  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterproducttypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterproducttypes;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemsettings;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemshapes;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemtypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemtypes;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergenders = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGENDER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergenders;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Seopriority = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SEOPRIORITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.priority && x.priority == taxcontent ||\r\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\r\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\r\n\r\n\r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  // element.email &&  element.email.match(searchtext+'.*')  || \r\n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\r\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \r\n  //     element.username && element.username.match(searchtext+'.*')\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addtaxattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsettings = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n     <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={[]}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsettings);","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercategories = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercategories;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterattribute = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function Masterattribute(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\r\n\r\n    //getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstonecolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstoneshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\r\n    };\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterweights = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterweights;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstyles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: STYLEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstyles;","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterthemes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: THEMEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masteroccassions = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpaymentstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterorderstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs ></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingzones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [mastercountries, setMastercountries] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmastercountries()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let zones = []\r\n        if(fatchvalue.data.allShippingZones.nodes)\r\n        {\r\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\r\n            let countries = []\r\n            let countrydefault = []\r\n            let shippingcharges = []\r\n\r\n            if(element.shippingZoneCountriesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingZoneCountriesByZoneId.nodes)\r\n              {\r\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\r\n                  countries.push(countryobj.masterCountryByCountryId.name)\r\n                  countrydefault.push(countryobj.masterCountryByCountryId)\r\n                })\r\n              }\r\n            }\r\n            if(element.shippingChargesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingChargesByZoneId.nodes)\r\n              {\r\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\r\n                  shippingcharges.push(countryobj.name)\r\n                })\r\n              }\r\n            }\r\n            let zoneobj = {\r\n              id : element.id,\r\n              isActive : element.isActive,\r\n              name : element.name,\r\n              country  : countries.join(\" , \"),\r\n              charges : shippingcharges.join(\" , \"),\r\n              zonecountry : countrydefault\r\n            }\r\n            zones.push(zoneobj)\r\n          });\r\n        }\r\n\r\n        setMastervalue(zones)\r\n        setFiltervalue(zones)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastercountries()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\r\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \r\n        masters={mastercountries}\r\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shipmentsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n\r\n    getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":2  ,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n            shipobj['isCart'] = element.isCart;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipment Settings\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addshippingattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingattributes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    console.log(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":1,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['displayAttributes'] = element.displayAttributes;\r\n\r\n            shipobj['isActive'] = element.isActive;\r\n            \r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Shipping Rate\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addshippingattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\r\n    //  getmaster()\r\n     //   alert(JSON.stringify(response))\r\n     history.push('/shippingattributes')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n            var selectedcategory = []\r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addshippingattributes;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport data from \"./data.json\"\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./Configuration.css\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n   \r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  },\r\n}));\r\nexport const Userconfiguration = withRouter(props => {\r\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => \r\n  {\r\n      setRaised(true);\r\n  }\r\n  const onMouseOut = () => \r\n  { \r\n      setRaised(false);\r\n     // setCardindex(-1)\r\n\r\n  }\r\n\r\n  \r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            User and Roles Management\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {data.options.map((menu, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={menu.url}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {menu.title}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n  )\r\n});\r\n\r\nexport default Userconfiguration;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Paper,Button,Grid,Typography, \r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider} from '@material-ui/core';\r\n\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst   Addpermissions=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [permissions, setPermissions] = React.useState(props.permissions);\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n\r\n  };\r\n  const handleSave = () => {\r\n    //setOpen(false);\r\n    props.onSave(permissions, props.role_id)\r\n\r\n  };\r\n  const updateread = (permission_id,key) => (event) => {\r\n    var permissonobj = {}\r\n\r\n      if(permissions[permission_id])\r\n      {\r\n        permissonobj = permissions[permission_id];\r\n       \r\n      }\r\n      permissonobj[key] = event.target.checked\r\n    setPermissions({...permissions,[permission_id] :permissonobj})\r\n    //setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={props.isopen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.pages.map((pagecontent, index) => (\r\n            <Grid container xs= {12} spacing={3}>\r\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n               <Typography variant=\"h6\" component=\"h5\">\r\n               {pagecontent.displayname}\r\n              </Typography>\r\n              </Grid>\r\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\r\n                     onChange={updateread(pagecontent.id,'isview')}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n               <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\r\n\r\n                  onChange={updateread(pagecontent.id,'iswrite')}\r\n\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\r\n            Update \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n       \r\n      </>\r\n  );\r\n}\r\nexport default withApollo(Addpermissions);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterroles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\r\n  const [masterpages, setMasterpages] = React.useState([])\r\n  const [editroleid, setEditroleid] = React.useState('')\r\n  const [editpermissons, setEditpermissions] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n\r\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\r\n      })\r\n      .catch(console.error)\r\n\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n    setMastervalue(response.roles)\r\n    setFiltervalue(response.roles)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  async function showpermissions(rowcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\r\n    setEditpermissions(response.permissions)\r\n    setEditroleid(rowcontent.id)\r\n    setIsshowpermissions(true)\r\n   // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function updatepermissions(rowcontent)\r\n  {\r\n    let bodydata = {\r\n      permissions: rowcontent,\r\n      role_id : editroleid\r\n    }\r\n    console.log(JSON.stringify(bodydata))\r\n    setIsshowpermissions(false)\r\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\r\n     getmaster()\r\n\r\n    \r\n  }\r\n  function cancelpermissions(rowcontent)\r\n  {\r\n    setIsshowpermissions(false)\r\n   // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\r\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterscreens = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\r\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageadminusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\r\n    let adminusers = response.users;\r\n    let users = []\r\n    adminusers.forEach(element => {\r\n        let userobj = {}\r\n        userobj['id'] = element.id;\r\n        userobj['username'] = element.username;\r\n        userobj['password'] = element.password;\r\n        userobj['email'] = element.email;\r\n        userobj['mobile'] = element.mobile;\r\n        userobj['status'] = element.status === 'Active' ? true : false;\r\n        let roles = []\r\n        let rolesnames = []\r\n\r\n        let userroles = element.user_roles;\r\n        userroles.forEach(userroleobj => {\r\n\r\n          let roleobj = {}\r\n          roleobj['id'] = userroleobj.master_role.id\r\n          roleobj['name'] = userroleobj.master_role.name\r\n          roles.push(roleobj)\r\n          rolesnames.push(userroleobj.master_role.name)\r\n        })\r\n        userobj['roles'] = roles\r\n        userobj['rolenames'] = rolesnames.join(' , ')\r\n        users.push(userobj)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {Card,TextField,Checkbox} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Goldpriceupdate = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervendors, setMastervendors] = React.useState([])\r\n  const [goldprice, setGoldprice] = React.useState({\r\n    cost_price : '',\r\n    selling_price : ''\r\n  })\r\n  const [defaultpurity, setDefaultpurity] = React.useState({})\r\n  const [purityprices, setPurityprices] = React.useState({})\r\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\r\n  const [defaultmetal, setDefaultmetal] = React.useState({})\r\n  const [pricetype, setPricetype] = React.useState({})\r\n\r\n  const [selectedvendors, setSelectedvendors] = React.useState([])\r\n  const [materials, setMaterials] = React.useState([])\r\n  \r\n  const [masterpurities, setMasterpurities] = React.useState([])\r\n\r\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function updateprice()\r\n  {\r\n    let bodycondent = {\r\n      costprices : purityprices,\r\n      sellingprices : puritysellingprices,\r\n      vendors : selectedvendors,\r\n      metal : defaultmetal,\r\n      pricetype : pricetype\r\n    }\r\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\r\n     alert(\"price updated successfully\")\r\n  }\r\n  const handleChange = type => (event) => {\r\n    let vendorids =[]\r\n    selectedvendors.forEach(element => {\r\n      vendorids.push(element)\r\n    })\r\n    if(event.target.checked)\r\n    {\r\n\r\n      if(type == 'All')\r\n      {\r\n        mastervendors.forEach(element => {\r\n          vendorids.push(element.shortCode)\r\n        })\r\n        setSelectedvendors(vendorids)\r\n      }else\r\n      {\r\n        vendorids.push(type)\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }else{\r\n      if(type == 'All')\r\n      {\r\n        setSelectedvendors([])\r\n\r\n      }else{\r\n\r\n        let indexval = selectedvendors.indexOf(type)\r\n        vendorids.splice(indexval,1)\r\n        let allindexval = selectedvendors.indexOf('All')\r\n        if(allindexval >  -1)\r\n        {\r\n          vendorids.splice(allindexval,1)\r\n\r\n        }\r\n\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }\r\n   // setChecked(event.target.checked);\r\n  };\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let allobj =  {\r\n          \"name\": \"All Vendors\",\r\n          \"id\": \"All\",\r\n          \"shortCode\": \"All\"\r\n        }\r\n        let vendors = [];\r\n        vendors.push(allobj)\r\n\r\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\r\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\r\n          vendors.push(vendorobj)\r\n          selectedvendors.push(vendorobj.shortCode)\r\n        })\r\n         setMastervendors(vendors)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  const handleoptionChange = type => (event, value) => {\r\n   // setEditcontent({ ...editcontent, [type]: value  })\r\n   let vendorid = []\r\n   value.forEach(element => {\r\n    if(element.shortCode == 'All')\r\n    {\r\n      mastervendors.forEach(element => {\r\n        vendorid.push(element.shortCode)\r\n      })\r\n      setSelectedvendors(vendorid)\r\n    }else{\r\n      vendorid.push(element.shortCode)\r\n      setSelectedvendors(vendorid)\r\n\r\n    }\r\n   })\r\n  }\r\n  const handlepricetypeChange = (event, value) => {\r\n    setPricetype(value)\r\n  }\r\n  const handlemetalChange = type => (event, value) => {\r\n    // setEditcontent({ ...editcontent, [type]: value  })\r\n    //alert(JSON.stringify(value))\r\n    if(value)\r\n    { \r\n    if(value.shortCode === 'G')\r\n    {\r\n      setIspricecalculated(false)\r\n    }else\r\n    {\r\n      setIspricecalculated(true)\r\n    }\r\n    if(data[value.name])\r\n    {\r\n      setDefaultpurity(data[value.name])\r\n\r\n    }\r\n  }else\r\n  {\r\n    setIspricecalculated(false)\r\n\r\n  }\r\n    setDefaultmetal(value)\r\n   //setDefaultpurity(value)\r\n   }\r\n  const handleInputChange = type => event => {\r\n   // setGoldprice(event.target.value);\r\n   //alert(JSON.stringify(goldprice))\r\n   if(defaultmetal.name === 'Gold')\r\n    {\r\n    }else\r\n    {\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\r\n      if(type === 'cost_price')\r\n      {\r\n        setPurityprices(sellingpricejson)\r\n\r\n      }\r\n      if(type === 'selling_price')\r\n      {\r\n        setPuritysellingprices(sellingpricejson)\r\n\r\n      }\r\n    }\r\n    setGoldprice({...goldprice,[type]: event.target.value })\r\n  }\r\n  const handlePriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    setPurityprices({...purityprices,[type]:event.target.value});\r\n\r\n    \r\n  }\r\n  const handlesellingPriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    \r\n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\r\n  }\r\n  function getgoldvalue()\r\n  {\r\n    if(defaultmetal.name === 'Gold')\r\n    {\r\n       let default_purity = parseInt()\r\n     let pricejson = {}\r\n     let sellingpricejson = {}\r\n    data.goldpurity.forEach(element => {\r\n      var sellingprice = goldprice.selling_price\r\n      if(pricetype.value == 2) \r\n      {\r\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\r\n       \r\n      }\r\n      let priceratio = element.shortCode / defaultpurity.shortCode;\r\n\r\n      let goldprice_val = priceratio*goldprice.cost_price\r\n      let goldsellingprice_val = priceratio*sellingprice\r\n      sellingpricejson[element.shortCode] = goldsellingprice_val\r\n\r\n      pricejson[element.shortCode] = goldprice_val\r\n    })\r\n    setPuritysellingprices(sellingpricejson)\r\n    setPurityprices(pricejson)\r\n    }else{\r\n      let pricejson = {}\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\r\n\r\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\r\n      setPuritysellingprices(sellingpricejson)\r\n      setPurityprices(pricejson)\r\n    }\r\n\r\n    \r\n     setIspricecalculated(true)\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n     <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          <Grid container item row alignItems=\"center\" >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={materials}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disableClearable={true}\r\n                 value={defaultmetal}\r\n                   onChange={handlemetalChange(\"material\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\r\n                /> \r\n\r\n                \r\n\r\n\r\n\r\n          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.cost_price}\r\n                             onChange={handleInputChange(\"cost_price\")}\r\n                            label=\"Cost Price\"\r\n                          />\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={data.pricetype}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  style={{marginLeft: 16}}\r\n                 value={pricetype}\r\n                  onChange={handlepricetypeChange}\r\n                  getOptionLabel={(option) => option.label}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\r\n                /> \r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.selling_price}\r\n                             onChange={handleInputChange(\"selling_price\")}\r\n                            label=\"Selling Price\"\r\n                          />\r\n              \r\n             {defaultpurity.name ?  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masterpurities}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disabled\r\n                  style={{marginLeft: 16, width:200}}\r\n                  value={defaultpurity}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\r\n                  variant=\"outlined\" />}\r\n                />  : null }\r\n                {defaultmetal.name == 'Gold' ? \r\n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\r\n                  Get Price\r\n               </Button> : null}\r\n          </Grid>\r\n          {ispricecalculated ?\r\n          <>\r\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\r\n          {data.goldpurity.map((purityname, index) =>(\r\n           \r\n           <Grid container item row alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n               Price for {purityname.name}\r\n             </Typography>\r\n                 \r\n                 <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={purityprices[purityname.shortCode]}\r\n                      onChange={handlePriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n                    <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     style={{marginLeft: 16}}\r\n\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={puritysellingprices[purityname.shortCode]}\r\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n   </Grid>\r\n          ))} </>:null }\r\n          <Grid item xs={12} sm={6} lg={3} >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={mastervendors}\r\n                    multiple\r\n                  // value={editcontent[columnname.defaultkey]}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\r\n                /> \r\n        </Grid>\r\n          </> : null}\r\n          \r\n         </Grid>\r\n         <Grid item  >\r\n\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n            </Grid>\r\n      </CardContent>\r\n      </Card>\r\n\r\n{/* \r\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          \r\n           {mastervendors.map((vendors, index) =>(\r\n            <Grid container item row alignItems=\"center\" >\r\n              <Grid item xs={3} alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n              {vendors.name}\r\n             </Typography>\r\n             </Grid>\r\n             <Grid item xs={3} alignItems=\"center\" >\r\n\r\n             <Checkbox\r\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\r\n                onChange={handleChange(vendors.shortCode)}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n                   </Grid>\r\n   </Grid>\r\n          ))}\r\n         </Grid>\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n\r\n      </CardContent>\r\n      </Card> : null}\r\n    */}\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\r\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const [filtercontent,setFiltercontent] = React.useState({\r\n    \"seacrchtext\" : props.fitltercontent.searchtext,\r\n    \"size\": props.fitltercontent.size,\r\n    \"offset\":props.fitltercontent.offset\r\n  })\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n   // alert(editcontent.searchcontent)\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\r\n\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    props.onPagechange((newPage*rowsPerPage))\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n   \r\n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    props.onPagesizechange(parseInt(event.target.value, 10))\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {row[columnname.key]} \r\n                                       </Moment>:null } \r\n                                       {columnname.type == 8 ?  <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/customerdetails/'+row['id']}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>:null }                 \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.totalcount]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from './Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const [totalcount, setTotalcount] = React.useState(0)\r\n\r\n  const [bodycontent, setBodycontent] = React.useState({\r\n    \"seacrchtext\" : '',\r\n    \"size\": 50,\r\n    \"offset\":0\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster(50,0)\r\n  }\r\n  function changeresult(filtercontent)\r\n  {\r\n    setBodycontent(filtercontent)\r\n  }\r\n  async function getmaster(size,offset,searchtext)\r\n  {\r\n   \r\n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\r\n    let adminusers = response.users.rows;\r\n    let users = []\r\n    setTotalcount(response.users.count)\r\n    adminusers.forEach(element => {\r\n      //   let userobj = {}\r\n      //   userobj['id'] = element.id;\r\n      //  // userobj['username'] = element.username;\r\n      //  // userobj['password'] = element.password;\r\n      //   userobj['email'] = element.email;\r\n      //   userobj['mobile'] = element.mobile;\r\n      //   userobj['status'] = element.status === 'Active' ? true : false;\r\n      //   let roles = []\r\n      //   let rolesnames = []\r\n\r\n      //   let userroles = element.user_roles;\r\n      //   userroles.forEach(userroleobj => {\r\n\r\n      //     let roleobj = {}\r\n      //     roleobj['id'] = userroleobj.master_role.id\r\n      //     roleobj['name'] = userroleobj.master_role.name\r\n      //     roles.push(roleobj)\r\n      //     rolesnames.push(userroleobj.master_role.name)\r\n      //   })\r\n      //   userobj['roles'] = roles\r\n      //   userobj['rolenames'] = rolesnames.join(' , ')\r\n        if(element.orders)\r\n        {\r\n          element['orders'] = element.orders.length\r\n        }else{\r\n          element['orders'] = 0\r\n        }\r\n        users.push(element)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    //setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\r\n  }\r\n  async function changepageoffset(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,offset: taxcontent})\r\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\r\n  }\r\n  async function changepagesize(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,size: taxcontent})\r\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageusers;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Page from '../../components/Page/Page'\r\nimport { Header } from './components';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\nexport const CustomerManagementDetails = withRouter(props => {\r\n\r\n  const { match, history } = props;\r\n  const classes = useStyles();\r\n  const { id, tab } = match.params;\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    history.push(value);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'summary', label: 'Summary' },\r\n    { value: 'invoices', label: 'Invoices' },\r\n    { value: 'logs', label: 'Logs' }\r\n  ];\r\n\r\n  if (!tab) {\r\n    //return <Redirect to={`/customerdetails`} />;\r\n  }\r\n\r\n  if (!tabs.find(t => t.value === tab)) {\r\n   // return <Redirect to=\"/errors/error-404\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <Page\r\n    //   className={classes.root}\r\n    //   title=\"Customer Management Details\"\r\n    // >\r\n    //   <Header />\r\n    //    <Tabs\r\n    //     className={classes.tabs}\r\n    //     onChange={handleTabsChange}\r\n    //     scrollButtons=\"auto\"\r\n    //     value={tab}\r\n    //     variant=\"scrollable\"\r\n    //   >\r\n    //     {tabs.map(tab => (\r\n    //       <Tab\r\n    //         key={tab.value}\r\n    //         label={tab.label}\r\n    //         value={tab.value}\r\n    //       />\r\n    //     ))}\r\n    //   </Tabs>\r\n    //   <Divider className={classes.divider} />\r\n    //  {/* <div className={classes.content}>\r\n    //     {tab === 'summary' && <Summary />}\r\n    //     {tab === 'invoices' && <Invoices />}\r\n    //     {tab === 'logs' && <Logs />}\r\n    //   </div> */}\r\n    // </Page>\r\n  );\r\n});\r\n\r\nCustomerManagementDetails.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerManagementDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const customer = {\r\n    name: 'Ekaterina Tankova'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        Customers\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        {customer.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  }\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n      //     setInvoices(response.data.invoices);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title=\"Customer invoices\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {invoices.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  actions: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    '& > * + *': {\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst General = props => {\r\n  const { customer, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Customer info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>\r\n                {customer ? customer.email : \"\"}\r\n                {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.isemailverified\r\n                      ? 'Email verified'\r\n                      : 'Email not verified'} \r\n                  </Label>\r\n                </div>}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Phone</TableCell>\r\n               <TableCell>{customer.mobile}\r\n               {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.ismobileverified\r\n                      ? 'Mobile verified'\r\n                      : 'Mobile not verified'} \r\n                  </Label>\r\n                </div>}\r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      {/* <CardActions className={classes.actions}>\r\n        <Button onClick={handleEditOpen}>\r\n          <EditIcon className={classes.buttonIcon} />\r\n          Edit\r\n        </Button>\r\n        <Button>\r\n          <LockOpenIcon className={classes.buttonIcon} />\r\n          Reset &amp; Send Password\r\n        </Button>\r\n        <Button>\r\n          <PersonIcon className={classes.buttonIcon} />\r\n          Login as Customer\r\n        </Button>\r\n      </CardActions> */}\r\n      {/* <CustomerEdit\r\n        customer={customer}\r\n        onClose={handleEditClose}\r\n        open={openEdit}\r\n      /> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default General;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport {General, Results} from './components'\r\nimport Mastercontent from '../../components/Mastercontent'\r\nimport data from './data.json'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  Divider,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    height: '80vh'\r\n  },\r\n  tabs: {\r\n    minWidth: '250px',\r\n    maxWidth: '250px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight : theme.spacing(2),\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst master_options = ['Address Book','Wish List','Orders']\r\n  const master_options_url = ['/address','/userwishlist','/orderlist']\r\n\r\nexport const Customerdetails = withRouter(props => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({});\r\n  const [customer, setCustomer] = React.useState({});\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    // history.push(`orderlist/${id}`)\r\n    window.location.href = `orderlist/${id}`\r\n  }\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\nasync function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n\r\n    setCustomer(response.userprofile)\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid> */}\r\n    <Grid container item xs={12} sm={12} lg={12} >\r\n    <Grid  item xs={12} sm={6} lg={6} >\r\n    <General customer ={customer} /> \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={2} lg={2} >\r\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\r\n     <Card fullwidth\r\n    //  onClick={(e) => ProductEdit(customer.id)}\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <div className={classes.root}>\r\n      \r\n    //   <Tabs\r\n    //     orientation=\"vertical\"\r\n    //     variant=\"standard\"\r\n    //     value={value}\r\n    //     onChange={handleChange}\r\n    //     aria-label=\"Vertical tabs example\"\r\n    //     className={classes.tabs}\r\n    //   >\r\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\r\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\r\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\r\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\r\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\r\n \r\n    //   </Tabs>\r\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\r\n    //   <General customer ={customer} /> </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \r\n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\r\n\r\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\r\n      \r\n    //   </TabPanel>\r\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\r\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\r\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\r\n    //   </TabPanel>\r\n      \r\n     \r\n    // </div>\r\n  );\r\n});\r\n\r\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs } from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Userwishlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Useraddresses = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.hsnNumber}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Tax Settings\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addtaxattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n    let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\r\n    //  getmaster()\r\n     history.push('/taxsettings')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TAXMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n\r\n            var selectedcategory = []\r\n            \r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n                if(categories.indexOf(catobj.alias) > -1)\r\n                {\r\n                  selectedcategory.push(catobj)\r\n                }\r\n              }\r\n              \r\n\r\n            })\r\n\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addtaxattributes;","import { makeStyles, fade } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      color: 'red',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        marginLeft: \"0px\",\r\n        width:\"100%\"\r\n      },\r\n    },\r\n \r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      width:\"100%\",\r\n      overflow:\"auto\",\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));","import { makeStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n     \r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        flex: \"1 0 auto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        outline: 0,\r\n        zIndex: 1200,\r\n        position: \"fixed\",\r\n        overflowY: \"auto\",\r\n        flexDirection: \"column\",\r\n       \r\n      },\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    profile: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minHeight: 'fit-content'\r\n    },\r\n    avatar: {\r\n      width: 60,\r\n      height: 60\r\n    },\r\n    name: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n  }));","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {  useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useStyles } from './styles';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { ProductContext } from '../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { GlobalContext } from '../../context';\r\nimport {NetworkContext}  from '../../context/NetworkContext';\r\n\r\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\r\nimport data from \"../menupages.json\"\r\n\r\nfunction SideBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { isreload,setIsreload } = React.useState(false);\r\n  let accesspages = localStorage.getItem('accesspages')\r\n  const handleDrawer = () => {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\r\n  }\r\n  const handleClick = type => e => {\r\n    if(type === 'Pricing')\r\n    {\r\n      setGlobalCtx({ ...globalCtx, \"optionname\": type,selectedIndex: 5 , isExpand: !globalCtx.isExpand})\r\n\r\n    }else{\r\n      setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: false})\r\n\r\n    }\r\n\r\n  }\r\n  async function getmasterpages()\r\n  {\r\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n\r\n    pageaccess.pages.forEach(element => {\r\n      pages.push(element.pageurl)\r\n      if(element.is_write)\r\n      {\r\n        pagepermissions.push(element.pageurl)\r\n      }\r\n    });\r\n   // setPages(pageaccess)\r\n  // setGlobalCtx({ ...globalCtx, pageaccess: pages })\r\n   //setIsreload(true)\r\n\r\n   localStorage.setItem('accesspages', pages);\r\n   localStorage.setItem('pagepermissions', pagepermissions);\r\n\r\n    window.location.reload()\r\n  }\r\n  React.useEffect( () => {\r\n   //alert(globalCtx.accesspages)\r\n   if(!accesspages)\r\n   {\r\n   // getmasterpages()\r\n\r\n   }else{\r\n   //  setIsreload(true)\r\n   }\r\n //setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n},[])\r\n  function handleListItemClick(event, index)\r\n  {\r\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\r\n\r\n  }\r\n\r\n  return (\r\n      <>\r\n     \r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n          }),\r\n        }}\r\n        open={globalCtx.sideBarOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n       \r\n        <List>\r\n          {\r\n            data.menus.map((menuobj, index) => (\r\n              <>\r\n             {menuobj.submenu  ?  \r\n             <>\r\n          {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\r\n              <>\r\n             <ListItem button  onClick={handleClick(menuobj.name)}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={menuobj.name} />\r\n              {globalCtx.isExpand  && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n            {menuobj.submenu.map((submenuobj, subindex) => (\r\n              <>\r\n              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ?\r\n                          <Link underline='none' component={RouterLink} to={submenuobj.url}>\r\n              <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === subindex} onClick={event => handleListItemClick(event, subindex)}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary={submenuobj.name} />\r\n              </ListItem>\r\n              </Link> : null }\r\n\r\n              </>\r\n            ))}\r\n\r\n            </List>\r\n            </Collapse> </>: null}\r\n            </>\r\n             :<> {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\r\n              <Link underline='none' component={RouterLink} to={menuobj.url}>\r\n              <ListItem button key={\"Product List\"} selected={globalCtx.optionname === menuobj.name} onClick={handleClick(menuobj.name)} >\r\n              <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n                <ListItemText primary={menuobj.name} />\r\n              </ListItem>\r\n              </Link> : null\r\n             } </>}\r\n              </>\r\n            ))\r\n          }\r\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\r\n\r\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Product List\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <ListItem button  onClick={handleClick('Pricing')}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pricing\" />\r\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\r\n\r\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\r\n  <ListItemIcon>\r\n    <StarBorder />\r\n  </ListItemIcon>\r\n  <ListItemText primary=\"Gold Price Setup\" />\r\n</ListItem>\r\n</Link>\r\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Vendor Price Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Selling Price Markup Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Discount Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Price Run\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User List\" />\r\n      </ListItem> \r\n      </Link>\r\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\r\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Vendorlist\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\r\n\r\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Order List\"} />\r\n            </ListItem>\r\n            </Link>\r\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\r\n\r\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Configuration\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\r\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n                  <ListItemText primary={\"Vouchers\"} />\r\n                </ListItem>\r\n                </Link>\r\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User and Roles Management\" />\r\n      </ListItem> \r\n      </Link> */}\r\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Voucher Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n\r\n\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideBar);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { useStyles } from './styles';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SideBar from '../SideBar';\r\nimport { GlobalContext } from '../../context';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport './style.css'\r\n\r\n\r\nfunction PAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n  function handlelogout() {\r\n    localStorage.removeItem(\"accesstoken\")\r\n    window.location = '/'\r\n  }\r\n\r\n  \r\n  function handleDrawer(){\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem> */}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: globalCtx.sideBarOpen,\r\n            })} >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"hide\"\r\n            edge=\"start\"\r\n            className={classes.hide}\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: globalCtx.sideBarOpen,\r\n            })}\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\r\n           Stylori\r\n          </Typography>\r\n          \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PrimaryAppBar = withRouter(PAppBar);\r\n\r\nconst MainWrapper = props => {\r\n  const classes = useStyles();\r\n  let { component: Component, ...rest } = props;\r\n\r\n  return(\r\n    <main className={classes.content} >\r\n        <div className={classes.toolbar} />\r\n        <Component {...rest} />\r\n      </main>\r\n  )\r\n}\r\n\r\nexport const withAppBar = (component, props) => {\r\n\r\n  return(\r\n    <>\r\n      <CssBaseline />\r\n      <PrimaryAppBar {...props} />\r\n      <SideBar {...props} />\r\n      <MainWrapper component={component} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PrimaryAppBar;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport route from './route';\r\nimport { withAppBar } from '../components/PrimaryAppBar';\r\n\r\nconst PrivateRoute = props => {\r\n    const { component, ...rest } = props;\r\n\r\n    const checkAuth = () => {\r\n        let accesstoken = localStorage.getItem('accesstoken')\r\n        if(accesstoken)\r\n        {\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n    const Component = props => withAppBar(component, props);\r\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\r\n}\r\n\r\n\r\nexport default PrivateRoute;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditDiamond = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\r\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\r\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\r\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Diamond Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.diamondweight}\r\n              placeholder={\"Weight\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={editcontent.diamondcount}\r\n              />\r\n              <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    value={editcontent.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Diamond Setting\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  /> \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={editcontent.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditDiamond.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditDiamond;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ProductContext } from '../../context';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: 'Diamond', label: 'Diamond' },\r\n  { id: 'Colour', label: 'Colour' },\r\n  { id: 'Clarity', label: 'Clarity' },\r\n  { id: 'Weight', label: 'Weight' },\r\n  { id: 'Number', label: 'Number' },\r\n  { id: 'Setting', label: 'Setting' },\r\n  { id: 'Shape', label: 'Shape' },\r\n\r\n  {\r\n    id: 'Edit',\r\n    label: 'Edit',\r\n    minWidth: 80,\r\n    maxWidth: 80,\r\n    align: 'center',\r\n    format: value => value.toFixed(2),\r\n  }\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n  \r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    \r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    display: 'flex',\r\n    \r\n    overflowX: 'auto',\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n  root:{\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  table:{\r\n    //marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function DiamondDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"\",\r\n    severity:\"\"\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null)\r\n    setOpenedit(false);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  });\r\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\r\n    edit:''\r\n  }) ;\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\r\n  function DiamondEdit(diamondData) {\r\n    setDiamondEditObject({\r\n      ...diamondEditObject,\r\n      edit:JSON.parse(JSON.stringify(diamondData))\r\n    })\r\n    \r\n    setProductCtx({\r\n      ...productCtx,\r\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\r\n      diamondcount:diamondData.stoneCount,\r\n      diamondweight:diamondData.stoneWeight,\r\n    })\r\n    setEditcontent({\r\n      id : diamondData.id,\r\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\r\n      diamondcount:diamondData.stoneCount,\r\n      diamondweight:diamondData.stoneWeight,\r\n    })\r\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    setOpenedit(true)\r\n  }\r\n  async function DiamondSave(diamondobj){\r\n    // alert(JSON.stringify(productCtx.diamondsettings))\r\n    // alert(JSON.stringify(productCtx.diamondshape))\r\n    // alert(JSON.stringify(productCtx.diamondcount))\r\n    // alert(JSON.stringify(id))\r\n    var bodydata = {}\r\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\r\n      \r\n      let list_data=props.diamond;\r\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\r\n        if(diamondobj.id===diamondListData.id){\r\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\r\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\r\n          diamondListData.stoneCount = diamondobj.diamondcount;\r\n          diamondListData.stoneWeight = diamondobj.diamondweight;\r\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\r\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\r\n          bodydata['stoneCount'] = diamondobj.diamondcount;\r\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\r\n          bodydata['diamondid'] = diamondobj.id;\r\n          return diamondListData;\r\n        }\r\n        return diamondListData;\r\n      }); \r\n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\r\n\r\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n    \r\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\r\n      // let editDiamondLists = productCtx.editDiamondLists;\r\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\r\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \r\n      //   editDiamondLists = editDiamondLists && editDiamondLists\r\n      //   .map((diamond_list,index)=>{\r\n      //     if(diamond_list.id === editDiamondList.id){\r\n      //       return editDiamondList;\r\n      //     }\r\n      //     return diamond_list;\r\n      //   }) \r\n      //   : editDiamondLists.push(editDiamondList); \r\n      // }\r\n      // // console.log(editDiamondLists,'editDiamondList')\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"This is successfully saved\",\r\n        severity:\"success\"\r\n      })\r\n      // handleClick();\r\n      // setProductCtx({\r\n      //   ...productCtx,\r\n      //   diamondlist:DiamondChangeData,\r\n      //   editDiamondLists,\r\n      //   diamondsettings:\"\",\r\n      //   diamondshape: \"\",\r\n      //   diamondcount:\"\",\r\n      //   diamondweight:\"\",\r\n      // })\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      setEditcontent(null)\r\n      setOpenedit(false)\r\n    }else{\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"You are not fill all item\",\r\n        severity:\"info\"\r\n      })\r\n      handleClick();\r\n    }\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n    setProductCtx({ ...productCtx, [type]: value})\r\n\r\n}\r\nconst handleInputChange = type => e => {\r\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n}\r\n  return (\r\n    <Paper className={classes.root}>\r\n             <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n        </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n      {/* <CircularProgress color=\"secondary\"/> */}\r\n\r\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  {row.diamondType}\r\n                </TableCell>\r\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  {row.diamondColour}\r\n                </TableCell>\r\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  {row.diamondClarity}\r\n                </TableCell>\r\n\r\n                {btnEdit.action && btnEdit.id == row.id ?  \r\n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \r\n                <Input\r\n              variant=\"outlined\"\r\n              style = {{width: 40}}\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n              </TableCell>    :\r\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?     \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                <Input\r\n              variant=\"outlined\"\r\n              style = {{width: 40}}\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n         \r\n              </TableCell> :\r\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                    {row.stoneCount}\r\n                   \r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Diamond Setting\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  /> \r\n                  </TableCell>:\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.diamondSettings}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ? \r\n                  <TableCell component=\"th\" scope=\"row\">   \r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n                    </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.diamondShape}\r\n                  </TableCell>\r\n                }\r\n              \r\n\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.id ?\r\n                    <TableCell align=\"center\" style={{width: 80}}>\r\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" style={{width: 80}}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows == 0 ? <>\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n              </> : null\r\n            }\r\n          </TableBody>\r\n           <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n               \r\n                count={props.diamond&&props.diamond.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>  \r\n        </Table> \r\n        {editcontent && <EditDiamond\r\n        diamond={editcontent}\r\n        onApply={DiamondSave}\r\n        onClose={handleApplicationClose}\r\n        open={openedit}\r\n        />        }\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditGemstone = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\r\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\r\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\r\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\r\n\r\n    \r\n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n   // alert(JSON.stringify(editcontent.gemstonecount))\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Diamond Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        \r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.gemstonesize}\r\n              placeholder={\"Weight\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('gemstonesize')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.gemstoneweight}\r\n              placeholder={\"Weight\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('gemstoneweight')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={editcontent.gemstonecount}\r\n              />\r\n              <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    value={editcontent.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Diamond Setting\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  /> \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={editcontent.gemstoneshape}\r\n                    options={productCtx.masterData.gemstoneshape}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditGemstone.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditGemstone;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ProductContext } from '../../context';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'Shape', label: 'Shape' },\r\n  { id: 'Setting', label: 'Setting' },\r\n  { id: 'Size', label: 'Size' },\r\n  { id: 'Weight', label: 'Weight' },\r\n  { id: 'Number', label: 'Number' },\r\n  {\r\n    id: 'Edit',\r\n    label: 'Edit',\r\n    minWidth: 120,\r\n    align: 'center',\r\n    format: value => value.toFixed(2),\r\n  }\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root': {\r\n      padding: 0,\r\n    }\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  table: {\r\n   // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function GemstoneDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"\",\r\n    severity:\"\"\r\n  });\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null)\r\n    setOpenedit(false);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\r\n    edit:''\r\n  }) ;\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\r\n  function GemstoneEdit(gemstoneData) {\r\n    setGemstoneEditObject({\r\n      ...gemstoneEditObject,\r\n      edit:JSON.parse(JSON.stringify(gemstoneData))\r\n    })\r\n    setProductCtx({\r\n      ...productCtx,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize\r\n    })\r\n    setEditcontent({\r\n      id : gemstoneData.id,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize\r\n    })\r\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\r\n   setOpenedit(true)\r\n  }\r\n async function GemstoneSave(gemdata) {\r\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\r\n      let list_data = props.gemstone;\r\n      var bodydata = {}\r\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\r\n        if (gemdata.id === gemstoneListData.id) {\r\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\r\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\r\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\r\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\r\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\r\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\r\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\r\n          bodydata['stoneCount'] = gemdata.gemstonecount;\r\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\r\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\r\n          bodydata['id'] = gemdata.id;\r\n          return gemstoneListData;\r\n        }\r\n        return gemstoneListData;\r\n      });\r\n\r\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\r\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\r\n      let editGemstoneLists = productCtx.editGemstoneLists;\r\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\r\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \r\n        editGemstoneLists = editGemstoneLists && editGemstoneLists\r\n        .map((gemstone_list,index)=>{\r\n          if(gemstone_list.id === editGemstoneList.id){\r\n            return editGemstoneList;\r\n          }\r\n          return gemstone_list;\r\n        }) \r\n        : editGemstoneLists.push(editGemstoneList); \r\n      }\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"This is successfully saved\",\r\n        severity:\"success\"\r\n      })\r\n      handleClick();\r\n      setProductCtx({\r\n        ...productCtx,\r\n        gemstonelist: gemstoneChangeData,\r\n        editGemstoneLists,\r\n        gemstonesettings: \"\",\r\n        gemstoneshape: \"\",\r\n        gemstonecount: \"\",\r\n        gemstoneweight: \"\",\r\n        gemstonesize: \"\"\r\n      })\r\n      setEditcontent(null)\r\n      setOpenedit(false)\r\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"You are not fill all item\",\r\n        severity:\"info\"\r\n      })\r\n      handleClick();\r\n    }\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n\r\n    setProductCtx({ ...productCtx, [type]: value })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value })\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n          <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n        </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.gemstoneType}\r\n                </TableCell>\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.label}\r\n                      value={productCtx.gemstoneshape}\r\n                      options={productCtx.masterData.gemstonshapes}\r\n                      onChange={handleoptionChange('gemstoneshape')}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Gemstone Shape\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: 'search' }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneShape}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.label}\r\n                      value={productCtx.gemstonesettings}\r\n                      options={productCtx.masterData.gemstonesettings}\r\n                      onChange={handleoptionChange('gemstonesettings')}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Gemstone Setting\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: 'search' }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneSetting}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      margin=\"dense\"\r\n                      label=\"Gemstone Size\"\r\n                      name=\"size\"\r\n                      onChange={handleInputChange('gemstonesize')}\r\n                      autoComplete=\"size\"\r\n                      value={productCtx.gemstonesize}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneSize}\r\n                  </TableCell>}\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      margin=\"dense\"\r\n                      label=\"Weight\"\r\n                      name=\"size\"\r\n                      autoComplete=\"size\"\r\n                      onChange={handleInputChange('gemstoneweight')}\r\n                      value={productCtx.gemstoneweight}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      margin=\"dense\"\r\n                      label=\"#of Stones\"\r\n                      name=\"size\"\r\n                      autoComplete=\"size\"\r\n                      onChange={handleInputChange('gemstonecount')}\r\n                      value={productCtx.gemstonecount}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.stoneCount}\r\n                  </TableCell>\r\n                }\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.id ?\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                \r\n                count={props.gemstone && props.gemstone.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && <EditGemstone\r\n        diamond={editcontent}\r\n        onApply={GemstoneSave}\r\n        onClose={handleApplicationClose}\r\n        open={openedit}\r\n        />        }\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ProductContext } from '../../context';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst columns = [\r\n  { id: 'SKU', label: 'SKU'},\r\n  { id: 'Metal Colour', label: 'Metal Colour' },\r\n  { id: 'Metal Purity', label: 'Metal Purity' },\r\n  { id: 'Gold Weight', label: 'Gold Weight' },\r\n  { id: 'Size', label: 'Size' },\r\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\r\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\r\n  { id: 'Default', label: 'Default' },\r\n  {\r\n    id: 'Active',\r\n    label: 'Active',\r\n    align: 'center',\r\n    format: value => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'Edit',\r\n    label: 'Edit',\r\n    align: 'center',\r\n    format: value => value.toFixed(2),\r\n  }\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n  \r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n  \r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n \r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n  root:{\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  table:{\r\n    width: '100%'\r\n   // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  \r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  function handleChangeisdefault(variantId) {\r\n    \r\n  }\r\n\r\n  const handleChangeswitch = name => event => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\r\n\r\n  //  setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\r\n      if(variant.id===variantId){\r\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\r\n      }\r\n      return variant;\r\n    })\r\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\r\n    let editVaraint = {\r\n      id:filterVariant.id,\r\n      isActive:filterVariant.isActive\r\n    }\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants:variantslist,\r\n      editVariants\r\n    })\r\n  };\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\r\n  // function VariantEdit(id) {\r\n  //   alert(id)\r\n  //   setBtnEdit({ ...btnEdit, id, action: true })\r\n  // }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange =type => e => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === '' || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value})\r\n   // }\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editleadtime:diamondData.vendorDeliveryTime,\r\n      discount:diamondData.discountDesc,\r\n      editreadytoship: diamondData.isReadyToShip,\r\n      editisdefault:diamondData.isdefault,\r\n      editisactive:diamondData.isActive\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\r\n\r\n  }\r\n  function DiamondSave(id){\r\n    var bodydata = {}\r\n    if(productCtx.editleadtime){\r\n      let list_data=props.variants;\r\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\r\n        if(id===skulistdata.generatedSku){\r\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\r\n          skulistdata.isdefault = productCtx.editisdefault;\r\n          skulistdata.isActive =  productCtx.editisactive;\r\n          skulistdata.isReadyToShip = productCtx.editreadytoship\r\n\r\n          skulistdata.discountDesc =  productCtx.discount;\r\n          // diamondListData.stoneCount = productCtx.diamondcount;\r\n          // diamondListData.stoneWeight = productCtx.diamondweight;\r\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\r\n           bodydata['isdefault'] = productCtx.editisdefault\r\n           bodydata['isActive'] = productCtx.editisactive;\r\n           bodydata['discount'] = productCtx.discount;\r\n\r\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\r\n           bodydata['generatedSku'] = id;\r\n          console.log(JSON.stringify(bodydata))\r\n          return skulistdata;\r\n        }\r\n        return skulistdata;\r\n      });\r\n    }\r\n\r\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n//   const handleoptionChange = type => (event, value) => {\r\n    \r\n//     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n// }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\r\n                  {row.generatedSku}\r\n                </TableCell> : null }\r\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\r\n                  {row.metalColor}\r\n            </TableCell> : null } \r\n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  {row.purity}\r\n                </TableCell> : null }\r\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                    {row.skuWeight}\r\n                  </TableCell>: null}\r\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell> */}\r\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                    {row.skuSize}\r\n                  </TableCell> : null }\r\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    style = {{width: 40}}\r\n                    value={productCtx.editleadtime}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Vendor Lead Time\"\r\n                    //onInput={keyPress.bind(this)}\r\n                    onChange={handleinputChange('editleadtime')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  /> :\r\n                    \r\n                    \r\n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\r\n\r\n                  } </TableCell> : null }\r\n\r\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    style = {{width: 40}}\r\n                    value={productCtx.discount}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Discount\"\r\n                    //onInput={keyPress.bind(this)}\r\n                    onChange={handleinputChange('discount')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  /> :\r\n                    \r\n                    \r\n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\r\n\r\n                  } </TableCell> : null }\r\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \r\n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  <Switch\r\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\r\n                       // onChange={()=>handleChange(row.id)}\r\n                        value=\"checkedA\"\r\n                        // onChange={handleChangeswitch('editreadytoship')}\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\r\n\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                      />\r\n                  </TableCell> : null }\r\n                  {props.displycolumns.indexOf('Default') > -1 ? \r\n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                  <Switch\r\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\r\n                        value=\"checkedA\"\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                      />\r\n                  </TableCell> : null }\r\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\r\n                       <Switch\r\n                        checked={row.isActive}\r\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\r\n\r\n                        value=\"checkedA\"\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                      />\r\n                    </TableCell> : null \r\n                }\r\n                    {\r\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" style = {{width: 20}}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants&&props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditPrice = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    editcostprice:diamond.editcostprice,\r\n    editcostpricetax: diamond.editcostpricetax,\r\n    editsellingprice:diamond.editsellingprice,\r\n    editsellingpricetax:diamond.editsellingpricetax,\r\n    editmarkupprice: diamond.editmarkupprice,\r\n    editmarkuppricetax : diamond.editmarkuppricetax,\r\n    editdiscountprice: diamond.editdiscountprice,\r\n    editdiscountpricetax: diamond.editdiscountpricetax\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Price Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editcostprice}\r\n              placeholder={\"costPrice\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"costPriceTax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostpricetax')}\r\n              value={editcontent.editcostpricetax}\r\n              />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editsellingprice}\r\n              placeholder={\"Selling Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Selling Pricetax\"\r\n              placeholder=\"Selling Pricetax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingpricetax')}\r\n              value={editcontent.editsellingpricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editmarkupprice}\r\n              placeholder={\"Markup Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkupprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Markup Price Tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkuppricetax')}\r\n              value={editcontent.editmarkuppricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editdiscountprice}\r\n              placeholder={\"Discount Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Discount Price tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountpricetax')}\r\n              value={editcontent.editdiscountpricetax}\r\n              />\r\n                 \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditPrice.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditPrice;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport EditPrice from './Components/EditPrice/EditPrice';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ProductContext } from '../../context';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst columns = [\r\n  { id: 'SKU', label: 'SKU' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\r\n  { id: 'Markup Price', label: 'Markup Price' },\r\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\r\n  { id: 'Discount Price', label: 'Discount Price' },\r\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\r\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\r\n  { id: 'Discount', label: 'Discount' },\r\n\r\n  {\r\n    id: 'Disable',\r\n    label: 'Price Update',\r\n    align: 'center',\r\n    format: value => value.toFixed(2),\r\n  }\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n  \r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n  root:{\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  table:{\r\n   // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    pricerun: false,\r\n    id: ''\r\n  })\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null)\r\n    setOpenedit(false);\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\r\n      if(variant.id===variantId){\r\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\r\n      }\r\n      return variant;\r\n    })\r\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\r\n    let editVaraint = {\r\n      id:filterVariant.id,\r\n      isActive:filterVariant.isActive\r\n    }\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants:variantslist,\r\n      editVariants\r\n    })\r\n  };\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\r\n  // function VariantEdit(id) {\r\n  //   alert(id)\r\n  //   setBtnEdit({ ...btnEdit, id, action: true })\r\n  // }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange =type => e => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === '' || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value})\r\n   // }\r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n async function Skupricesync(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\r\n\r\n    \r\n    let bodydata = {\r\n      req_product_id: diamondData.productId,\r\n      generatedSku:  diamondData.generatedSku\r\n    }\r\nconsole.log(JSON.stringify(bodydata))\r\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\r\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\r\n\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editcostprice:diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice:diamondData.sellingPrice,\r\n      editsellingpricetax:diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax : diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax\r\n    })\r\n    setEditcontent({\r\n      id : diamondData.generatedSku,\r\n      editcostprice:diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice:diamondData.sellingPrice,\r\n      editsellingpricetax:diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax : diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax\r\n    })\r\n     //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n   // setOpenedit(true)\r\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\r\n\r\n  }\r\n  function DiamondSave(priceobj){\r\n\r\n    var bodydata = {}\r\n      let list_data=props.variants;\r\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\r\n        if(priceobj.id===skulistdata.generatedSku){\r\n          skulistdata.costPrice = priceobj.editcostprice;\r\n          skulistdata.costPriceTax = priceobj.editcostpricetax;\r\n          skulistdata.sellingPrice =  priceobj.editsellingprice;\r\n          skulistdata.sellingPriceTax = priceobj.editsellingpricetax\r\n          skulistdata.markupPrice = priceobj.editmarkupprice\r\n          skulistdata.markupPriceTax = priceobj.editmarkuppricetax\r\n          skulistdata.discountPrice = priceobj.editdiscountprice\r\n          skulistdata.discountPriceTax = priceobj.editdiscountpricetax\r\n\r\n           bodydata['costPrice'] = parseFloat(priceobj.editcostprice)\r\n           bodydata['costPriceTax'] = parseFloat(priceobj.editcostpricetax)\r\n           bodydata['sellingPrice'] = parseFloat(priceobj.editsellingprice)\r\n           bodydata['sellingPriceTax'] = parseFloat(priceobj.editsellingpricetax)\r\n           bodydata['markupPrice'] = parseFloat(priceobj.editmarkupprice)\r\n           bodydata['markupPriceTax'] = parseFloat(priceobj.editmarkuppricetax)\r\n           bodydata['discountPrice'] = parseFloat(priceobj.editdiscountprice)\r\n           bodydata['discountPriceTax'] = parseFloat(priceobj.editdiscountpricetax)\r\n           bodydata['marginOnSalePercentage'] = parseFloat(priceobj.marginOnSalePercentage)\r\n\r\n           bodydata['generatedSku'] = priceobj.id;\r\n          return skulistdata;\r\n        }\r\n        return skulistdata;\r\n      });\r\n      alert(JSON.stringify(bodydata))\r\n     // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      // setEditcontent(null)\r\n      // setOpenedit(false)\r\n}\r\n//   const handleoptionChange = type => (event, value) => {\r\n    \r\n//     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n// }\r\n// const handleInputChange = type => e => {\r\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n// }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell   component=\"th\" scope=\"row\">\r\n                  {row.generatedSku}\r\n                </TableCell>\r\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    style = {{width: 40}}\r\n                    value={productCtx.editcostprice}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Cost Price\"\r\n                    onChange={handleinputChange('editcostprice')}\r\n\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  />\r\n                 :\r\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \r\n                  } </TableCell> : null }\r\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editcostpricetax}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Cost Price Tax\"\r\n                    onChange={handleinputChange('editcostpricetax')}\r\n\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  /> \r\n               :\r\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\r\n                }  </TableCell> : null }\r\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editsellingprice}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Selling Price\"\r\n                    onChange={handleinputChange('editsellingprice')}\r\n\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  /> :\r\n                  <Typography className={classes.heading}> \r\n                {row.sellingPrice} </Typography> \r\n                } </TableCell> : null }\r\n               \r\n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editsellingpricetax}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Selling Price Tax\"\r\n                    onChange={handleinputChange('editsellingpricetax')}\r\n\r\n                    //onInput={keyPress.bind(this)}\r\n                    //onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  />\r\n                : \r\n                  <Typography className={classes.heading}> \r\n                  {row.sellingPriceTax} </Typography> \r\n                  } </TableCell> : null }\r\n             \r\n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\r\n\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editmarkupprice}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Markup Price\"\r\n                    onChange={handleinputChange('editmarkupprice')}\r\n\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  />: \r\n                  <Typography className={classes.heading}> \r\n                  {row.markupPrice} </Typography> \r\n                  } </TableCell> : null }\r\n             \r\n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editmarkuppricetax}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Markup Price Tax\"\r\n                    onChange={handleinputChange('editmarkuppricetax')}\r\n\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  />\r\n                  : \r\n                  <Typography className={classes.heading}> \r\n                  {row.markupPriceTax} </Typography> \r\n                  } </TableCell> : null }\r\n\r\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editdiscountprice}\r\n                    id=\"productname\"\r\n                    onChange={handleinputChange('editdiscountprice')}\r\n\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Discount Price\"\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  /> : \r\n                  <Typography className={classes.heading}> \r\n                  {row.discountPrice} </Typography> \r\n                  } </TableCell> : null }\r\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\r\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\r\n                <Input\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    value={productCtx.editdiscountpricetax}\r\n                    onChange={handleinputChange('editdiscountpricetax')}\r\n\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Discount Price Tax\"\r\n                    //onInput={keyPress.bind(this)}\r\n                   // onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  /> : \r\n                  <Typography className={classes.heading}> \r\n                  {row.discountPriceTax} </Typography> \r\n                  } </TableCell> : null }\r\n             \r\n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\r\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                {row.marginOnSalePercentage}\r\n                </TableCell> : null}\r\n                {props.displycolumns.indexOf('Discount') > -1 ?\r\n\r\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\r\n                {row.discount} \r\n                </TableCell> : null }\r\n                {props.displycolumns.indexOf('View') > -1 ?\r\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\r\n\r\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\r\n</Button> </TableCell>: null }\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\r\n                    <TableCell  style = {{width: 40}} align=\"center\">\r\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n                      ₹ Run\r\n                      </Button>\r\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell  style = {{width: 40}} align=\"center\">\r\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n                      ₹ Run\r\n                      </Button>\r\n                        } \r\n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                \r\n                count={props.variants&&props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && <EditPrice\r\n        diamond={editcontent}\r\n        onApply={DiamondSave}\r\n        onClose={handleApplicationClose}\r\n        open={openedit}\r\n        />        }\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ProductContext, ProductProvider } from '../../context';\r\nimport axios from 'axios';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { API_URL } from '../../config';\r\nimport { isString } from 'util';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\r\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\r\n import { NetworkContext } from '../../context/NetworkContext';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  \r\n  Chip\r\n  \r\n} from '@material-ui/core';\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\r\nconst useStyle = makeStyles(theme => ({\r\n    helperinput: {\r\n        '& .MuiFormHelperText-root': {\r\n            color: \"#e53935\",\r\n        }\r\n    },\r\n    variantFontSize: {\r\n        fontSize: '.9rem'\r\n    },\r\n    variantMarginTop:{\r\n        marginTop: \"20px\"\r\n    }\r\n    \r\n}))\r\nexport function CreateVariant(props) {\r\n    const classes = useStyle();\r\n    let prod_id = props.productId;\r\n    let colors = []\r\n    let purities = []\r\n    let diamondtypes = []\r\n    let oldpurity = []\r\n\r\n    const TOKEN = 'token'\r\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\r\n    productCtx.oldproductMetalColor.forEach(colorobj => {\r\n        colors.push(colorobj.productColor)\r\n    })\r\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\r\n        purities.push(colorobj.purity)\r\n        oldpurity.push(colorobj)\r\n    })\r\n\r\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\r\n\r\n        diamondtypes.push(diamondobj.diamondType)\r\n        \r\n    })\r\n    \r\n  \r\n    const [variant, setVariant] = useState({\r\n        metal_color: [],\r\n        metal_purity: [],\r\n        diamond_color: [],\r\n        diamond_clarity: [],\r\n        variant_diamond_type:[],\r\n        product_images: {},\r\n        size: []\r\n\r\n    });\r\n    \r\n    function handleMetalColor(status_data) {\r\n        let color = variant.metal_color;\r\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\r\n        setVariant({\r\n            ...variant,\r\n            metal_color: color\r\n        })\r\n    }\r\n    const handleoptionChange = type => (event, value) => {\r\n        let color_arr = []\r\n        value.map((color, index) => {\r\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\r\n           }else{ let color_obj = {\r\n                ...color,\r\n                metal_color: color.productColor\r\n            }\r\n            color_arr.push(color_obj)\r\n          }\r\n        })\r\n        setVariant({\r\n            ...variant,\r\n            metal_color: color_arr\r\n        })\r\n\r\n        setProductCtx({\r\n            ...productCtx,\r\n            [type]:value\r\n          })\r\n      }\r\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\r\n        alert(url)\r\n        url = API_URL + url;\r\n        console.info('URL', url, data)\r\n        const method = data ? 'POST' : 'GET',\r\n            headers = {\r\n                'Content-Type': 'application/json'\r\n            };\r\n        let resdata = null;\r\n        if (auth) {\r\n            const token = localStorage.getItem(TOKEN)\r\n            if (token) headers[\"auth\"] = token\r\n            else window.location = '/'\r\n        }\r\n        const response = await fetch(url, {\r\n            method, body: isString(data) ? data : JSON.stringify(data), headers\r\n        })\r\n\r\n        if (response.status < 400) {\r\n            resdata = await response.json();\r\n        } else {\r\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n        }\r\n        return resdata;\r\n    }\r\n\r\n    const handleMetalPurity = type => (event, value) => {        \r\n\r\n        let purity_arr = []\r\n         setProductCtx({\r\n            ...productCtx,\r\n            [type]:value\r\n          })\r\n        value.map((color, index) => {\r\n            let color_obj = {\r\n                ...color,\r\n                purity: color.purity\r\n            }\r\n            purity_arr.push(color_obj)\r\n        })\r\n        setVariant({\r\n            ...variant,\r\n            metal_purity: purity_arr\r\n        })\r\n\r\n       \r\n    }\r\n    // function handleMetalPurity(status_data) {\r\n    //     status_data.metal_weight = \"\";\r\n    //     status_data.error_message = false;\r\n    //     // alert(JSON.stringify(status_data));\r\n    //     let purity = variant.metal_purity;\r\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\r\n    //     setVariant({\r\n    //         ...variant,\r\n    //         metal_purity: purity\r\n    //     })\r\n    // }\r\n    const diamondTypeChange = type => (event, value) => {        \r\n\r\n        let diamondtype_arr = []\r\n        value.map((color, index) => {\r\n                if(color.label)\r\n                {\r\n                    let color_obj = {\r\n                        ...color,\r\n                        diamondType: color.label\r\n                    }\r\n                    diamondtype_arr.push(color_obj)\r\n                }else{\r\n                    let color_obj = {\r\n                        ...color,\r\n                        diamondType: color.diamondType\r\n                    }\r\n                    diamondtype_arr.push(color_obj)\r\n                }\r\n                    \r\n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\r\n        //    }else{ let color_obj = {\r\n        //         ...color,\r\n        //         diamondType: color.label\r\n        //     }\r\n        //     diamondtype_arr.push(color_obj)\r\n        //   }\r\n        })\r\n        setVariant({\r\n            ...variant,\r\n            variant_diamond_type: diamondtype_arr\r\n        })\r\n        alert(JSON.stringify(value))\r\n         setProductCtx({\r\n            ...productCtx,\r\n            [type]:diamondtype_arr\r\n          })\r\n    }\r\n\r\n   \r\n    // function diamondTypeChange(status_data){\r\n    //     let diamond__type = variant.variant_diamond_type;\r\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\r\n    //     setVariant({\r\n    //         ...variant,\r\n    //         variant_diamond_type: diamond__type\r\n    //     })\r\n    // }\r\n\r\n    const sizeChange = type => (event, value) => {   \r\n        let size_arr = []\r\n        value.map((color, index) => {\r\n          if(productCtx.productDiamondTypes.some(item => item === color)){\r\n           }else{ let color_obj = {\r\n                ...color,\r\n                label: color\r\n            }\r\n            size_arr.push(color_obj)\r\n          }\r\n        })\r\n        setVariant({\r\n            ...variant,\r\n            size: size_arr\r\n        })\r\n    }\r\n    // function sizeChange(status_data) {\r\n    //     let variantSize = variant.size;\r\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\r\n    //     setVariant({\r\n    //         ...variant,\r\n    //         size: variantSize\r\n    //     })\r\n\r\n    // }\r\n  \r\n    function setMetalWeightInput(e, metalPurityId) {\r\n        // alert(e.target.value)\r\n        let metalWeight = variant.metal_purity;\r\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\r\n            if (metalPurityId === metal_weight.id) {\r\n                metal_weight.metal_weight = e.target.value;\r\n            }\r\n            return metal_weight;\r\n        });\r\n        setVariant({\r\n            ...variant,\r\n            metal_purity: metalWeight\r\n        })\r\n    }\r\n    function saveCreateVariant(){\r\n        let createVariant={\r\n            productId: prod_id,\r\n            productMetalcoloursByProductId:variant.metal_color,\r\n            productPuritiesByProductId:variant.metal_purity,\r\n            productDiamondTypes:variant.variant_diamond_type,\r\n            productSize:variant.size,\r\n            product_images:variant.product_images\r\n            // productImage:variant.product_images\r\n        }\r\n\r\n        \r\n        let metal_color_image_length = Object.entries(variant.product_images);\r\n        let metal_purity_weight = false;\r\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\r\n            if(metal_weight_check.metal_weight === \"\"){\r\n                metal_weight_check.error_message = true;\r\n                metal_purity_weight = true;\r\n            }\r\n            return metal_weight_check;\r\n        });\r\n        variant['metal_purity'] = metal_purity\r\n        setVariant({\r\n            ...variant,\r\n            variant\r\n        })\r\n        if(metal_color_image_length.length !== variant.metal_color.length){\r\n            alert('Select Metal Color Images');\r\n        }\r\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\r\n            let createVariants = productCtx.createVariantList;\r\n            let editVariants = productCtx.editVariants;\r\n            let variants = productCtx.variants;\r\n            let productImages = productCtx.productImages;\r\n            productImages = [...productImages,variant.product_images];\r\n            createVariants.push(createVariant);\r\n            let params = {\r\n                method:'POST',\r\n                headers: { \r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(createVariant)\r\n            }\r\n          \r\n            \r\n        }else{\r\n            alert('please fill the Create variant');\r\n        }\r\n    }\r\n    function backToProductAttribute(){\r\n        props.changeVariant();\r\n    }\r\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\r\n        let prodimages = variant.product_images;\r\n        // if(true)\r\n        // {\r\n        var prodid = prod_id;\r\n        let imagecolourobj = variant.product_images[imagecolor];\r\n        var imagecount = 1;\r\n        if (imagecolourobj) {\r\n            imagecount = imagecolourobj.length + 1;\r\n        }\r\n        \r\n  \r\n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\r\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\r\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\r\n        var signedRequest = returnData && returnData.signedRequest;\r\n        var url = returnData && returnData.url;\r\n        console.log(\"responseurl\" + url);\r\n        var filepathname = returnData && returnData.filepath;\r\n        var options = {\r\n            headers: {\r\n                'Content-Type': bodaydata.fileExtension,\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        };\r\n\r\n        if (imagecolourobj) {\r\n            const imageobj = {\r\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\r\n                \"position\": imageposition,\r\n                \"color\": imagecolor,\r\n                \"image_url\": filepathname,\r\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n            }\r\n            if (uploadtype === 'edit') {\r\n                imagecolourobj[imageposition] = imageobj;\r\n\r\n            } else {\r\n                imagecolourobj.push(imageobj)\r\n\r\n            }\r\n            prodimages[imagecolor] = imagecolourobj;\r\n\r\n        } else {\r\n            const imageobj = {\r\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\r\n                \"position\": imageposition,\r\n                \"color\": imagecolor,\r\n                \"image_url\": filepathname,\r\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n            }\r\n            imagecolourobj = [];\r\n            imagecolourobj.push(imageobj)\r\n        }\r\n        prodimages[imagecolor] = imagecolourobj;\r\n        setVariant({ ...variant, product_images: prodimages })\r\n        // setFiles([])\r\n        // }\r\n\r\n        await axios.put(signedRequest, bodaydata.file, options)\r\n    }\r\n   \r\n    return (\r\n        <Grid container  spacing={2} >\r\n            <Grid item xs={6} sm={6} md={6} lg={6} >\r\n            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.productColor}\r\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\r\n                    defaultValue={productCtx.oldproductMetalColor}\r\n                    options={productCtx.masterData.metalcolour}\r\n                    value={productCtx.productMetalColor}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Metal Colours\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n            </Grid>\r\n                \r\n            <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                    \r\n                      \r\n                        {/* <Grid item>\r\n                            <FormGroup row>\r\n                                {\r\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\r\n\r\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\r\n                                            <FormControlLabel\r\n                                                disabled\r\n                                                control={\r\n                                                    <Checkbox checked={true} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            /> :\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            />\r\n\r\n                                    ))\r\n                                }\r\n                            </FormGroup>\r\n                            {\r\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"124px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Metal Weight${metal_purity.name}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                     */}\r\n\r\n                    <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    margin=\"dense\"\r\n                    getOptionLabel={option => option.name}\r\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\r\n                    defaultValue={productCtx.oldproductMetalPurity}\r\n                    options={productCtx.masterData.metalpurity}\r\n                    value={productCtx.productMetalPurity}\r\n                    onChange={handleMetalPurity('productMetalPurity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Metal Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n{\r\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Weight ${metal_purity.purity}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                </Grid>\r\n\r\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\r\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\r\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                           \r\n                </Grid>\r\n\r\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\r\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    fullWidth\r\n                    getOptionLabel={option => option}\r\n                    options={productCtx.productVariantSize}\r\n                    value={productCtx.variant_size}\r\n                    onChange={sizeChange('productSizes')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Sizes\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    /> : null }\r\n                </Grid>\r\n\r\n\r\n                {/* {\r\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\r\n                    <Grid item>\r\n                       \r\n                        <Grid item>\r\n                            <FormGroup row>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    defaultValue={productCtx.productDiamondTypes}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> : ''\r\n                } */}\r\n                \r\n            <Grid container>\r\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\r\n                    <Grid xs={12} container spacing={1} item>\r\n                        <Grid xs={12} item>\r\n\r\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                                {value.productColor}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={12} md={12} item>\r\n                            <FilePond\r\n                                allowImageValidateSize\r\n                                imageValidateSizeMinWidth=\"2400\"\r\n                                imageValidateSizeMinHeight=\"2400\"\r\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\r\n\r\n                                })}\r\n                                labelIdle=\"Upload Image\"\r\n                                allowMultiple={true}\r\n                                //files = {files}\r\n                                onupdatefiles={fileItem => {\r\n                                    // Set currently active file objectsfiles to this.state\r\n\r\n                                }}\r\n                                onaddfile={(error, fileItem) => {\r\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\r\n                                }}\r\n                                onremovefile={(error, fileItem) => {\r\n\r\n                                }}\r\n                                fileRenameFunction={\r\n                                    (file) => new Promise(resolve => {\r\n                                        var prodid = prod_id;\r\n                                        let imagecolourobj = variant.product_images[value.name];\r\n                                        var imagecount = 1;\r\n                                        if (imagecolourobj) {\r\n                                            imagecount = imagecolourobj.length + 1;\r\n                                        }\r\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\r\n                                        resolve(imagename)\r\n\r\n                                    })\r\n                                }\r\n                            >\r\n                            </FilePond>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\r\n                    <Grid item >\r\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\r\n                Save\r\n                </Button>\r\n                </Grid>\r\n                <Grid item >\r\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\r\n                Back\r\n                </Button> */}\r\n                </Grid>\r\n            </Grid> }\r\n        </Grid>\r\n    )\r\n}\r\nexport default CreateVariant;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = props.columns\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    const [showcolumns,setshowColumns ] = React.useState()\r\n    \r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(!data.disabled)\r\n            {\r\n                data.isActive = false;\r\n            }    \r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function saveaction(){\r\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n        //     if(data.isActive){\r\n        //               }\r\n        //               return data;  \r\n\r\n        // })\r\n        let columnnames = []\r\n        columns.listOfValue.forEach(element => {\r\n            if(element.isActive)\r\n            {\r\n                columnnames.push(element)\r\n            }\r\n        });\r\n        props.selectcolumnfilter(columnnames,props.displytype);\r\n        props.columnclose()\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                               disabled = {head.disabled}\r\n                            onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Columns from './columns';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport './table.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        color:\"#06847B\",\r\n        border: \"1px solid #7bbcb7\",\r\n        '&:hover':{\r\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n            border: \"1px solid #06847B\",\r\n        }\r\n      },\r\n\r\n}));\r\n\r\nfunction SortHeader(props){\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(false);\r\n      };\r\n      const open = Boolean(anchorEl);\r\n      const id = open ? 'simple-popover' : undefined;\r\n    \r\n     \r\n        return(\r\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \r\n                </Grid>\r\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\r\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\r\n                        </Button>\r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\r\n                        </Popover>\r\n\r\n\r\n\r\n                    </Grid>\r\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n\r\n}\r\nexport default SortHeader","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport axios from 'axios';\r\nimport { makeid } from '../../utils/commonmethod';\r\n\r\nimport {Paper,    Card,CardHeader,\r\n  CardContent,\r\nGrid} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ProductContext } from '../../context';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport \"./upload.css\"\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height: 100,\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n  root:{\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  table:{\r\n    width: '100%'\r\n   // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  styleFile: {\r\n    paddingTop: \"10px\"\r\n},\r\n  card: {\r\n    minHeight: \"150px\",\r\n    textAlign: \"left\",\r\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\r\n},\r\nformContainer: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 20,\r\n    paddingBottom: 30\r\n}\r\n\r\n}));\r\n\r\nexport default function Productimages(props) {\r\n  const classes = useStyles2();\r\n  let image_count = 0;\r\n  let product_id = '';\r\n\r\n  const [title, setTitle] = React.useState(props.color);\r\n  const [productimages, setProductimages] = React.useState(props.prodimages);\r\n  // const [totalimages, setTotalimages] = React.useState(1);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  productimages.forEach(imgobj => {\r\n      if(props.color === imgobj.productColor)\r\n      {\r\n        image_count = image_count + 1;\r\n        if(imgobj.productId)\r\n        {\r\n          product_id = imgobj.productId\r\n\r\n        }\r\n        // setTotalimages(image_count)\r\n      }\r\n  })\r\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\r\n  {\r\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\r\n        var returnData = responsedata.data.returnData;\r\n        var signedRequest = returnData.signedRequest;\r\n        var url = returnData.url;\r\n        var filepathname = returnData.filepath\r\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\r\n        var options = {\r\n            headers: {\r\n                'Content-Type': filetype,\r\n                'Access-Control-Allow-Origin':'*'\r\n            }\r\n        };\r\n        if(isedit)\r\n        {\r\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\r\n\r\n        }else{\r\n          const imageobj = {\r\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\r\n            \"imagePosition\":(image_count+1),\r\n            \"productColor\":props.color,\r\n            \"productId\":product_id,\r\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\r\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\r\n          } \r\n          imagecontent = imageobj;\r\n        }\r\n        if(!isedit)\r\n      {\r\n        var productimgs = [];\r\n        productimages.forEach(img => {\r\n          productimgs.push(img)\r\n        })\r\n        productimgs.push(imagecontent)\r\n      }\r\n      await axios.put(signedRequest, fileobj, options)\r\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\r\n      image_count =  image_count + 1;\r\n      if(!isedit)\r\n      {\r\n      setProductimages(productimgs)\r\n      }\r\n\r\n  }\r\n  const handlenewAssetChange =  (e) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => { \r\n      // const size = files[index].size;\r\n      var imagecount  = 1;\r\n      if(productimages)\r\n      {\r\n        imagecount = image_count + 1;\r\n      }\r\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n     \r\n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\r\n\r\n\r\n        \r\n    })\r\n  }\r\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\r\n    const files = e.target.files;\r\n      Object.keys(files).map((file, index) => { \r\n        const size = files[index].size;\r\n        alert(imageposition)\r\n        let productimageobj = {}\r\n        productimages.forEach(content => {\r\n          if(content.productColor === props.color && imageposition === content.imagePosition)\r\n          {\r\n            productimageobj = content;\r\n          }\r\n        })\r\n        var prodid = productimageobj.productId;\r\n        var prodcolor = productimageobj.productColor;\r\n        var imagecount  = 1;\r\n      let randomnum =  makeid(1,\"\",1)\r\n        if(productimages)\r\n        {\r\n        //  imagecount = image_count + 1;\r\n        }\r\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\r\n        const fileParts = files[index].type.split(\"/\");\r\n        const fileType = fileParts[1];\r\n        //alert(imagename)\r\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\r\n       // alert(imagename)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} >\r\n       <Card className={classes.card}>\r\n       <CardHeader\r\n       \r\n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\r\n      />\r\n                        <CardContent>\r\n                            <Grid container spacing={2} className={classes.styleFile}>\r\n                          \r\n                            {productimages.map(url => (\r\n                             <>\r\n                             {props.color === url.productColor  ? \r\n                               <div style={{ position: \"relative\" }}>\r\n                                 \r\n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\r\n                                                \r\n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\r\n                                                          <input\r\n                                                                    type=\"file\"\r\n                                                                    className=\"custom-file-input\"\r\n                                                                    multiple\r\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\r\n                                                        )}\r\n\r\n                                                                ></input>\r\n                                                      \r\n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\r\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\r\n                                                    \r\n                                                </Grid>\r\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\r\n\r\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\r\n\r\n\r\n                          </div> : null }\r\n                                </> \r\n                              ))}   \r\n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\r\n                            {\r\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\r\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\r\n                                                                <input\r\n                                                                    type=\"file\"\r\n                                                                    className=\"custom-file-input\"\r\n                                                                    multiple\r\n                                                                    onChange={e => handlenewAssetChange(e\r\n                                                                    )}\r\n                                                                ></input>\r\n                                                            </label>)\r\n                                                        }\r\n                              </Grid>                      \r\n                            </Grid>\r\n                            \r\n                      </CardContent>\r\n                </Card>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n      \r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n         \r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\r\nimport columnnames from './columnnames.json';\r\n\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('lg');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\r\n        <DialogContent>\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\r\nimport { Input } from '../../components/Input.js'\r\nimport { ProductContext, ProductProvider } from '../../context';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DiamondDetails from './DiamondDetails';\r\nimport GemstoneDetails from './GemstoneDetails';\r\nimport Variants from './Variants';\r\nimport Skupricing from './Skupricing';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport { productCategory } from '../../services/mapper';\r\nimport { useQuery } from 'react-apollo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport \"../Productupload/Productupload.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport CreateVariant from './CreateVariant';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SortHeader from './Components/SortHeader';\r\nimport columnnames from './columnnames.json';\r\nimport Productimages from './Productimages'\r\nimport FullLoader from '../../components/Loader'\r\nimport Pricedetails from './Pricedetails'\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  Switch,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { sk } from 'date-fns/locale';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  helperinput: {\r\n    '& .MuiFormHelperText-root': {\r\n      color: \"#e53935\",\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '33.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}))\r\n\r\nexport function Component(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expand, setExpand] = React.useState(false);\r\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\r\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\r\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\r\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\r\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\r\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\r\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\r\n\r\n  const [loadopen, setLoadopen] = React.useState(true);\r\n\r\n  \r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"\",\r\n    severity:\"\"\r\n  });\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleChange = panel => (event, isExpanded) => {\r\n    createVariant()\r\n    setExpand(isExpanded ? true : false);\r\n    \r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const { productCtx, setProductCtx } = useContext(ProductContext);\r\n  const [state, setstate] = useState({\r\n    create_variant: false,\r\n    duplicate_productName: \"\"\r\n  })\r\n  let prod_id = props.location.pathname.split('/')[2];\r\n  const classes = useStyle();\r\n  function keyPress(evt) {\r\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\r\n    setProductCtx({ ...productCtx, productname })\r\n  }\r\n  function changeVariant() {\r\n    setstate({ ...state, create_variant: false })\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setProductCtx({ ...productCtx, [type]: value})\r\n}\r\n\r\nconst handleinputChange =type => e => {\r\n  const re = /^[a-zA-Z \\b]+$/;\r\n  if (e.target.value === '' || re.test(e.target.value)) {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  }\r\n}\r\n// const handleinputChange = type => (event, value) => {\r\n//   alert(event.target.value)\r\n//       setProductCtx({ ...productCtx, [type]: value})\r\n// }\r\n  function dismisspricesummary()\r\n  {\r\n    setIsshowpricesummary(false)\r\n  }\r\nfunction getColumnnames(columnnames,displytype) {\r\n  let displycolumns = [];\r\n  let displycolumnnames = [];\r\n\r\n    columnnames.forEach(element => {\r\n      displycolumnnames.push(element.name)\r\n      displycolumns.push(element)\r\n    })\r\n  if(displytype === 1)\r\n  {\r\n    setDisplycolumns(displycolumnnames)\r\n    setVarientcolumns(columnnames)\r\n  }else{\r\n    setPricingcolumns(columnnames)\r\n    setDisplypricingcolumns(displycolumns)\r\n    setDisplycolumnnames(displycolumnnames)\r\n  }\r\n    \r\n   \r\n\r\n}\r\n  function createVariant() {\r\n    let diamondTypesArray = [];\r\n    // let diamondClaritySku = [];\r\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\r\n      let diamond_data = {\r\n        id: diamond_type.id,\r\n        diamondType: diamond_type.diamondType\r\n      }\r\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\r\n      return diamond_type;\r\n    })\r\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\r\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      productCtx\r\n    })\r\n    let params = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\r\n    }\r\n    fetch(GRAPHQL_DEV_CLIENT, params)\r\n      .then(res => res.json())\r\n      .then(diamondtypesData => {\r\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\r\n        })\r\n      })\r\n      .catch(console.error)\r\n\r\n    //setstate({ ...state, create_variant: true })\r\n  }\r\nasync function saveProductEditItem() {\r\n    let productEditItem = {\r\n      productId: prod_id,\r\n      productName: productCtx.productname,\r\n      themes: productCtx.themes,\r\n      styles: productCtx.prod_styles,\r\n      occassions : productCtx.occassions,\r\n      collections : productCtx.collections,\r\n      stonecount : productCtx.stonecount,\r\n      stonecolour : productCtx.stonecolour,\r\n      gender : productCtx.product_gender\r\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\r\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\r\n      // transSkuListsByProductId: productCtx.editVariants,\r\n      // productImages:productCtx.productImages,\r\n      // createVariants: productCtx.createVariantList\r\n    }\r\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\r\n\r\n    console.log(\"************\")\r\n    console.log(JSON.stringify(productEditItem))\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"This is successfully saved\",\r\n        severity:\"success\"\r\n      })\r\n      handleClick();\r\n      console.log(JSON.stringify(productEditItem))\r\n      // setTimeout(()=>{  window.location='/productlist'},1000)\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"You are not edit product\",\r\n        severity:\"info\"\r\n      })\r\n      handleClick();\r\n    }\r\n    // const opts = {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(productEditItem)\r\n    // }\r\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\r\n    // .then(res=>res.json())\r\n    // .then(fetchValue=>{\r\n\r\n    // })\r\n    // .catch(console.error)\r\n    console.log(JSON.stringify(productEditItem))\r\n    // props.history.push('/productlist')\r\n  }\r\n\r\n  const handledisableproduct = name => async event => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n    let bodycontent = {\r\n      \"productid\": prod_id,\r\n      \"isactive\" : event.target.checked\r\n    }\r\n    let esbody = {\r\n      \"product_id\": prod_id\r\n    }\r\n    var endpoint = '/reindex'\r\n    if(event.target.checked)\r\n    {\r\n      endpoint = '/esearch_forceindex'\r\n    }\r\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\r\n\r\n    let esresponse =  await sendNetworkRequest(endpoint, {}, esbody)\r\n    let updateproductattr =  await sendNetworkRequest('/updateproductattribute', {}, esbody)\r\n\r\n    console.log(\"************\")\r\n    console.log(JSON.stringify(bodycontent))\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"This is successfully saved\",\r\n        severity:\"success\"\r\n      })\r\n      handleClick();\r\n        // setTimeout(()=>{  window.location='/productlist'},1000)\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message:\"You are not edit product\",\r\n        severity:\"info\"\r\n      })\r\n      handleClick();\r\n    }\r\n  };\r\n async function showpricesummary(sku)\r\n  {\r\n    let response =  await sendNetworkRequest('/viewskupricesummary/'+sku, {}, null)\r\n    let price_summary = []\r\n    let skuprice = response.price_summary.skuprice;\r\n    // let cost_obj = {\r\n    //   component: \"Cost Price\",\r\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\r\n    //   tax : skuprice.cost_price_tax,\r\n    //   total : skuprice.cost_price\r\n\r\n    // }\r\n    // price_summary.push(cost_obj)\r\n\r\n    // let selling_price = {\r\n    //   component: \"Selling Price\",\r\n    //   price : skuprice.selling_price ,\r\n    //   tax : skuprice.selling_price_tax,\r\n    //   total : skuprice.selling_price\r\n\r\n    // }\r\n    // price_summary.push(selling_price)\r\n    // let discount_price = {\r\n    //   component: \"discount Price\",\r\n    //   price : skuprice.discount_price ,\r\n    //   tax : skuprice.discount_price_tax,\r\n    //   total : skuprice.discount_price\r\n\r\n    // }\r\n    // price_summary.push(discount_price)\r\n    // let markup_price = {\r\n    //   component: \"markup Price\",\r\n    //   price : skuprice.markup_price ,\r\n    //   tax : skuprice.markup_price_tax,\r\n    //   total : skuprice.markup_price\r\n\r\n    // }\r\n\r\n    let metalprice = response.price_summary.metals;\r\n    metalprice.forEach(element => {\r\n        let obj = {\r\n          component : element.material_name,\r\n          cost_price : element.cost_price,\r\n          selling_price : element.selling_price,\r\n          markup_price : element.markup,\r\n          discount_price : element.discount_price\r\n\r\n\r\n        }\r\n        price_summary.push(obj)\r\n    })\r\n\r\n    let mateialprice = response.price_summary.materials;\r\n    mateialprice.forEach(element => {\r\n        let obj = {\r\n          component :  element.material_name,\r\n          cost_price : element.cost_price,\r\n          selling_price : element.selling_price,\r\n          markup_price : element.markup,\r\n          discount_price : element.discount_price\r\n\r\n\r\n        }\r\n        price_summary.push(obj)\r\n    })\r\n    let obj = {\r\n      component : \"SKU Price\",\r\n      cost_price : skuprice.cost_price,\r\n      selling_price : skuprice.selling_price,\r\n      markup_price : skuprice.markup_price,\r\n      discount_price : skuprice.discount_price\r\n\r\n\r\n    }\r\n    price_summary.push(obj)\r\n//alert(JSON.stringify(metalprice))\r\n //   price_summary.push(markup_price)\r\n    setPricesummaryvalue(price_summary)\r\n    setIsshowpricesummary(true)\r\n  }\r\n  function Skupricesync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData\r\n    }\r\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\r\n\r\n  }\r\n  function backProductList() {\r\n    window.location='/productlist';\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        var genders = fatchvalue.data.productListByProductId.gender\r\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\r\n        let sizes_arr = []\r\n        if(size_obj)\r\n        {\r\n          let sizes = size_obj.split(',')\r\n          sizes.forEach(element => {\r\n            \r\n            sizes_arr.push(element)\r\n          });\r\n        }\r\n        let gender_arr = []\r\n        if(genders)\r\n        {\r\n        genders = genders.split(',')\r\n        genders.forEach(element => {\r\n          let gender_obj = {\r\n            label: element\r\n          }\r\n          gender_arr.push(gender_obj)\r\n        });\r\n      }\r\n        let defaultcolour = \"\";\r\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\r\n       images_arr.forEach(element => {\r\n          if(element.isdefault)\r\n          {\r\n            defaultcolour = element.productColor\r\n          }\r\n      });\r\n      var metalcolors = []\r\n      Array.prototype.insert = function ( index, item ) {\r\n        this.splice( index, 0, item );\r\n    };\r\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\r\n     metalcolor.forEach(colorobj => {\r\n          if(colorobj.productColor === defaultcolour)\r\n          {\r\n            colorobj['isdefault'] = true\r\n            metalcolors.insert(0, colorobj);\r\n\r\n          }else\r\n          {\r\n            colorobj['isdefault'] = false\r\n            metalcolors.push(colorobj)\r\n          }\r\n     })\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productname: fatchvalue.data.productListByProductId.productName,\r\n          isactive: fatchvalue.data.productListByProductId.isactive,\r\n          product_type: fatchvalue.data.productListByProductId.productType,\r\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\r\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\r\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\r\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\r\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\r\n          productMetalColor: metalcolors,\r\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\r\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\r\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\r\n          variant_size: sizes_arr,\r\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\r\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\r\n          product_gender:gender_arr,\r\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\r\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\r\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\r\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\r\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\r\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\r\n          // productDiamondClarity:diamondClaritySku,\r\n        })\r\n        setstate({\r\n          ...state,\r\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\r\n        })\r\n        setLoadopen(false)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  return (\r\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\r\n           <Grid container>\r\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\r\n             <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n        </React.Fragment>\r\n          <Grid item container spacing={1} >\r\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\r\n              \r\n              \r\n              <TextField\r\n                    className={classes.helperinput}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    pattern=\"[a-zA-Z]*\"\r\n                    value={productCtx.productname}\r\n                    id=\"productname\"\r\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                    name=\"productname\"\r\n                    label=\"Product Name\"\r\n                    //onInput={keyPress.bind(this)}\r\n                    onChange={handleinputChange('productname')}\r\n\r\n                   //onChange={(e)=>handleinputChange(e,'productname')}\r\n                  />\r\n                <TextField\r\n                  className={classes.helperinput}\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={productCtx.product_categoy}\r\n                  id=\"product_category\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\r\n                  name=\"product_category\"\r\n                  label=\"Product Category\"\r\n  \r\n                />\r\n                <TextField\r\n                  className={classes.helperinput}\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={productCtx.product_type}\r\n                  id=\"product_type\"\r\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  name=\"product_type\"\r\n                  label=\"Product Type\"\r\n  \r\n                />\r\n                  <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Vendor Name\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={productCtx.vendorcode}\r\n                        id=\"productvendorcode\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        name=\"Vendor Name\"\r\n                        />\r\n  \r\n                 <TextField\r\n                  className={classes.helperinput}\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  defaultValue={productCtx.productname}\r\n                  id=\"seo_text\"\r\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                  \r\n                  name=\"seo_text\"\r\n                  label=\"Minimum Order Quantity\"\r\n  \r\n                /> \r\n               <TextField\r\n                  className={classes.helperinput}\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  defaultValue={productCtx.productname}\r\n                  id=\"url\"\r\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                  \r\n                  name=\"url\"\r\n                  label=\"Maximum Order Quantity\"\r\n                /> \r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      disabled\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.productmaterials}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n                 <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      disabled\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.productMetalColor}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Metal Colour\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n                      <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      disabled\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.productMetalPurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Metal Purity\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n  \r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.product_gender}\r\n                      getOptionLabel={option => option.label}\r\n                      onChange={handleoptionChange('product_gender')}\r\n                      options={productCtx.masterData.gender}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Gender\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n  \r\n                <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.label}\r\n                      defaultValue={productCtx.themes}\r\n                      options={productCtx.masterData.themes}\r\n                      value={productCtx.themes}\r\n                      onChange={handleoptionChange('themes')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Themes\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n                      <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.label}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      options={productCtx.masterData.styles}\r\n                      onChange={handleoptionChange('prod_styles')}\r\n                      value={productCtx.prod_styles}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Styles\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n  \r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.occassions}\r\n                      getOptionLabel={option => option.label}\r\n                      defaultValue={productCtx.occassions}\r\n                      options={productCtx.masterData.occasions}\r\n                      onChange={handleoptionChange('occassions')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Occasions\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n              <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.collections}\r\n                      getOptionLabel={option => option.label}\r\n                      defaultValue={productCtx.collections}\r\n                      options={productCtx.masterData.collections}\r\n                      onChange={handleoptionChange('collections')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Collections\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n                  <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.stonecount}\r\n                      getOptionLabel={option => option.label}\r\n                      defaultValue={productCtx.stonecount}\r\n                      options={productCtx.masterData.stones}\r\n                      onChange={handleoptionChange('stonecount')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"No of Stones\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n  \r\n                  <Autocomplete\r\n                      multiple\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      value={productCtx.stonecolour}\r\n                      getOptionLabel={option => option.label}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      options={productCtx.masterData.gemstonecolor}\r\n                      onChange={handleoptionChange('stonecolour')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Stone Colour\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n              \r\n              <FormControlLabel\r\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\r\n\r\n                  control={\r\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\r\n                  }\r\n                />\r\n              \r\n              \r\n              <Grid item container style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"16px\"\r\n            }}>\r\n              <Grid item>\r\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\r\n                  Update\r\n             </Button>\r\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\r\n                  Back\r\n              </Button> */}\r\n              </Grid>\r\n            </Grid>\r\n              \r\n              </Grid>\r\n             \r\n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\r\n              <Grid container item md={6}>\r\n              </Grid>\r\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\r\n              <DiamondDetails diamond={productCtx.diamondlist} />\r\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\r\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\r\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\r\n\r\n              <Grid style={{\r\n                \r\n              }}>\r\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\r\n               \r\n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\r\n                    <ExpansionPanelSummary\r\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\r\n                      aria-controls=\"panel1c-content\"\r\n                      id=\"panel1c-header\"\r\n                    >\r\n                      <div className={classes.column}>\r\n                        <Typography className={classes.heading}>Add New variant</Typography>\r\n                      </div>\r\n                    \r\n                    </ExpansionPanelSummary>\r\n                    <Divider />\r\n                    <ExpansionPanelDetails className={classes.details}>\r\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {/* <ExpansionPanelActions>\r\n                      <Button size=\"small\">Cancel</Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Save\r\n                      </Button>\r\n                    </ExpansionPanelActions> */}\r\n                    </ExpansionPanel>\r\n                    \r\n                \r\n                </Grid>\r\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\r\n\r\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\r\n                  \r\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \r\n              <SortHeader title={\"Pricing Table\"} columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\r\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n                        Price Run For This Product\r\n              </Button>\r\n            </Grid>\r\n              {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues}/> : null}\r\n              <Skupricing variants={productCtx.variants} onShow={showpricesummary} columns={displypricingcolumns} displycolumns={displycolumnnames} />\r\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\r\n              {productCtx.productMetalColor.map(colors => (\r\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\r\n\r\n              ))}\r\n            \r\n            </Grid>\r\n            \r\n            \r\n          </Grid>\r\n        </Grid>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: 'auto'\r\n  },\r\n}));\r\n\r\nexport const ProductAttributes = withRouter(props => {\r\n\r\n  const classes = useStyles2();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\r\n  </div>\r\n  if (error) return <div>error</div>\r\n\r\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\r\n    <Component {...props} />\r\n  </ProductProvider>\r\n  return _content\r\n});\r\nexport default withRouter(ProductAttributes);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = [\r\n        {\r\n            id:1,\r\n            name:\"Published\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:2,\r\n            name:\"AVB\",\r\n            isActive:false,      \r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Price\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:4,\r\n            name:\"Type\",\r\n            isActive:  false,      \r\n        },\r\n        {\r\n            id:5,\r\n            name:\"Flavour\",\r\n            isActive: false ,     \r\n        },\r\n        {\r\n            id:6,\r\n            name:\"Flavour\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:7,\r\n            name: \"Material\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:8,\r\n            name:\"Medium\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:9,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:10,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:11,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:12,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:13,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:14,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:15,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    ]\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n                data.isActive = false;\r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                    onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form, Grid,Select } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Columns from \"./columns\"\r\nimport './table.css'\r\n\r\n\r\n\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n      <Grid lg={2} md={2} sm={3}>\r\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\r\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\r\n\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\r\n\r\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\r\n          \r\n              <Select\r\n              className={classes.notchedOutline}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                \r\n        >\r\n         \r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\r\n        </Select>\r\n         \r\n            <Menu\r\n              id=\"lock-menu\"\r\n              // anchorEl={anchorEl}\r\n\r\n              keepMounted\r\n              // open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n\r\n\r\n                  onClick={event => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n\r\n\r\n\r\n        </Popover>\r\n\r\n      </Grid>\r\n      <Grid lg={10} md={10} sm={9}>\r\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Columns from './columns';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport './table.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        color:\"#06847B\",\r\n        border: \"1px solid #7bbcb7\",\r\n        '&:hover':{\r\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n            border: \"1px solid #06847B\",\r\n        }\r\n      },\r\n\r\n}));\r\n\r\nfunction SortHeader(){\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n \r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(false);\r\n      };\r\n      const open = Boolean(anchorEl);\r\n      const id = open ? 'simple-popover' : undefined;\r\n    \r\n     \r\n        return(\r\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\r\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \r\n                </Grid>\r\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\r\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\r\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\r\n                        </Button>\r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <Columns columnclose={handleClose}/>\r\n                        </Popover>\r\n\r\n\r\n\r\n                    </Grid>\r\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n\r\n}\r\nexport default SortHeader","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport {TableBody,Grid} from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Filterandsearch from './filterandsearch';\r\nimport SortHeader from './SortHeader';\r\nimport './table.css';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\r\n  return { name, calories, fat, carbs, protein , protein1, protein2};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\r\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\r\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\r\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\r\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n   <React.Fragment >\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n    </React.Fragment> \r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n     \r\n    <Toolbar\r\n    \r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\r\n          Nutrition\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            {/* <FilterListIcon /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n    width:\"100%\", \r\n    overflowX:\"scroll\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n      \r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };    \r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \r\n                <FormControlLabel\r\n               \r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                // label=\"Dense padding\"\r\n            />\r\n        </div>    */}\r\n\r\n\r\n        <SortHeader lg={12} md={12} sm={12}  />\r\n\r\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n        <Filterandsearch/>\r\n\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n            \r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const isItemSelected = isSelected(row.name);\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\r\n                    </TableRow>\r\n                    \r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n        \r\n              )}\r\n                   \r\n                     \r\n              \r\n              \r\n            </TableBody>\r\n          </Table>\r\n        \r\n        \r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      </Grid>  \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport './table.css'\r\nfunction newmaterial1() {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ProductTable />\r\n        </div>\r\n    )\r\n}\r\nexport default newmaterial1","import React from 'react';\r\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.css'\r\n\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcategory(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\r\n            </Grid>\r\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\r\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={12} xs={12}>\r\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\r\n                        <div className=\"z\">\r\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                \r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedA}\r\n                                        onChange={ handleChange('checkedA')}\r\n                                        value=\"checkedA\"\r\n                                        \r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                         </div>  \r\n\r\n                        \r\n                    </Grid>\r\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedB}\r\n                                        onChange={ handleChange('checkedB')}\r\n                                        value=\"checkedB\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\r\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedC}\r\n                                        onChange={ handleChange('checkedC')}\r\n                                        value=\"checkedC\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Cancel\r\n                            </Button>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Save\r\n                            </Button>\r\n                    </Grid>\r\n                    <Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-boost';\r\nimport route from './route';\r\nimport {\r\n    Dashboard, Login, Productupload, Configuration,Manageusers,Customerdetails,\r\n    Priceupdate, Vendorprice, Vendorlist, Markupprice,Goldpriceupdate,Userwishlist,\r\n    Productlist, Materiallist, Masterorderstatus, Shippingzones,Manageadminusers,\r\n    Shipmentsettings,Addshippingattributes,Userconfiguration,Masterroles,Masterscreens,Useraddresses,Addtaxattributes,OrderManagementDetails,\r\n    Materialmaster, CategoryList, Mastermetalcolors, Masterpurities, Masterdesigns, Shippingattributes, Voucherdiscount, Masterstyles, Masterthemes, Masteroccassions, Masterpaymentstatus, Salediscount, Masterweights, Taxsettings, Masterstones, Masterstonecolors, Masterstoneshapes, Masterattribute, Mastercategories, OrderList, Mastergemsettings, Seopriority, Mastergenders, Mastergemshapes, Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes, Taxsetup, Masterdiamonds, Masterdiamondsettings, DiscountList, VoucherdiscountListing, Mastercollections, Masterpages\r\n} from '../screens';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { NetworkProvider } from '../context/NetworkContext';\r\nimport { GlobalContext } from '../context';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\r\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\r\nimport { ProductContext, ProductProvider } from '../context/ProductuploadContext';\r\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\r\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\r\n\r\nconst MainApp = () => {\r\n\r\n    const { globalCtx } = React.useContext(GlobalContext);\r\n    const { productCtx } = React.useContext(ProductContext);\r\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\r\n\r\n    return (\r\n        <ApolloProvider client={client} >\r\n            {/* <ProductProvider > */}\r\n            <NetworkProvider>\r\n                <Switch>\r\n                    <PrivateRoute exact path=\"/\" component={Login} />\r\n                    <Route path={route.login} component={Login} />\r\n                    <PrivateRoute path={route.dashboard} component={Dashboard} />\r\n                    <PrivateRoute path={route.productupload} component={Productupload} />\r\n                    <PrivateRoute path={route.configuration} component={Configuration} />\r\n                    <PrivateRoute path={route.vendor} component={Vendorlist} />\r\n                    <PrivateRoute path={route.productlist} component={Productlist} />\r\n                    <PrivateRoute path={route.materiallist} component={CategoryList} />\r\n                    <PrivateRoute path={route.editCategory} component={Editcategory} />\r\n                    <PrivateRoute path={route.materiallistpage} component={newmaterial} />\r\n                    <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\r\n                    <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\r\n                    <PrivateRoute path={route.priceupdate} component={Priceupdate} />\r\n                    <PrivateRoute path={route.orderlist} component={OrderList} />\r\n                    <PrivateRoute path={route.userorders} component={OrderList} />\r\n                    <PrivateRoute path={route.address} component={Useraddresses} />\r\n\r\n              \r\n                    <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\r\n                    <PrivateRoute path={route.markupPrice} component={Markupprice} />\r\n                    <PrivateRoute path={route.salediscount} component={Salediscount} />\r\n                    <PrivateRoute path={route.taxsetup} component={Taxsetup} />\r\n                    <PrivateRoute path={route.taxsettings} component={Taxsettings} />\r\n                    <PrivateRoute path={route.category} component={Mastercategories} />\r\n                    <PrivateRoute path={route.masterattributes} component={Masterattribute} />\r\n                    <PrivateRoute path={route.masterstones} component={Masterstones} />\r\n                    <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\r\n                    <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\r\n                    <PrivateRoute path={route.weights} component={Masterweights} />\r\n                    <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\r\n                    <PrivateRoute path={route.masterroles} component={Masterroles} />\r\n                    <PrivateRoute path={route.masterpages} component={Masterscreens} />\r\n                    <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\r\n                    <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\r\n                    <PrivateRoute path={route.manageusers} component={Manageusers} />\r\n                    <PrivateRoute path={route.customerdetails} component={Customerdetails} />\r\n                    <PrivateRoute path={route.userwishlist} component={Userwishlist} />\r\n                    <PrivateRoute path={route.orderdetails} component={OrderManagementDetails} />\r\n\r\n                    \r\n                    \r\n                    <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\r\n\r\n                    <PrivateRoute path={route.masterstyles} component={Masterstyles} />\r\n                    <PrivateRoute path={route.masterthemes} component={Masterthemes} />\r\n\r\n\r\n                    <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\r\n                    <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\r\n                    <PrivateRoute path={route.masterpurities} component={Masterpurities} />\r\n                    <PrivateRoute path={route.salediscountlist} component={DiscountList} />\r\n                    <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\r\n                    <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\r\n                    <PrivateRoute path={route.mastercollections} component={Mastercollections} />\r\n                    <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\r\n                    <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\r\n                    <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\r\n                    <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\r\n                    <PrivateRoute path={route.earringbacking} component={Earringbacking} />\r\n                    <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\r\n                    <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\r\n                    <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\r\n                    <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\r\n                    <PrivateRoute path={route.shippingzones} component={Shippingzones} />\r\n                    <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\r\n                    <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\r\n                    <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\r\n\r\n\r\n                    \r\n\r\n                    <PrivateRoute path={route.gender} component={Mastergenders} />\r\n                    <PrivateRoute path={route.seo} component={Seopriority} />\r\n\r\n\r\n                    <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\r\n\r\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\r\n\r\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\r\n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\r\n                    <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\r\n\r\n                </Switch>\r\n            </NetworkProvider>\r\n            {/* </ProductProvider> */}\r\n        </ApolloProvider>\r\n    )\r\n}\r\n\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './App.css';\r\nimport MainApp from './routes';\r\nimport { GlobalProvider } from './context';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport theme from './theme';\r\n\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n// const theme = createMuiTheme({\r\n//   typography: {\r\n//     fontFamily: [\r\n   \r\n//       'Roboto'\r\n  \r\n//     ].join(','),\r\n//   },\r\n// });\r\nfunction App() {\r\n  \r\n  return (\r\n    <GlobalProvider>\r\n    <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <CssBaseline />\r\n            <Router>\r\n              <MainApp />\r\n            </Router>\r\n        </div>\r\n        </MuiThemeProvider  >\r\n    </GlobalProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}