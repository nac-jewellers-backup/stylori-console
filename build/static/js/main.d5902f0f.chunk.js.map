{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/Banners/banners.js","screens/Banners/styloribanner/components/stylorilandingpage.js","screens/Banners/styloribanner/styloribanner.js","screens/Banners/silverbanner/components/silverlandingpage.js","screens/Banners/silverbanner/silverbanner.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","banners","styloribanner","silverbanner","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","ALLMASTERRINGSIZE","ALLSTYLORILANDINGBANNERS","ALLSTYLORISILVERLANDINGBANNERS","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","prod_desc","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","_getMasterRingSize","then","res","allMasterRingsSizes","getMasterRingSize","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Productlist","responseCSV","setMasters","setFilterparams","setDataCSV","_fetchCSVdata","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","entries","fetchCSVdata","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","onAdd","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","trans_sku_list","sku_weight","diamond_type","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","Banners","link_style","StyloriLandingPage","alllandingbanner","setalllandingbanner","web","createlandingbanner","setCreatelandingbanner","_styloribannerfetch","allStyloriBanners","styloribannerfetch","onChangeData","onsubmitvalue","create_banner_data","Number","now","toISOString","Styloribanner","stylorilandingpage","SilverLandingPage","allStyloriSilverBanners","Silverbanner","silverlandingpage","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","colSpan","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","_showpricesummary","sku","price_summary","skuprice","obj","material_name","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5902f0f.chunk.js","sourcesContent":["const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  banners: \"/banners\",\n  styloribanner: \"/styloribanner\",\n  silverbanner : \"/silverbanner\"\n};\n\nexport default route;\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(condition: { material: $vendorCode }, orderBy: UPDATED_AT_DESC) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(condition: { vendorCode: $vendorCode, rateType: $ratetype }) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(input: { productId: $productId, productListPatch: { isactive: $isActive } }) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(input: { id: $voucherId, voucherPatch: { isActive: $isActive } }) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst ALLSTYLORILANDINGBANNERS = `\nquery MyQuery {\n  allStyloriBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n`;\nconst ALLSTYLORISILVERLANDINGBANNERS = `\nquery MyQuery {\n  allStyloriSilverBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n\n`;\n\nconst CREATESTYLORILANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createStyloriBanner(\n    input: {\n      styloriBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst DELETESTYLORILANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriBannerById(input: {id: $id}) {\n    styloriBanner {\n      id\n      mobile\n      position\n      url\n      web\n      \n    }\n  }\n}`;\n\nconst CREATESILVERLANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}`;\nconst DELETESILVERLANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriSilverBannerById(input: {id: $id}) {\n    styloriSilverBanner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`\nexport {\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  ALLSTYLORILANDINGBANNERS,\n  CREATESTYLORILANDINGBANNER,\n  DELETESTYLORILANDINGBANNER,\n  ALLSTYLORISILVERLANDINGBANNERS,\n  CREATESILVERLANDINGBANNER,\n  DELETESILVERLANDINGBANNER\n};","import { gql } from \"apollo-boost\";\n\nexport const PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const USERORDERS = gql`\n  query($userid: UUID!) {\n    allOrders(\n      filter: { userProfileByUserProfileId: { id: { equalTo: $userid } } }\n    ) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n\n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  }\n`;\nexport const ORDERS = (orderid) => gql`query {\n  allOrders(filter:  ${\n    orderid\n      ? `{userProfileId: {equalTo: \"${orderid}\"}}`\n      : `{id: {isNull: false}}`\n  },orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`;\n\nexport const MATERIALMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const VOUCHERMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n\n    allMasterThemes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        shortCode\n        diamondColor\n        diamondClarity\n        id\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        name\n        alias\n        id\n      }\n    }\n  }\n`;\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`;\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api.stylori.com\";\nexport const API_URL = \"https://api.stylori.com\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.com/graphql\";\nexport const URL = \"https://console.stylori.com\";\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(initialNetworkCtx.networkCtx);\n\n  return (\n    <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}>{props.children}</NetworkContext.Provider>\n  );\n};\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: \"\",\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\n      \"Diamond\",\n      \"Gold\",\n      \"Gemstone\",\n      \"Solitaire\",\n      \"Silver\",\n      \"Platinum\",\n    ],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25,\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: \"\",\n    prod_styles: \"\",\n    occassions: \"\",\n    collections: \"\",\n    stonecount: \"\",\n    stonecolour: \"\",\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n    prod_desc : \"\"\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n  );\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(\n          props.value.data,\n          props.value.mapper,\n          props.value.mappertype\n        ),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport gradients from \"../../../../utils/gradients\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { GlobalContext } from \"../../../../context\";\n\nimport { Card, CardContent, CardMedia, Typography, Divider, Link, Avatar } from \"@material-ui/core\";\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: true,\n  },\n  password: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  card: {\n    maxWidth: \"100%\",\n    overflow: \"unset\",\n    display: \"flex\",\n    position: \"relative\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n      width: \"50%\",\n    },\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4),\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: \"absolute\",\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32,\n  },\n  loginForm: {},\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  person: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1),\n    },\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((formState) => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (formState.isValid) {\n      //alert(JSON.stringify(formState.values))\n      let signinobj = await sendNetworkRequest(\"/api/auth/signin\", {}, formState.values);\n\n      if (signinobj.statuscode === 200) {\n        localStorage.setItem(\"accesstoken\", signinobj.accessToken);\n\n        let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n        let pages = [];\n        let pagepermissions = [];\n        let bannerpage = { pagename: \"Banners\", pageurl: \"/banners\", is_view: true, is_write: true };\n    \n        debugger;\n        console.log(pageaccess);\n        // pageaccess.pages.push(bannerpage);\n        pageaccess.pages.forEach((element) => {\n          pages.push(element.pageurl);\n          // pagepermissions[element.pageurl] = {\n          //   isread : element.is_view,\n          //   iswrite : element.is_write\n          // }\n          if (element.is_write) {\n            pagepermissions.push(element.pageurl);\n          }\n        });\n        // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n        //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n        localStorage.setItem(\"accesspages\", pages);\n        localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n        props.history.push(\"/productlist\");\n      } else {\n        setShowmessage(signinobj.message);\n        setOpen(true);\n      }\n    } else {\n      alert(\"has some error\");\n    }\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = (field) => (formState.touched[field] && formState.errors[field] ? true : false);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h3\">\n          Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">{/* Sign in on the internal platform */}</Typography>\n\n        <form {...rest} className={clsx(classes.root, className)} autoComplete={\"off\"} onSubmit={handleSubmit}>\n          <div className={classes.fields}>\n            <TextField\n              error={hasError(\"email\")}\n              fullWidth\n              helperText={hasError(\"email\") ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || \"\"}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError(\"password\")}\n              fullWidth\n              helperText={hasError(\"password\") ? formState.errors.password[0] : null}\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || \"\"}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button className={classes.submitButton} color=\"primary\" size=\"large\" type=\"submit\" variant=\"contained\">\n            Log in\n          </Button>\n          <Snackbar\n            open={open}\n            autoHideDuration={6000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"error\">\n              {showmessage}\n            </Alert>\n          </Snackbar>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  async function getMasterRingSize() {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }\n  React.useEffect(() => {\n    getMasterRingSize();\n  }, []);\n  React.useEffect(() => {}, [productCtx]);\n\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n        } else {\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Male\") {\n            minvalue = 13;\n            maxvalue = 25;\n            default_size = 15;\n          }\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Female\") {\n            minvalue = 8;\n            maxvalue = 23;\n            default_size = 12;\n          }\n\n          for (var i = minvalue; i < maxvalue; i++) {\n            selected_sizes.push({\n              value: i,\n              label: \"\" + i,\n            });\n          }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({ ...productCtx, product_type_shortcode: \"\", product_type: \"\", size, selected_sizes: \"\" });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({ ...productCtx, [type]: value, vendorleadtime: value.vendorDelivaryDays });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //     minvalue = 13;\n    //     maxvalue = 26;\n    //     default_size = \"\" + 15;\n    //   }\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //     minvalue = 8;\n    //     maxvalue = 24;\n    //     default_size = \"\" + 12;\n    //   }\n\n    //   for (var i = minvalue; i < maxvalue; i++) {\n    //     selected_sizes.push(\"\" + i);\n    //     sizes.push(\"\" + i);\n    //   }\n    // }\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        debugger\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    setProductCtx({ ...productCtx, [type]: value, sizes, selected_sizes, default_size });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n        size = \"13-25\";\n        minvalue = 13;\n        maxvalue = 26;\n      }\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n        size = \"8-18\";\n        minvalue = 8;\n        maxvalue = 19;\n      }\n\n      for (var i = minvalue; i < maxvalue; i++) {\n        selected_sizes.push({\n          value: i,\n          label: \"\" + i,\n        });\n      }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({ ...productCtx, size, [type]: e, materials, selected_sizes });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({ ...productCtx, [type]: selectedOption, steps, material_names });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map((option) => option.label)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map((option) => option.label)}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={productCtx.error_message.material_names}\n                                  fullWidth\n                                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map((option) => option.label)}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel value=\"No\" control={<Radio color=\"primary\" />} label=\"No\" labelPlacement=\"right\" />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\"default_metal_colour\")}\n                            options={productCtx.metalcolour.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_metal_colour}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\"default_metal_purity\")}\n                            options={productCtx.metalpurity.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={productCtx.error_message.default_metal_purity}\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"BA\" || productCtx.product_type.shortCode === \"R\" || productCtx.product_type.shortCode === \"SK\" || productCtx.product_type.shortCode === \"K\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type && productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map((option) => option.label)}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Checkbox, Card, CardHeader, TextField, Divider, Chip, CardContent } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Select from \"react-select\";\nimport { Input } from \"../../components/Input.js\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { ProductContext } from \"../../context\";\nimport Box from \"@material-ui/core/Box\";\nimport SelectPlaceholder from \"../../components/SelectPlaceholder.js\";\n\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const materialChange = (type) => (e) => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked };\n    setProductCtx({ ...productCtx, selected_metal_colour });\n  };\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  console.log(productCtx);\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title=\"Type of Fit\" />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container spacing={1}>\n                <Grid item container xs={12} sm={12}>\n                  <Grid item xs={6} sm={3}>\n                    {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange(\"product_code\")}\n                      name=\"size\"\n                      value={\"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)}\n                    />\n                  </Grid>\n                </Grid>\n                {[\"R\", \"B\"].includes(productCtx.product_type.shortCode) ? null : (\n                  <>\n                    <Grid item xs={4}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Height\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"metal_height\")}\n                        value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n                      />\n                    </Grid>\n\n                    <Grid item xs={4}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Width\"\n                        name=\"size\"\n                        onChange={handleInputChange(\"metal_width\")}\n                        value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n                        autoComplete=\"size\"\n                      />\n                    </Grid>\n                  </>\n                )}\n\n                {productCtx.product_type === \"Bracelets\" ? (\n                  <Grid item xs={6}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id=\"size\"\n                      label=\"Length\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange(\"metal_length\")}\n                      value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n                    />\n                  </Grid>\n                ) : null}\n              </Grid>\n            </CardContent>\n          </Card>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader\n              title=\"Enter weights for different Purity\n\"\n            />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container spacing={1}>\n                <Grid item xs={12}></Grid>\n                {productCtx.metalpurity.map((row) => (\n                  <Grid item container xs={12} spacing={2}>\n                    <Grid item xs={6}>\n                      <Input\n                        variant=\"outlined\"\n                        disabled\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Purity\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        value={row.name}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        error={productCtx.error_message[`${row.name}_metal_weight`]}\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(`${row.name}_metal_weight`)}\n                        value={productCtx[`${row.name}_metal_weight`] === 0 ? \"\" : productCtx[`${row.name}_metal_weight`]}\n                      />\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title=\"Type of Fit\" />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container xs={12} sm={12} spacing={2}>\n                <Grid item xs={6} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.themes}\n                    onChange={handleoptionChange(\"themes\")}\n                    options={productCtx.masterData.themes.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.prod_styles}\n                    onChange={handleoptionChange(\"prod_styles\")}\n                    options={productCtx.masterData.styles.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.prod_styles}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.occassions}\n                    onChange={handleoptionChange(\"occassions\")}\n                    options={productCtx.masterData.occasions.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.occassions}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.collections}\n                    onChange={handleoptionChange(\"collections\")}\n                    options={productCtx.masterData.collections.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.collections}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                {productCtx.material_names.indexOf(\"Gemstone\") > -1 ? (\n                  <>\n                    <Grid item xs={12} sm={6}>\n                      <Autocomplete\n                        id=\"product_category\"\n                        multiple\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.stonecount}\n                        onChange={handleoptionChange(\"stonecount\")}\n                        options={productCtx.masterData.stones.map((option) => option.label)}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"No of Stones\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Autocomplete\n                        id=\"product_category\"\n                        multiple\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.stonecolour}\n                        onChange={handleoptionChange(\"stonecolour\")}\n                        options={productCtx.masterData.gemstonecolor.map((option) => option.label)}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Stone Colour\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n\n              <Grid item xs={6}></Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibityIcon from '@material-ui/icons/Visibility';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'vendor_code', label: 'vendor code' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  \n  }, [])\n  useEffect( () => {\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\n  \n  }, [props.filterparams])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n async function showproductdetails(prod_id){\n   let bodycontent = {\n    productid : prod_id\n   }\n\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\n    console.log(response)\n  //setProductlists(response.products.rows)\n window.open(response.url, '_blank');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                                    <VisibityIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                                    {/* <Link variant=\"body2\">  */}\n                                    {row.product_name}\n\n                                    {/* </Link>   */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  \n\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {URL} from '../../config'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href= {props.url ? URL+props.url : URL+\"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n      \n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { PRODUCTLIST, PRODUCTCATEGORY, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n\n    async function fetchCSVdata() {\n      responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n      let responseData = responseCSV.res_json;\n\n      if (responseCSV.statuscode === 200) {\n        let keyData = [];\n\n        for (const [key] of Object.entries(responseData[0])) {\n          keyData.push({ label: key, key: key });\n        }\n\n        console.log(keyData);\n        setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n      }\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\n              <Button variant=\"contained\" color=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} dataCSV={dataCSV} />\n        <Product filterparams={filterparams} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  // debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n\n    \n  window.open(orderurl);\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n//   debugger\n// console.log(displaycolumnnames)\n// console.log(displaycolumns)\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Card } from \"@material-ui/core\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Input } from \"@material-ui/core\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT, METALMASTER, DELETEMAKINGCHARGE } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport Addmakingchargeprice from \"./Addmakingchargeprice\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nconst columns = [\n  { id: \"Metal\", label: \"Metal\" },\n  { id: \"Purity\", label: \"Purity\" },\n  { id: \"From Weight\", label: \"From Weight\" },\n  { id: \"To weight\", label: \"To weight\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n\n  { id: \"updated On\", label: \"updated On\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid, setVendorid] = React.useState(props.vendor);\n  const [editmc, setEditmc] = React.useState({});\n  const [puritymaster, setPuritymaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [editdiamond, setEditdiamond] = React.useState({});\n  const [mchargelist, setMchargelist] = React.useState([]);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [metalmaster, setMetalmaster] = React.useState([]);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n    add: false,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent) {\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMAKINGCHARGE, variables })\n      .then((res) => {\n        if (res !== null) {\n          //refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id);\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false, add: true });\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata = {};\n    bodydata[\"material\"] = makingcontent.metal.name;\n    bodydata[\"weight_start\"] = makingcontent.weightstart;\n    bodydata[\"weight_end\"] = makingcontent.weightend;\n    bodydata[\"price_type\"] = makingcontent.pricetype.label;\n    bodydata[\"vendor_code\"] = props.vendor;\n    bodydata[\"purity\"] = makingcontent.purity.shortCode;\n    bodydata[\"cost_price\"] = makingcontent.costPrice;\n    bodydata[\"selling_price\"] = makingcontent.sellingprice;\n    bodydata[\"isadd\"] = true;\n\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    setOpen(false);\n    getmclist();\n  }\n  function handleEdit(diamondData) {\n    debugger;\n    setEditmc({\n      ...editmc,\n      price: diamondData.price,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function getmclist() {\n    let bodydata = {\n      vendorid: props.vendor,\n    };\n\n    let response = await sendNetworkRequest(\"/getvendormakingprice\", {}, bodydata);\n    setMchargelist(response.gems);\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    getmclist();\n  }, [vendorid]);\n  async function handleSave(row) {\n    debugger;\n    var bodydata = {};\n    console.log(row);\n    row.price = editmc.price;\n    console.log(row);\n    debugger;\n    let variables = {\n      cost_price_id: row.id,\n\n      weight_start: row.weight_start,\n      weight_end: row.weight_end,\n      cost_price: editmc.price,\n    };\n    console.log(editmc);\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, variables);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    getmclist();\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  const handleinputChange = (type) => (e) => {\n    debugger;\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <ConformationAlert\n        title={\"Are you sure to delete?\"}\n        positivebtn={\"Yes\"}\n        negativebtn={\"No\"}\n        message={\"\"}\n        data={deleteid}\n        onSuccess={handledelete}\n        onCancel={hidedeleteconformation}\n        isshow={isconformation}\n      />\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{props.title}</Typography>\n          </Grid>\n          {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label === \"Cost Price\" ? (props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\") : column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={MAKINGCHARGEPRICELIST}\n                onCompleted={(data) => setPageCount(data.allMakingChargeSettings.totalCount)}\n                variables={{ vendorCode: props.vendor, ratetype: props.ratetype }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  debugger;\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    return (\n                      <>\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\n                          <TableRow key={row.material}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.material}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.purity}</TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightStart}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editmc.price}\n                                  onChange={handleinputChange(\"price\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.price}</Typography>\n                              )}\n                            </TableCell>\n\n                            {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n                            <TableCell align=\"left\">\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\n                            </TableCell>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell style={{ width: 170 }} align=\"left\">\n                                <Button onClick={(e) => handleSave(row)}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"left\" style={{ width: 170 }}>\n                                <Button onClick={(e) => handleEdit(row)}>\n                                  <EditIcon />\n                                </Button>\n                                <Button onClick={(e) => handleDelete(row)}>\n                                  <DeleteIcon />\n                                </Button>\n                              </TableCell>\n                            )}\n                          </TableRow>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n          </Table>\n        </div>\n        {open ? (\n          <Addmakingchargeprice\n            metals={metalmaster}\n            purities={puritymaster}\n            isadd={open}\n            title={\"Add Making Charge Setup\"}\n            actionSave={handleAdd}\n            actionclose={handleClose}\n          />\n        ) : null}\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Vendorprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setVendorlist({\n          ...vendorlist,\n          vendors: fatchvalue.data.allMasterVendors.nodes,\n        });\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} sm={12}>\n        <Typography component=\"h6\" variant=\"h6\">\n          Vendor Based Price List\n        </Typography>\n      </Grid>\n\n      <Grid item xs={4} sm={4}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          fullWidth\n          disableClearable\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name + \"   (\" + option.shortCode + \") \"}\n          options={vendorlist.vendors}\n          onChange={handlevendorchange(\"vendor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />)\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Choose Vendor\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      {vendorcode ? (\n        <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Product vendor={vendorcode} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Diamonds vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By Weight\"} vendor={vendorcode} viewtype={1} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By No of Stones\"} vendor={vendorcode} viewtype={2} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n          </Grid>\n        </>\n      ) : null}\n    </Grid>\n  );\n});\n\nexport default withRouter(Vendorprice);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { TaxList, VENDORLISTS, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    // debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\");\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button variant=\"contained\" onClick={() => searrchcontent()} color=\"primary\">\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button variant=\"contained\" onClick={() => addnewvendor()} color=\"primary\">\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(fileItem, columnname.key, \"add\");\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key].split(\",\").map((row, index) => (\n                                            <Badge\n                                              overlap=\"circle\"\n                                              anchorOrigin={{\n                                                vertical: \"top\",\n                                                horizontal: \"right\",\n                                              }}\n                                              badgeContent={\n                                                <HighlightOffIcon\n                                                  fontSize=\"small\"\n                                                  onClick={() => removeimage(row, columnname.key)}\n                                                />\n                                              }\n                                            >\n                                              <Avatar alt=\"Remy Sharp\" src={row} className={classes.small} />\n                                            </Badge>\n                                          ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.masters[columnname.mastervaluekey]}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? <Typography> {row[columnname.key]}</Typography> : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 && columnname.type != 6 && columnname.type != 8 && columnname.type != 9 ? (\n                                  <Typography> {row[columnname.key]}</Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  // debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid\n                  container\n                  xs={12}\n                  md={3}\n                  className={classes.image_container}\n                >\n                  <img\n                    src=\"\"\n                    alt=\"Product Image\"\n                    className={classes.product_image}\n                  />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.product_sku}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.sku_weight}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.diamond_type}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>\n                        Diamond Weight (Ct)\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(\n                          item.trans_sku_list.discount_price -\n                            item.trans_sku_list.markup_price\n                        )} (${\n                          item.trans_sku_list.discount === null\n                            ? \"0\"\n                            : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\n            </p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    // debugger\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    let response = await sendNetworkRequest(\n      \"/managecategories\",\n      {},\n      taxcontent\n    );\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nconst Banners = (props) => {\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          Landing Page Banner\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/styloribanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori Silver\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Banners;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORILANDINGBANNERS, CREATESTYLORILANDINGBANNER, DELETESTYLORILANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst StyloriLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORILANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESTYLORILANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    \n    let create_banner_data = {\n      position: Number(createlandingbanner.position),\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORILANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Stylori Landing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default StyloriLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport StyloriLandingPage from \"./components/stylorilandingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Styloribanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <StyloriLandingPage />\n    </>\n  );\n};\nexport default Styloribanner;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLANDINGBANNERS, CREATESILVERLANDINGBANNER, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Silver Landing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport SilverLandingPage from \"./components/silverlandingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Silverbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <SilverLandingPage />\n    </>\n  );\n};\nexport default Silverbanner;\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  console.log(accesspages);\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\") {\n      setGlobalCtx({ ...globalCtx, optionname: type, selectedIndex: 5, isExpand: !globalCtx.isExpand });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n  console.log(data);\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <StarBorder />\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                          <InboxIcon />{\" \"}\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setEditcontent({\n      id : gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n   setOpenedit(true)\n  }\n async function GemstoneSave(gemdata) {\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\n          bodydata['stoneCount'] = gemdata.gemstonecount;\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\n          bodydata['id'] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setEditcontent(null)\n      setOpenedit(false)\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditGemstone\n        diamond={editcontent}\n        onApply={GemstoneSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n        {props.displycolumns.indexOf('Quantity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.availableStockQty}\n                    id=\"qty\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"Qty\"\n                    label=\"Quantity\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('available_stock_qty')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.availableStockQty}</Typography>\n\n                  } </TableCell> : null}\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax1\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditPrice from './Components/EditPrice/EditPrice';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setEditcontent({ ...editcontent, [type]: e.target.value})\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n    setEditcontent({\n      id : diamondData.generatedSku,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n     //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n   // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(priceobj){\n    \n    var bodydata = {}\n      let list_data=props.variants;\n     list_data.map((skulistdata,index)=>{\n        if(priceobj.generatedSku === skulistdata.generatedSku){\n          skulistdata.costPrice = priceobj.editcostprice;\n          skulistdata.costPriceTax = priceobj.editcostpricetax;\n          skulistdata.sellingPrice =  priceobj.editsellingprice;\n          skulistdata.sellingPriceTax = priceobj.editsellingpricetax\n          skulistdata.markupPrice = priceobj.editmarkupprice\n          skulistdata.markupPriceTax = priceobj.editmarkuppricetax\n          skulistdata.discountPrice = priceobj.editdiscountprice\n          skulistdata.discountPriceTax = priceobj.editdiscountpricetax\n           bodydata['costPrice'] = parseFloat(editcontent.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(editcontent.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(editcontent.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(editcontent.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(editcontent.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(editcontent.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(editcontent.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(editcontent.editdiscountpricetax)\n           bodydata['marginOnSalePercentage'] = parseFloat(editcontent.marginOnSalePercentage)\n           bodydata['generatedSku'] = editcontent.id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n     sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      // setEditcontent(null)\n      // setOpenedit(false)\n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                }  </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                {props.displycolumns.indexOf('View') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\n</Button> </TableCell>: null }\n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditPrice\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = props.prod_id;\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n       \n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n    let res =   await axios.put(signedRequest, fileobj, options)\n    let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(isedit)\n      {\n      }else{\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some((store_dia) => store_dia.diamondType == diamond_type.diamondType)\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    };\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then((res) => res.json())\n      .then((diamondtypesData) => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, \"diamondtypesdata\");\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    let response = await sendNetworkRequest(\"/editproduct\", {}, productEditItem);\n\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    debugger;\n    console.log(bodycontent);\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\"/updateproductattribute\", {}, esbody);\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\"/viewskupricesummary/\" + sku, {}, null);\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: { productId: prod_id },\n      }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        var genders = fatchvalue.data.productListByProductId.gender;\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor = fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: fatchvalue.data.productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections: fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount: fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour: fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes,\n          // productDiamondClarity:diamondClaritySku,\n        });\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName)),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx.vendorcode}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"seo_text\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"seo_text\"\n            label=\"Minimum Order Quantity\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"url\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"url\"\n            label=\"Maximum Order Quantity\"\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <FormControlLabel\n            label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n            control={<Switch checked={productCtx.isactive} onChange={handledisableproduct(\"isactive\")} value=\"checkedA\" />}\n          />\n\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={9} lg={9} spacing={2} style={{ padding: \"15px\" }}>\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>Variant Creation</Grid>\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>Add New variant</Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                />\n              </ExpansionPanelDetails>\n              <Divider />\n              {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            </ExpansionPanel>\n          </Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader columnnames={columnnames.varients} getColumnnames={getColumnnames} displytype={1} />{\" \"}\n          </Grid>\n\n          <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Price Run For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues} /> : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n          {productCtx.productMetalColor.map((colors) => (\n            <Productimages color={colors.productColor} isdefault={colors.isdefault} prodimages={productCtx.product_images} />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}>\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport route from \"./route\";\nimport {\n  Dashboard,\n  Login,\n  Productupload,\n  Configuration,\n  Manageusers,\n  Customerdetails,\n  Priceupdate,\n  Vendorprice,\n  Vendorlist,\n  Markupprice,\n  Goldpriceupdate,\n  Userwishlist,\n  Productlist,\n  Materiallist,\n  Masterorderstatus,\n  Shippingzones,\n  Manageadminusers,\n  Shipmentsettings,\n  Addshippingattributes,\n  Userconfiguration,\n  Masterroles,\n  Masterscreens,\n  Useraddresses,\n  Addtaxattributes,\n  OrderManagementDetails,\n  Materialmaster,\n  CategoryList,\n  Mastermetalcolors,\n  Masterpurities,\n  Masterdesigns,\n  Shippingattributes,\n  Voucherdiscount,\n  Masterstyles,\n  Masterthemes,\n  Masteroccassions,\n  Masterpaymentstatus,\n  Salediscount,\n  Masterweights,\n  Taxsettings,\n  Masterstones,\n  Masterstonecolors,\n  Masterstoneshapes,\n  Masterattribute,\n  Mastercategories,\n  OrderList,\n  Mastergemsettings,\n  Seopriority,\n  Mastergenders,\n  Mastergemshapes,\n  Mastergemtypes,\n  Earringbacking,\n  Masterproducttypes,\n  Masterdiamondshapes,\n  Taxsetup,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  DiscountList,\n  VoucherdiscountListing,\n  Mastercollections,\n  Masterpages,\n} from \"../screens\";\nimport Banners from \"../screens/Banners/banners\";\nimport Styloribanner from \"../screens/Banners/styloribanner/styloribanner\";\nimport Silverbanner from \"../screens/Banners/silverbanner/silverbanner\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { GlobalContext } from \"../context\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport { ProductContext, ProductProvider } from \"../context/ProductuploadContext\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n          <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n          <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n          <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute path={route.orderdetails} component={OrderManagementDetails} />\n\n          <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n          <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n          <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n          <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n          <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n          <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n          <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n          <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n          <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n          <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n          <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n          <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n          <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n          <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n          <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n          <PrivateRoute path={route.banners} component={Banners} />\n          <PrivateRoute path={route.styloribanner} component={Styloribanner} />\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}